/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom2.xml
 */
package sul.protocol.hncom.status;

import java.nio.charset.StandardCharsets;
import java.util.Arrays;

import sul.utils.*;

/**
 * Notifies the node that the hub's reloadeable settings have been reloaded and that
 * the node should also reload its resources (for example plugin's settings).
 * The fields of the packet may be empty if not updated during the reload.
 */
public class Reload extends Packet {

	public static final byte ID = (byte)16;

	public static final boolean CLIENTBOUND = true;
	public static final boolean SERVERBOUND = false;

	@Override
	public int getId() {
		return ID;
	}

	/**
	 * Display name of the server, same as HubInfo.displayName.
	 */
	public String displayName;

	/**
	 * New MOTDs (message of the day) for the supported games.
	 */
	public sul.protocol.hncom.types.Motd[] motds = new sul.protocol.hncom.types.Motd[0];

	/**
	 * Main language of the server, in the same format as HubInfo.language.
	 */
	public String language;
	public String[] acceptedLanguages = new String[0];
	public String socialJson;

	public Reload() {}

	public Reload(String displayName, sul.protocol.hncom.types.Motd[] motds, String language, String[] acceptedLanguages, String socialJson) {
		this.displayName = displayName;
		this.motds = motds;
		this.language = language;
		this.acceptedLanguages = acceptedLanguages;
		this.socialJson = socialJson;
	}

	@Override
	public int length() {
		int length=Buffer.varuintLength(displayName.getBytes(StandardCharsets.UTF_8).length) + displayName.getBytes(StandardCharsets.UTF_8).length + Buffer.varuintLength(motds.length) + Buffer.varuintLength(language.getBytes(StandardCharsets.UTF_8).length) + language.getBytes(StandardCharsets.UTF_8).length + Buffer.varuintLength(acceptedLanguages.length) + Buffer.varuintLength(socialJson.getBytes(StandardCharsets.UTF_8).length) + socialJson.getBytes(StandardCharsets.UTF_8).length + 1; for(sul.protocol.hncom.types.Motd b9zm:motds){ length+=b9zm.length(); };for(String ynzbzry5:acceptedLanguages){ length+=Buffer.varuintLength(ynzbzry5.getBytes(StandardCharsets.UTF_8).length)+ynzbzry5.getBytes(StandardCharsets.UTF_8).length; } return length;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		byte[] zlcxe5bu=displayName.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)zlcxe5bu.length); this.writeBytes(zlcxe5bu);
		this.writeVaruint((int)motds.length); for(sul.protocol.hncom.types.Motd b9zm:motds){ this.writeBytes(b9zm.encode()); }
		byte[] bfzvzu=language.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)bfzvzu.length); this.writeBytes(bfzvzu);
		this.writeVaruint((int)acceptedLanguages.length); for(String ynzbzry5:acceptedLanguages){ byte[] e5ypeu=ynzbzry5.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)e5ypeu.length); this.writeBytes(e5ypeu); }
		byte[] c9afsnb=socialJson.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)c9afsnb.length); this.writeBytes(c9afsnb);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		int bvzlcxe5=this.readVaruint(); displayName=new String(this.readBytes(bvzlcxe5), StandardCharsets.UTF_8);
		int b1dr=this.readVaruint(); motds=new sul.protocol.hncom.types.Motd[b1dr]; for(int b9zm=0;b9zm<motds.length;b9zm++){ motds[b9zm]=new sul.protocol.hncom.types.Motd(); motds[b9zm]._index=this._index; motds[b9zm].decode(this._buffer); this._index=motds[b9zm]._index; }
		int bvbfzvzu=this.readVaruint(); language=new String(this.readBytes(bvbfzvzu), StandardCharsets.UTF_8);
		int bfyvdvtf=this.readVaruint(); acceptedLanguages=new String[bfyvdvtf]; for(int ynzbzry5=0;ynzbzry5<acceptedLanguages.length;ynzbzry5++){ int bvynzbzr=this.readVaruint(); acceptedLanguages[ynzbzry5]=new String(this.readBytes(bvynzbzr), StandardCharsets.UTF_8); }
		int bvc9afsn=this.readVaruint(); socialJson=new String(this.readBytes(bvc9afsn), StandardCharsets.UTF_8);
	}

	public static Reload fromBuffer(byte[] buffer) {
		Reload ret = new Reload();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "Reload(displayName: " + this.displayName + ", motds: " + Arrays.deepToString(this.motds) + ", language: " + this.language + ", acceptedLanguages: " + Arrays.deepToString(this.acceptedLanguages) + ", socialJson: " + this.socialJson + ")";
	}

}