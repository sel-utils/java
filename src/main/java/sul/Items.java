/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/items.xml
 */
package sul;

import java.util.*;

public final class Items
{

    public static final Items AIR;
    public static final Items STONE;
    public static final Items GRANITE;
    public static final Items POLISHED_GRANITE;
    public static final Items DIORITE;
    public static final Items POLISHED_DIORITE;
    public static final Items ANDESITE;
    public static final Items POLISHED_ANDESITE;
    public static final Items GRASS;
    public static final Items DIRT;
    public static final Items COARSE_DIRT;
    public static final Items PODZOL;
    public static final Items COBBLESTONE;
    public static final Items OAK_WOOD_PLANKS;
    public static final Items SPRUCE_WOOD_PLANKS;
    public static final Items BIRCH_WOOD_PLANKS;
    public static final Items JUNGLE_WOOD_PLANKS;
    public static final Items ACACIA_WOOD_PLANKS;
    public static final Items DARK_OAK_WOOD_PLANKS;
    public static final Items OAK_SAPLING;
    public static final Items SPRUCE_SAPLING;
    public static final Items BIRCH_SAPLING;
    public static final Items JUNGLE_SAPLING;
    public static final Items ACACIA_SAPLING;
    public static final Items DARK_OAK_SAPLING;
    public static final Items BEDROCK;
    public static final Items FLOWING_WATER;
    public static final Items STILL_WATER;
    public static final Items FLOWING_LAVA;
    public static final Items STILL_LAVA;
    public static final Items SAND;
    public static final Items RED_SAND;
    public static final Items GRAVEL;
    public static final Items GOLD_ORE;
    public static final Items IRON_ORE;
    public static final Items COAL_ORE;
    public static final Items OAK_WOOD;
    public static final Items SPRUCE_WOOD;
    public static final Items BIRCH_WOOD;
    public static final Items JUNGLE_WOOD;
    public static final Items OAK_LEAVES;
    public static final Items SPRUCE_LEAVES;
    public static final Items BIRCH_LEAVES;
    public static final Items JUNGLE_LEAVES;
    public static final Items SPONGE;
    public static final Items WET_SPONGE;
    public static final Items GLASS;
    public static final Items LAPIS_LAZULI_ORE;
    public static final Items LAPIS_LAZULI_BLOCK;
    public static final Items DISPENSER;
    public static final Items SANDSTONE;
    public static final Items CHISELED_SANDSTONE;
    public static final Items SMOOTH_SANDSTONE;
    public static final Items NOTE_BLOCK;
    public static final Items BED_BLOCK;
    public static final Items POWERED_RAIL;
    public static final Items DETECTOR_RAIL;
    public static final Items STICKY_PISTON;
    public static final Items COBWEB;
    public static final Items DEAD_SHRUB;
    public static final Items TALL_GRASS;
    public static final Items FERN;
    public static final Items DEAD_BUSH;
    public static final Items PISTON;
    public static final Items PISTON_HEAD;
    public static final Items WHITE_WOOL;
    public static final Items ORANGE_WOOL;
    public static final Items MAGENTA_WOOL;
    public static final Items LIGHT_BLUE_WOOL;
    public static final Items YELLOW_WOOL;
    public static final Items LIME_WOOL;
    public static final Items PINK_WOOL;
    public static final Items GRAY_WOOL;
    public static final Items LIGHT_GRAY_WOOL;
    public static final Items CYAN_WOOL;
    public static final Items PURPLE_WOOL;
    public static final Items BLUE_WOOL;
    public static final Items BROWN_WOOL;
    public static final Items GREEN_WOOL;
    public static final Items RED_WOOL;
    public static final Items BLACK_WOOL;
    public static final Items PISTON_EXTENSION;
    public static final Items DANDELION;
    public static final Items POPPY;
    public static final Items BLUE_ORCHID;
    public static final Items ALLIUM;
    public static final Items AZURE_BLUET;
    public static final Items RED_TULIP;
    public static final Items ORANGE_TULIP;
    public static final Items WHITE_TULIP;
    public static final Items PINK_TULIP;
    public static final Items OXEYE_DAISY;
    public static final Items BROWN_MUSHROOM;
    public static final Items RED_MUSHROOM;
    public static final Items GOLD_BLOCK;
    public static final Items IRON_BLOCK;
    public static final Items DOUBLE_STONE_SLAB;
    public static final Items DOUBLE_SANDSTONE_SLAB;
    public static final Items DOUBLE_STONE_WOODEN_SLAB;
    public static final Items DOUBLE_COBBLESTONE_SLAB;
    public static final Items DOUBLE_BRICK_SLAB;
    public static final Items DOUBLE_STONE_BRICK_SLAB;
    public static final Items DOUBLE_NETHER_BRICK_SLAB;
    public static final Items DOUBLE_QUARTZ_SLAB;
    public static final Items STONE_SLAB;
    public static final Items SANDSTONE_SLAB;
    public static final Items STONE_WOODEN_SLAB;
    public static final Items COBBLESTONE_SLAB;
    public static final Items BRICKS_SLAB;
    public static final Items STONE_BRICK_SLAB;
    public static final Items NETHER_BRICK_SLAB;
    public static final Items QUARTZ_SLAB;
    public static final Items BRICKS;
    public static final Items TNT;
    public static final Items BOOKSHELF;
    public static final Items MOSS_STONE;
    public static final Items OBSIDIAN;
    public static final Items TORCH;
    public static final Items FIRE;
    public static final Items MONSTER_SPAWNER;
    public static final Items OAK_WOOD_STAIRS;
    public static final Items CHEST;
    public static final Items REDSTONE_WIRE;
    public static final Items DIAMOND_ORE;
    public static final Items DIAMOND_BLOCK;
    public static final Items CRAFTING_TABLE;
    public static final Items WHEAT_CROPS;
    public static final Items FARMLAND;
    public static final Items FURNACE;
    public static final Items BURNING_FURNACE;
    public static final Items SIGN_BLOCK;
    public static final Items OAK_DOOR_BLOCK;
    public static final Items LADDER;
    public static final Items RAIL;
    public static final Items COBBLESTONE_STAIRS;
    public static final Items WALL_SIGN;
    public static final Items LEVER;
    public static final Items STONE_PRESSURE_PLATE;
    public static final Items IRON_DOOR_BLOCK;
    public static final Items WOODEN_PRESSURE_PLATE;
    public static final Items REDSTONE_ORE;
    public static final Items LIT_REDSTONE_ORE;
    public static final Items REDSTONE_TORCH;
    public static final Items ACTIVE_REDSTONE_TORCH;
    public static final Items STONE_BUTTON;
    public static final Items SNOW_LAYER;
    public static final Items ICE;
    public static final Items SNOW_BLOCK;
    public static final Items CACTUS;
    public static final Items CLAY_BLOCK;
    public static final Items SUGAR_CANES_BLOCK;
    public static final Items JUKEBOX;
    public static final Items OAK_FENCE;
    public static final Items PUMPKIN;
    public static final Items NETHERRACK;
    public static final Items SOUL_SAND;
    public static final Items GLOWSTONE;
    public static final Items NETHER_PORTAL;
    public static final Items JACK_O_LANTERN;
    public static final Items CAKE_BLOCK;
    public static final Items INACTIVE_REDSTONE_REPEATER;
    public static final Items ACTIVE_REDSTONE_REPEATER;
    public static final Items WHITE_STAINED_GLASS;
    public static final Items ORANGE_STAINED_GLASS;
    public static final Items MAGENTA_STAINED_GLASS;
    public static final Items LIGHT_BLUE_STAINED_GLASS;
    public static final Items YELLOW_STAINED_GLASS;
    public static final Items LIME_STAINED_GLASS;
    public static final Items PINK_STAINED_GLASS;
    public static final Items GRAY_STAINED_GLASS;
    public static final Items LIGHT_GRAY_STAINED_GLASS;
    public static final Items CYAN_STAINED_GLASS;
    public static final Items PURPLE_STAINED_GLASS;
    public static final Items BLUE_STAINED_GLASS;
    public static final Items BROWN_STAINED_GLASS;
    public static final Items GREEN_STAINED_GLASS;
    public static final Items RED_STAINED_GLASS;
    public static final Items BLACK_STAINED_GLASS;
    public static final Items WOODEN_TRAPDOOR;
    public static final Items STONE_MONSTER_EGG;
    public static final Items COBBLESTONE_MONSTER_EGG;
    public static final Items STONE_BRICK_MONSTER_EGG;
    public static final Items MOSSY_STONE_BRICK_MONSTER_EGG;
    public static final Items CRACKED_STONE_BRICK_MONSTER_EGG;
    public static final Items CHISELED_STONE_BRICK_MONSTER_EGG;
    public static final Items STONE_BRICKS;
    public static final Items MOSSY_STONE_BRICKS;
    public static final Items CRACKED_STONE_BRICKS;
    public static final Items CHISELED_STONE_BRICKS;
    public static final Items BROWN_MUSHROOM_BLOCK;
    public static final Items RED_MUSHROOM_BLOCK;
    public static final Items IRON_BARS;
    public static final Items GLASS_PANE;
    public static final Items MELON_BLOCK;
    public static final Items PUMPKIN_STEM;
    public static final Items MELON_STEM;
    public static final Items VINES;
    public static final Items OAK_FENCE_GATE;
    public static final Items BRICK_STAIRS;
    public static final Items STONE_BRICK_STAIRS;
    public static final Items MYCELIUM;
    public static final Items LILY_PAD;
    public static final Items NETHER_BRICK_BLOCK;
    public static final Items NETHER_BRICK_FENCE;
    public static final Items NETHER_BRICK_STAIRS;
    public static final Items NETHER_WART_PLANT;
    public static final Items ENCHANTMENT_TABLE;
    public static final Items BREWING_STAND_BLOCK;
    public static final Items CAULDRON_BLOCK;
    public static final Items END_PORTAL;
    public static final Items END_PORTAL_FRAME;
    public static final Items END_STONE;
    public static final Items DRAGON_EGG;
    public static final Items REDSTONE_LAMP;
    public static final Items ACTIVE_REDSTONE_LAMP;
    public static final Items DOUBLE_OAK_WOOD_SLAB;
    public static final Items DOUBLE_SPRUCE_WOOD_SLAB;
    public static final Items DOUBLE_BIRCH_WOOD_SLAB;
    public static final Items DOUBLE_JUNGLE_WOOD_SLAB;
    public static final Items DOUBLE_ACACIA_WOOD_SLAB;
    public static final Items DOUBLE_DARK_OAK_WOOD_SLAB;
    public static final Items OAK_WOOD_SLAB;
    public static final Items SPRUCE_WOOD_SLAB;
    public static final Items BIRCH_WOOD_SLAB;
    public static final Items JUNGLE_WOOD_SLAB;
    public static final Items ACACIA_WOOD_SLAB;
    public static final Items DARK_OAK_WOOD_SLAB;
    public static final Items COCOA_BLOCK;
    public static final Items SANDSTONE_STAIRS;
    public static final Items EMERALD_ORE;
    public static final Items ENDER_CHEST;
    public static final Items TRIPWIRE_HOOK;
    public static final Items TRIPWIRE;
    public static final Items EMERALD_BLOCK;
    public static final Items SPRUCE_WOOD_STAIRS;
    public static final Items BIRCH_WOOD_STAIRS;
    public static final Items JUNGLE_WOOD_STAIRS;
    public static final Items COMMAND_BLOCK;
    public static final Items BEACON;
    public static final Items COBBLESTONE_WALL;
    public static final Items MOSSY_COBBLESTONE_WALL;
    public static final Items FLOWER_POT_BLOCK;
    public static final Items CARROTS_BLOCK;
    public static final Items POTATOES_BLOCK;
    public static final Items WOODEN_BUTTON;
    public static final Items MOB_HEAD;
    public static final Items ANVIL;
    public static final Items TRAPPED_CHEST;
    public static final Items LIGHT_WEIGHTED_PRESSURE_PLATE;
    public static final Items HEAVY_WEIGHTED_PRESSURE_PLATE;
    public static final Items INACTIVE_REDSTONE_COMPARATOR;
    public static final Items ACTIVE_REDSTONE_COMPARATOR;
    public static final Items DAYLIGHT_SENSOR;
    public static final Items REDSTONE_BLOCK;
    public static final Items NETHER_QUARTZ_ORE;
    public static final Items HOPPER;
    public static final Items QUARTZ_BLOCK;
    public static final Items CHISELED_QUARTZ_BLOCK;
    public static final Items PILLAR_QUARTZ_BLOCK;
    public static final Items QUARTZ_STAIRS;
    public static final Items ACTIVATOR_RAIL;
    public static final Items DROPPER;
    public static final Items WHITE_STAINED_CLAY;
    public static final Items ORANGE_STAINED_CLAY;
    public static final Items MAGENTA_STAINED_CLAY;
    public static final Items LIGHT_BLUE_STAINED_CLAY;
    public static final Items YELLOW_STAINED_CLAY;
    public static final Items LIME_STAINED_CLAY;
    public static final Items PINK_STAINED_CLAY;
    public static final Items GRAY_STAINED_CLAY;
    public static final Items LIGHT_GRAY_STAINED_CLAY;
    public static final Items CYAN_STAINED_CLAY;
    public static final Items PURPLE_STAINED_CLAY;
    public static final Items BLUE_STAINED_CLAY;
    public static final Items BROWN_STAINED_CLAY;
    public static final Items GREEN_STAINED_CLAY;
    public static final Items RED_STAINED_CLAY;
    public static final Items BLACK_STAINED_CLAY;
    public static final Items WHITE_STAINED_GLASS_PANE;
    public static final Items ORANGE_STAINED_GLASS_PANE;
    public static final Items MAGENTA_STAINED_GLASS_PANE;
    public static final Items LIGHT_BLUE_STAINED_GLASS_PANE;
    public static final Items YELLOW_STAINED_GLASS_PANE;
    public static final Items LIME_STAINED_GLASS_PANE;
    public static final Items PINK_STAINED_GLASS_PANE;
    public static final Items GRAY_STAINED_GLASS_PANE;
    public static final Items LIGHT_GRAY_STAINED_GLASS_PANE;
    public static final Items CYAN_STAINED_GLASS_PANE;
    public static final Items PURPLE_STAINED_GLASS_PANE;
    public static final Items BLUE_STAINED_GLASS_PANE;
    public static final Items BROWN_STAINED_GLASS_PANE;
    public static final Items GREEN_STAINED_GLASS_PANE;
    public static final Items RED_STAINED_GLASS_PANE;
    public static final Items BLACK_STAINED_GLASS_PANE;
    public static final Items ACACIA_LEAVES;
    public static final Items DARK_OAK_LEAVES;
    public static final Items ACACIA_WOOD;
    public static final Items DARK_OAK_WOOD;
    public static final Items ACACIA_WOOD_STAIRS;
    public static final Items DARK_OAK_WOOD_STAIRS;
    public static final Items SLIME_BLOCK;
    public static final Items BARRIER;
    public static final Items IRON_TRAPDOOR;
    public static final Items PRISMARINE;
    public static final Items PRISMARINE_BRICKS;
    public static final Items DARK_PRISMARINE;
    public static final Items SEA_LANTERN;
    public static final Items HAY_BALE;
    public static final Items WHITE_CARPET;
    public static final Items ORANGE_CARPET;
    public static final Items MAGENTA_CARPET;
    public static final Items LIGHT_BLUE_CARPET;
    public static final Items YELLOW_CARPET;
    public static final Items LIME_CARPET;
    public static final Items PINK_CARPET;
    public static final Items GRAY_CARPET;
    public static final Items LIGHT_GRAY_CARPET;
    public static final Items CYAN_CARPET;
    public static final Items PURPLE_CARPET;
    public static final Items BLUE_CARPET;
    public static final Items BROWN_CARPET;
    public static final Items GREEN_CARPET;
    public static final Items RED_CARPET;
    public static final Items BLACK_CARPET;
    public static final Items HARDENED_CLAY;
    public static final Items COAL_BLOCK;
    public static final Items PACKED_ICE;
    public static final Items SUNFLOWER;
    public static final Items LILIAC;
    public static final Items DOUBLE_TALLGRASS;
    public static final Items LARGE_FERN;
    public static final Items ROSE_BUSH;
    public static final Items PEONY;
    public static final Items PLANTED_BANNER;
    public static final Items WALL_BANNER;
    public static final Items INVERTED_DAYLIGHT_SENSOR;
    public static final Items RED_SANDSTONE;
    public static final Items CHISELED_RED_SANDSTONE;
    public static final Items SMOOTH_RED_SANDSTONE;
    public static final Items RED_SANDSTONE_STAIRS;
    public static final Items DOUBLE_RED_SANDSTONE_SLAB;
    public static final Items RED_SANDSTONE_SLAB;
    public static final Items SPRUCE_FENCE_GATE;
    public static final Items BIRCH_FENCE_GATE;
    public static final Items JUNGLE_FENCE_GATE;
    public static final Items DARK_OAK_FENCE_GATE;
    public static final Items ACACIA_FENCE_GATE;
    public static final Items SPRUCE_FENCE;
    public static final Items BIRCH_FENCE;
    public static final Items JUNGLE_FENCE;
    public static final Items DARK_OAK_FENCE;
    public static final Items ACACIA_FENCE;
    public static final Items SPRUCE_DOOR_BLOCK;
    public static final Items BIRCH_DOOR_BLOCK;
    public static final Items JUNGLE_DOOR_BLOCK;
    public static final Items ACACIA_DOOR_BLOCK;
    public static final Items DARK_OAK_DOOR_BLOCK;
    public static final Items END_ROD;
    public static final Items ITEM_FRAME_BLOCK;
    public static final Items CHORUS_PLANT;
    public static final Items CHORUS_FLOWER;
    public static final Items PURPUR_BLOCK;
    public static final Items PURPUR_PILLAR;
    public static final Items PURPUR_STAIRS;
    public static final Items PURPUR_DOUBLE_SLAB;
    public static final Items PURPUR_SLAB;
    public static final Items END_STONE_BRICKS;
    public static final Items BEETROOT_BLOCK;
    public static final Items GRASS_PATH;
    public static final Items END_GATEWAY;
    public static final Items REPEATING_COMMAND_BLOCK;
    public static final Items CHAIN_COMMAND_BLOCK;
    public static final Items FROSTED_ICE;
    public static final Items MAGMA_BLOCK;
    public static final Items NETHER_WART_BLOCK;
    public static final Items RED_NETHER_BRICK;
    public static final Items BONE_BLOCK;
    public static final Items STRUCTURE_VOID;
    public static final Items OBSERVER;
    public static final Items WHITE_SHULKER_BOX;
    public static final Items ORANGE_SHULKER_BOX;
    public static final Items MAGENTA_SHULKER_BOX;
    public static final Items LIGHT_BLUE_SHULKER_BOX;
    public static final Items YELLOW_SHULKER_BOX;
    public static final Items LIME_SHULKER_BOX;
    public static final Items PINK_SHULKER_BOX;
    public static final Items GRAY_SHULKER_BOX;
    public static final Items LIGHT_GRAY_SHULKER_BOX;
    public static final Items CYAN_SHULKER_BOX;
    public static final Items PURPLE_SHULKER_BOX;
    public static final Items BLUE_SHULKER_BOX;
    public static final Items BROWN_SHULKER_BOX;
    public static final Items GREEN_SHULKER_BOX;
    public static final Items RED_SHULKER_BOX;
    public static final Items BLACK_SHULKER_BOX;
    public static final Items WHITE_GLAZED_TERRACOTTA;
    public static final Items ORANGE_GLAZED_TERRACOTTA;
    public static final Items MAGENTA_GLAZED_TERRACOTTA;
    public static final Items LIGHT_BLUE_GLAZED_TERRACOTTA;
    public static final Items YELLOW_GLAZED_TERRACOTTA;
    public static final Items LIME_GLAZED_TERRACOTTA;
    public static final Items PINK_GLAZED_TERRACOTTA;
    public static final Items GRAY_GLAZED_TERRACOTTA;
    public static final Items LIGHT_GRAY_GLAZED_TERRACOTTA;
    public static final Items CYAN_GLAZED_TERRACOTTA;
    public static final Items PURPLE_GLAZED_TERRACOTTA;
    public static final Items BLUE_GLAZED_TERRACOTTA;
    public static final Items BROWN_GLAZED_TERRACOTTA;
    public static final Items GREEN_GLAZED_TERRACOTTA;
    public static final Items RED_GLAZED_TERRACOTTA;
    public static final Items BLACK_GLAZED_TERRACOTTA;
    public static final Items WHITE_CONCRETE;
    public static final Items ORANGE_CONCRETE;
    public static final Items MAGENTA_CONCRETE;
    public static final Items LIGHT_BLUE_CONCRETE;
    public static final Items YELLOW_CONCRETE;
    public static final Items LIME_CONCRETE;
    public static final Items PINK_CONCRETE;
    public static final Items GRAY_CONCRETE;
    public static final Items LIGHT_GRAY_CONCRETE;
    public static final Items CYAN_CONCRETE;
    public static final Items PURPLE_CONCRETE;
    public static final Items BLUE_CONCRETE;
    public static final Items BROWN_CONCRETE;
    public static final Items GREEN_CONCRETE;
    public static final Items RED_CONCRETE;
    public static final Items BLACK_CONCRETE;
    public static final Items WHITE_CONCRETE_POWDER;
    public static final Items ORANGE_CONCRETE_POWDER;
    public static final Items MAGENTA_CONCRETE_POWDER;
    public static final Items LIGHT_BLUE_CONCRETE_POWDER;
    public static final Items YELLOW_CONCRETE_POWDER;
    public static final Items LIME_CONCRETE_POWDER;
    public static final Items PINK_CONCRETE_POWDER;
    public static final Items GRAY_CONCRETE_POWDER;
    public static final Items LIGHT_GRAY_CONCRETE_POWDER;
    public static final Items CYAN_CONCRETE_POWDER;
    public static final Items PURPLE_CONCRETE_POWDER;
    public static final Items BLUE_CONCRETE_POWDER;
    public static final Items BROWN_CONCRETE_POWDER;
    public static final Items GREEN_CONCRETE_POWDER;
    public static final Items RED_CONCRETE_POWDER;
    public static final Items BLACK_CONCRETE_POWDER;
    public static final Items STONECUTTER;
    public static final Items GLOWING_OBSIDIAN;
    public static final Items NETHER_REACTOR_CORE;
    public static final Items UPDATE_BLOCK;
    public static final Items ATEUPD_BLOCK;
    public static final Items STRUCTURE_SAVE;
    public static final Items STRUCTURE_LOAD;
    public static final Items STRUCTURE_CORNER;
    public static final Items STRUCTURE_DATA;
    public static final Items IRON_SHOVEL;
    public static final Items IRON_PICKAXE;
    public static final Items IRON_AXE;
    public static final Items FLINT_AND_STEEL;
    public static final Items APPLE;
    public static final Items BOW;
    public static final Items ARROW;
    public static final Items COAL;
    public static final Items CHARCOAL;
    public static final Items DIAMOND;
    public static final Items IRON_INGOT;
    public static final Items GOLD_INGOT;
    public static final Items IRON_SWORD;
    public static final Items WOODEN_SWORD;
    public static final Items WOODEN_SHOVEL;
    public static final Items WOODEN_PICKAXE;
    public static final Items WOODEN_AXE;
    public static final Items STONE_SWORD;
    public static final Items STONE_SHOVEL;
    public static final Items STONE_PICKAXE;
    public static final Items STONE_AXE;
    public static final Items DIAMOND_SWORD;
    public static final Items DIAMOND_SHOVEL;
    public static final Items DIAMOND_PICKAXE;
    public static final Items DIAMOND_AXE;
    public static final Items STICK;
    public static final Items BOWL;
    public static final Items MUSHROOM_STEW;
    public static final Items GOLDEN_SWORD;
    public static final Items GOLDEN_SHOVEL;
    public static final Items GOLDEN_PICKAXE;
    public static final Items GOLDEN_AXE;
    public static final Items STRING;
    public static final Items FEATHER;
    public static final Items GUNPOWDER;
    public static final Items WOODEN_HOE;
    public static final Items STONE_HOE;
    public static final Items IRON_HOE;
    public static final Items DIAMOND_HOE;
    public static final Items GOLDEN_HOE;
    public static final Items SEEDS;
    public static final Items WHEAT;
    public static final Items BREAD;
    public static final Items LEATHER_CAP;
    public static final Items LEATHER_TUNIC;
    public static final Items LEATHER_PANTS;
    public static final Items LEATHER_BOOTS;
    public static final Items CHAIN_HELMET;
    public static final Items CHAIN_CHESTPLATE;
    public static final Items CHAIN_LEGGINGS;
    public static final Items CHAIN_BOOTS;
    public static final Items IRON_HELMET;
    public static final Items IRON_CHESTPLATE;
    public static final Items IRON_LEGGINGS;
    public static final Items IRON_BOOTS;
    public static final Items DIAMOND_HELMET;
    public static final Items DIAMOND_CHESTPLATE;
    public static final Items DIAMOND_LEGGINGS;
    public static final Items DIAMOND_BOOTS;
    public static final Items GOLDEN_HELMET;
    public static final Items GOLDEN_CHESTPLATE;
    public static final Items GOLDEN_LEGGINGS;
    public static final Items GOLDEN_BOOTS;
    public static final Items FLINT;
    public static final Items RAW_PORKCHOP;
    public static final Items COOKED_PORKCHOP;
    public static final Items PAINTING;
    public static final Items GOLDEN_APPLE;
    public static final Items ENCHANTED_GOLDEN_APPLE;
    public static final Items SIGN;
    public static final Items OAK_DOOR;
    public static final Items BUCKET;
    public static final Items WATER_BUCKET;
    public static final Items LAVA_BUCKET;
    public static final Items MINECART;
    public static final Items SADDLE;
    public static final Items IRON_DOOR;
    public static final Items REDSTONE_DUST;
    public static final Items SNOWBALL;
    public static final Items OAK_BOAT;
    public static final Items LEATHER;
    public static final Items MILK_BUCKET;
    public static final Items BRICK;
    public static final Items CLAY;
    public static final Items SUGAR_CANES;
    public static final Items PAPER;
    public static final Items BOOK;
    public static final Items SLIMEBALL;
    public static final Items MINECART_WITH_CHEST;
    public static final Items MINECART_WITH_FURNACE;
    public static final Items EGG;
    public static final Items COMPASS;
    public static final Items FISHING_ROD;
    public static final Items CLOCK;
    public static final Items GLOWSTONE_DUST;
    public static final Items RAW_FISH;
    public static final Items RAW_SALMON;
    public static final Items CLOWNFISH;
    public static final Items PUFFERFISH;
    public static final Items COOKED_FISH;
    public static final Items COOKED_SALMON;
    public static final Items INK_SAC;
    public static final Items ROSE_RED;
    public static final Items CACTUS_GREEN;
    public static final Items COCOA_BEANS;
    public static final Items LAPIS_LAZULI;
    public static final Items PURPLE_DYE;
    public static final Items CYAN_DYE;
    public static final Items LIGHT_GRAY_DYE;
    public static final Items GRAY_DYE;
    public static final Items PINK_DYE;
    public static final Items LIME_DYE;
    public static final Items DANDELION_YELLOW;
    public static final Items LIGHT_BLUE_DYE;
    public static final Items MAGENTA_DYE;
    public static final Items ORANGE_DYE;
    public static final Items BONE_MEAL;
    public static final Items BONE;
    public static final Items SUGAR;
    public static final Items CAKE;
    public static final Items WHITE_BED;
    public static final Items ORANGE_BED;
    public static final Items MAGENTA_BED;
    public static final Items LIGHT_BLUE_BED;
    public static final Items YELLOW_BED;
    public static final Items LIME_BED;
    public static final Items PINK_BED;
    public static final Items GRAY_BED;
    public static final Items LIGHT_GRAY_BED;
    public static final Items CYAN_BED;
    public static final Items PURPLE_BED;
    public static final Items BLUE_BED;
    public static final Items BROWN_BED;
    public static final Items GREEN_BED;
    public static final Items RED_BED;
    public static final Items BLACK_BED;
    public static final Items REDSTONE_REPEATER;
    public static final Items COOKIE;
    public static final Items MAP;
    public static final Items SHEARS;
    public static final Items MELON;
    public static final Items PUMPKIN_SEEDS;
    public static final Items MELON_SEEDS;
    public static final Items RAW_BEEF;
    public static final Items STEAK;
    public static final Items RAW_CHICKEN;
    public static final Items COOKED_CHICKEN;
    public static final Items ROTTEN_FLESH;
    public static final Items ENDER_PEARL;
    public static final Items BLAZE_ROD;
    public static final Items GHAST_TEAR;
    public static final Items GOLD_NUGGET;
    public static final Items NETHER_WART;
    public static final Items UNCRAFTABLE_POTION;
    public static final Items WATER_BOTTLE;
    public static final Items MUNDANE_POTION;
    public static final Items MUNDANE_POTION_EXTENDED;
    public static final Items THICK_POTION;
    public static final Items AWKWARD_POTION;
    public static final Items NIGHT_VISION_POTION;
    public static final Items NIGHT_VISION_POTION_EXTENDED;
    public static final Items INVISIBILITY_POTION;
    public static final Items INVISIBILITY_POTION_EXTENDED;
    public static final Items LEAPING_POTION;
    public static final Items LEAPING_POTION_EXTENDED;
    public static final Items LEAPING_POTION_PLUS;
    public static final Items FIRE_RESISTANCE_POTION;
    public static final Items FIRE_RESISTANCE_POTION_EXTENDED;
    public static final Items SWIFTNESS_POTION;
    public static final Items SWIFTNESS_POTION_EXTENDED;
    public static final Items SWIFTNESS_POTION_PLUS;
    public static final Items SLOWNESS_POTION;
    public static final Items SLOWNESS_POTION_EXTENDED;
    public static final Items WATER_BREATHING_POTION;
    public static final Items WATER_BREATHING_POTION_EXTENDED;
    public static final Items HEALING_POTION;
    public static final Items HEALING_POTION_PLUS;
    public static final Items HARMING_POTION;
    public static final Items HARMING_POTION_PLUS;
    public static final Items POISON_POTION;
    public static final Items POISON_POTION_EXTENDED;
    public static final Items POISON_POTION_PLUS;
    public static final Items REGENERATION_POTION;
    public static final Items REGENERATION_POTION_EXTENDED;
    public static final Items REGENERATION_POTION_PLUS;
    public static final Items STRENGTH_POTION;
    public static final Items STRENGTH_POTION_EXTENDED;
    public static final Items STRENGTH_POTION_PLUS;
    public static final Items WEAKNESS_POTION;
    public static final Items WEAKNESS_POTION_EXTENDED;
    public static final Items DECAY_POTION;
    public static final Items GLASS_BOTTLE;
    public static final Items SPIDER_EYE;
    public static final Items FERMENTED_SPIDER_EYE;
    public static final Items BLAZE_POWDER;
    public static final Items MAGMA_CREAM;
    public static final Items BREWING_STAND;
    public static final Items CAULDRON;
    public static final Items EYE_OF_ENDER;
    public static final Items GLISTERING_MELON;
    public static final Items SPAWN_ELDER_GUARDIAN;
    public static final Items SPAWN_WITHER_SKELETON;
    public static final Items SPAWN_STRAY;
    public static final Items SPAWN_HUSK;
    public static final Items SPAWN_ZOMBIE_VILLAGER;
    public static final Items SPAWN_SKELETON_HORSE;
    public static final Items SPAWN_ZOMBIE_HORSE;
    public static final Items SPAWN_DONKEY;
    public static final Items SPAWN_MULE;
    public static final Items SPAWN_EVOKER;
    public static final Items SPAWN_VEX;
    public static final Items SPAWN_VINDICATOR;
    public static final Items SPAWN_CREEPER;
    public static final Items SPAWN_SKELETON;
    public static final Items SPAWN_SPIDER;
    public static final Items SPAWN_ZOMBIE;
    public static final Items SPAWN_SLIME;
    public static final Items SPAWN_GHAST;
    public static final Items SPAWN_ZOMBIE_PIGMAN;
    public static final Items SPAWN_ENDERMAN;
    public static final Items SPAWN_CAVE_SPIDER;
    public static final Items SPAWN_SILVERFISH;
    public static final Items SPAWN_BLAZE;
    public static final Items SPAWN_MAGMA_CUBE;
    public static final Items SPAWN_BAT;
    public static final Items SPAWN_WITCH;
    public static final Items SPAWN_ENDERMITE;
    public static final Items SPAWN_GUARDIAN;
    public static final Items SPAWN_SHULKER;
    public static final Items SPAWN_PIG;
    public static final Items SPAWN_SHEEP;
    public static final Items SPAWN_COW;
    public static final Items SPAWN_CHICKEN;
    public static final Items SPAWN_SQUID;
    public static final Items SPAWN_WOLF;
    public static final Items SPAWN_MOOSHROOM;
    public static final Items SPAWN_OCELOT;
    public static final Items SPAWN_HORSE;
    public static final Items SPAWN_RABBIT;
    public static final Items SPAWN_POLAR_BEAR;
    public static final Items SPAWN_LLAMA;
    public static final Items SPAWN_PARROT;
    public static final Items SPAWN_VILLAGER;
    public static final Items SPAWN_NPC;
    public static final Items BOTTLE_O_ENCHANTING;
    public static final Items FIRE_CHARGE;
    public static final Items BOOK_AND_QUILL;
    public static final Items WRITTEN_BOOK;
    public static final Items EMERALD;
    public static final Items ITEM_FRAME;
    public static final Items FLOWER_POT;
    public static final Items CARROT;
    public static final Items POTATO;
    public static final Items BAKED_POTATO;
    public static final Items POISONOUS_POTATO;
    public static final Items EMPTY_MAP;
    public static final Items EMPTY_LOCATOR_MAP;
    public static final Items GOLDEN_CARROT;
    public static final Items SKELETON_SKULL;
    public static final Items WITHER_SKELETON_SKULL;
    public static final Items ZOMBIE_HEAD;
    public static final Items HUMAN_HEAD;
    public static final Items CREEPER_HEAD;
    public static final Items DRAGON_HEAD;
    public static final Items CARROT_ON_A_STICK;
    public static final Items NETHER_STAR;
    public static final Items PUMPKIN_PIE;
    public static final Items FIREWORK_ROCKET;
    public static final Items FIREWORK_STAR;
    public static final Items ENCHANTED_BOOK;
    public static final Items REDSTONE_COMPARATOR;
    public static final Items NETHER_BRICK;
    public static final Items NETHER_QUARTZ;
    public static final Items MINECART_WITH_TNT;
    public static final Items MINECART_WITH_HOPPER;
    public static final Items PRISMARINE_SHARD;
    public static final Items PRISMARINE_CRYSTALS;
    public static final Items RAW_RABBIT;
    public static final Items COOKED_RABBIT;
    public static final Items RABBIT_STEW;
    public static final Items RABBIT_FOOT;
    public static final Items RABBIT_HIDE;
    public static final Items ARMOR_STAND;
    public static final Items LEATHER_HORSE_ARMOR;
    public static final Items IRON_HORSE_ARMOR;
    public static final Items GOLDEN_HORSE_ARMOR;
    public static final Items DIAMOND_HORSE_ARMOR;
    public static final Items LEAD;
    public static final Items NAME_TAG;
    public static final Items MINECART_WITH_COMMAND_BLOCK;
    public static final Items RAW_MUTTON;
    public static final Items COOKED_MUTTON;
    public static final Items BANNER;
    public static final Items END_CRYSTAL;
    public static final Items SPRUCE_DOOR;
    public static final Items BIRCH_DOOR;
    public static final Items JUNGLE_DOOR;
    public static final Items ACACIA_DOOR;
    public static final Items DARK_OAK_DOOR;
    public static final Items CHORUS_FRUIT;
    public static final Items POPPED_CHORUS_FRUIT;
    public static final Items BEETROOT;
    public static final Items BEETROOT_SEEDS;
    public static final Items BEETROOT_SOUP;
    public static final Items DRAGONS_BREATH;
    public static final Items UNCRAFTABLE_SPLASH_POTION;
    public static final Items SPLASH_POTION;
    public static final Items MUNDANE_SPLASH_POTION;
    public static final Items MUNDANE_SPLASH_POTION_EXTENDED;
    public static final Items THICK_SPLASH_POTION;
    public static final Items AWKWARD_SPLASH_POTION;
    public static final Items NIGHT_VISION_SPLASH_POTION;
    public static final Items NIGHT_VISION_SPLASH_POTION_EXTENDED;
    public static final Items INVISIBILITY_SPLASH_POTION;
    public static final Items INVISIBILITY_SPLASH_POTION_EXTENDED;
    public static final Items LEAPING_SPLASH_POTION;
    public static final Items LEAPING_SPLASH_POTION_EXTENDED;
    public static final Items LEAPING_SPLASH_POTION_PLUS;
    public static final Items FIRE_RESISTANCE_SPLASH_POTION;
    public static final Items FIRE_RESISTANCE_SPLASH_POTION_EXTENDED;
    public static final Items SWIFTNESS_SPLASH_POTION;
    public static final Items SWIFTNESS_SPLASH_POTION_EXTENDED;
    public static final Items SWIFTNESS_SPLASH_POTION_PLUS;
    public static final Items SLOWNESS_SPLASH_POTION;
    public static final Items SLOWNESS_SPLASH_POTION_EXTENDED;
    public static final Items WATER_BREATHING_SPLASH_POTION;
    public static final Items WATER_BREATHING_SPLASH_POTION_EXTENDED;
    public static final Items HEALING_SPLASH_POTION;
    public static final Items HEALING_SPLASH_POTION_PLUS;
    public static final Items HARMING_SPLASH_POTION;
    public static final Items HARMING_SPLASH_POTION_PLUS;
    public static final Items POISON_SPLASH_POTION;
    public static final Items POISON_SPLASH_POTION_EXTENDED;
    public static final Items POISON_SPLASH_POTION_PLUS;
    public static final Items REGENERATION_SPLASH_POTION;
    public static final Items REGENERATION_SPLASH_POTION_EXTENDED;
    public static final Items REGENERATION_SPLASH_POTION_PLUS;
    public static final Items STRENGTH_SPLASH_POTION;
    public static final Items STRENGTH_SPLASH_POTION_EXTENDED;
    public static final Items STRENGTH_SPLASH_POTION_PLUS;
    public static final Items WEAKNESS_SPLASH_POTION;
    public static final Items WEAKNESS_SPLASH_POTION_EXTENDED;
    public static final Items DECAY_SPLASH_POTION;
    public static final Items SPECTRAL_ARROW;
    public static final Items UNCRAFTABLE_TIPPED_ARROW;
    public static final Items TIPPED_ARROW;
    public static final Items MUNDANE_TIPPED_ARROW;
    public static final Items MUNDANE_TIPPED_ARROW_EXTENDED;
    public static final Items THICK_TIPPED_ARROW;
    public static final Items AWKWARD_TIPPED_ARROW;
    public static final Items NIGHT_VISION_TIPPED_ARROW;
    public static final Items NIGHT_VISION_TIPPED_ARROW_EXTENDED;
    public static final Items INVISIBILITY_TIPPED_ARROW;
    public static final Items INVISIBILITY_TIPPED_ARROW_EXTENDED;
    public static final Items LEAPING_TIPPED_ARROW;
    public static final Items LEAPING_TIPPED_ARROW_EXTENDED;
    public static final Items LEAPING_TIPPED_ARROW_PLUS;
    public static final Items FIRE_RESISTANCE_TIPPED_ARROW;
    public static final Items FIRE_RESISTANCE_TIPPED_ARROW_EXTENDED;
    public static final Items SWIFTNESS_TIPPED_ARROW;
    public static final Items SWIFTNESS_TIPPED_ARROW_EXTENDED;
    public static final Items SWIFTNESS_TIPPED_ARROW_PLUS;
    public static final Items SLOWNESS_TIPPED_ARROW;
    public static final Items SLOWNESS_TIPPED_ARROW_EXTENDED;
    public static final Items WATER_BREATHING_TIPPED_ARROW;
    public static final Items WATER_BREATHING_TIPPED_ARROW_EXTENDED;
    public static final Items HEALING_TIPPED_ARROW;
    public static final Items HEALING_TIPPED_ARROW_PLUS;
    public static final Items HARMING_TIPPED_ARROW;
    public static final Items HARMING_TIPPED_ARROW_PLUS;
    public static final Items POISON_TIPPED_ARROW;
    public static final Items POISON_TIPPED_ARROW_EXTENDED;
    public static final Items POISON_TIPPED_ARROW_PLUS;
    public static final Items REGENERATION_TIPPED_ARROW;
    public static final Items REGENERATION_TIPPED_ARROW_EXTENDED;
    public static final Items REGENERATION_TIPPED_ARROW_PLUS;
    public static final Items STRENGTH_TIPPED_ARROW;
    public static final Items STRENGTH_TIPPED_ARROW_EXTENDED;
    public static final Items STRENGTH_TIPPED_ARROW_PLUS;
    public static final Items WEAKNESS_TIPPED_ARROW;
    public static final Items WEAKNESS_TIPPED_ARROW_EXTENDED;
    public static final Items DECAY_TIPPED_ARROW;
    public static final Items UNCRAFTABLE_LINGERING_POTION;
    public static final Items LINGERING_POTION;
    public static final Items MUNDANE_LINGERING_POTION;
    public static final Items MUNDANE_LINGERING_POTION_EXTENDED;
    public static final Items THICK_LINGERING_POTION;
    public static final Items AWKWARD_LINGERING_POTION;
    public static final Items NIGHT_VISION_LINGERING_POTION;
    public static final Items NIGHT_VISION_LINGERING_POTION_EXTENDED;
    public static final Items INVISIBILITY_LINGERING_POTION;
    public static final Items INVISIBILITY_LINGERING_POTION_EXTENDED;
    public static final Items LEAPING_LINGERING_POTION;
    public static final Items LEAPING_LINGERING_POTION_EXTENDED;
    public static final Items LEAPING_LINGERING_POTION_PLUS;
    public static final Items FIRE_RESISTANCE_LINGERING_POTION;
    public static final Items FIRE_RESISTANCE_LINGERING_POTION_EXTENDED;
    public static final Items SWIFTNESS_LINGERING_POTION;
    public static final Items SWIFTNESS_LINGERING_POTION_EXTENDED;
    public static final Items SWIFTNESS_LINGERING_POTION_PLUS;
    public static final Items SLOWNESS_LINGERING_POTION;
    public static final Items SLOWNESS_LINGERING_POTION_EXTENDED;
    public static final Items WATER_BREATHING_LINGERING_POTION;
    public static final Items WATER_BREATHING_LINGERING_POTION_EXTENDED;
    public static final Items HEALING_LINGERING_POTION;
    public static final Items HEALING_LINGERING_POTION_PLUS;
    public static final Items HARMING_LINGERING_POTION;
    public static final Items HARMING_LINGERING_POTION_PLUS;
    public static final Items POISON_LINGERING_POTION;
    public static final Items POISON_LINGERING_POTION_EXTENDED;
    public static final Items POISON_LINGERING_POTION_PLUS;
    public static final Items REGENERATION_LINGERING_POTION;
    public static final Items REGENERATION_LINGERING_POTION_EXTENDED;
    public static final Items REGENERATION_LINGERING_POTION_PLUS;
    public static final Items STRENGTH_LINGERING_POTION;
    public static final Items STRENGTH_LINGERING_POTION_EXTENDED;
    public static final Items STRENGTH_LINGERING_POTION_PLUS;
    public static final Items WEAKNESS_LINGERING_POTION;
    public static final Items WEAKNESS_LINGERING_POTION_EXTENDED;
    public static final Items DECAY_LINGERING_POTION;
    public static final Items SHIELD;
    public static final Items ELYTRA;
    public static final Items SPRUCE_BOAT;
    public static final Items BIRCH_BOAT;
    public static final Items JUNGLE_BOAT;
    public static final Items ACACIA_BOAT;
    public static final Items DARK_OAK_BOAT;
    public static final Items UNDYING_TOTEM;
    public static final Items SHULKER_SHELL;
    public static final Items IRON_NUGGET;
    public static final Items KNOWLEDGE_BOOK;
    public static final Items DISC_13;
    public static final Items DISC_CAT;
    public static final Items DISC_BLOCKS;
    public static final Items DISC_CHIRP;
    public static final Items DISC_FAR;
    public static final Items DISC_MALL;
    public static final Items DISC_MELLOHI;
    public static final Items DISC_STAL;
    public static final Items DISC_STRAD;
    public static final Items DISC_WARD;
    public static final Items DISC_11;
    public static final Items DISC_WAIT;

    public final String name;
    public final ItemData minecraft, pocket;
    public final byte stack;
    public final short durability;

    private Items(String name, ItemData minecraft, ItemData pocket, byte stack, short durability)
    {
        this.name = name;
        this.minecraft = minecraft;
        this.pocket = pocket;
        this.stack = stack;
        this.durability = durability;
    }

    private static class ItemData
    {

        public final int id, meta;
        public final String nbt;

        public ItemData(int id, int meta, String nbt) {
            this.id = id;
            this.meta = meta;
            this.nbt = nbt;
        }

    }

    private static Map<Integer, Map<Integer, Items>> minecraftItems, pocketItems;

    static
    {

        minecraftItems = new HashMap<Integer, Map<Integer, Items>>();
        pocketItems = new HashMap<Integer, Map<Integer, Items>>();

        add(AIR = new Items("air", new ItemData(0, 0, ""), new ItemData(0, 0, ""), (byte)64, (short)0));
        add(STONE = new Items("stone", new ItemData(1, 0, ""), new ItemData(1, 0, ""), (byte)64, (short)0));
        add(GRANITE = new Items("granite", new ItemData(1, 1, ""), new ItemData(1, 1, ""), (byte)64, (short)0));
        add(POLISHED_GRANITE = new Items("polished granite", new ItemData(1, 2, ""), new ItemData(1, 2, ""), (byte)64, (short)0));
        add(DIORITE = new Items("diorite", new ItemData(1, 3, ""), new ItemData(1, 3, ""), (byte)64, (short)0));
        add(POLISHED_DIORITE = new Items("polished diorite", new ItemData(1, 4, ""), new ItemData(1, 4, ""), (byte)64, (short)0));
        add(ANDESITE = new Items("andesite", new ItemData(1, 5, ""), new ItemData(1, 5, ""), (byte)64, (short)0));
        add(POLISHED_ANDESITE = new Items("polished andesite", new ItemData(1, 6, ""), new ItemData(1, 6, ""), (byte)64, (short)0));
        add(GRASS = new Items("grass", new ItemData(2, 0, ""), new ItemData(2, 0, ""), (byte)64, (short)0));
        add(DIRT = new Items("dirt", new ItemData(3, 0, ""), new ItemData(3, 0, ""), (byte)64, (short)0));
        add(COARSE_DIRT = new Items("coarse dirt", new ItemData(3, 1, ""), null, (byte)64, (short)0));
        add(PODZOL = new Items("podzol", new ItemData(3, 2, ""), new ItemData(243, 0, ""), (byte)64, (short)0));
        add(COBBLESTONE = new Items("cobblestone", new ItemData(4, 0, ""), new ItemData(4, 0, ""), (byte)64, (short)0));
        add(OAK_WOOD_PLANKS = new Items("oak wood planks", new ItemData(5, 0, ""), new ItemData(5, 0, ""), (byte)64, (short)0));
        add(SPRUCE_WOOD_PLANKS = new Items("spruce wood planks", new ItemData(5, 1, ""), new ItemData(5, 1, ""), (byte)64, (short)0));
        add(BIRCH_WOOD_PLANKS = new Items("birch wood planks", new ItemData(5, 2, ""), new ItemData(5, 2, ""), (byte)64, (short)0));
        add(JUNGLE_WOOD_PLANKS = new Items("jungle wood planks", new ItemData(5, 3, ""), new ItemData(5, 3, ""), (byte)64, (short)0));
        add(ACACIA_WOOD_PLANKS = new Items("acacia wood planks", new ItemData(5, 4, ""), new ItemData(5, 4, ""), (byte)64, (short)0));
        add(DARK_OAK_WOOD_PLANKS = new Items("dark oak wood planks", new ItemData(5, 5, ""), new ItemData(5, 5, ""), (byte)64, (short)0));
        add(OAK_SAPLING = new Items("oak sapling", new ItemData(6, 0, ""), new ItemData(6, 0, ""), (byte)64, (short)0));
        add(SPRUCE_SAPLING = new Items("spruce sapling", new ItemData(6, 1, ""), new ItemData(6, 1, ""), (byte)64, (short)0));
        add(BIRCH_SAPLING = new Items("birch sapling", new ItemData(6, 2, ""), new ItemData(6, 2, ""), (byte)64, (short)0));
        add(JUNGLE_SAPLING = new Items("jungle sapling", new ItemData(6, 3, ""), new ItemData(6, 3, ""), (byte)64, (short)0));
        add(ACACIA_SAPLING = new Items("acacia sapling", new ItemData(6, 4, ""), new ItemData(6, 4, ""), (byte)64, (short)0));
        add(DARK_OAK_SAPLING = new Items("dark oak sapling", new ItemData(6, 5, ""), new ItemData(6, 5, ""), (byte)64, (short)0));
        add(BEDROCK = new Items("bedrock", new ItemData(7, 0, ""), new ItemData(7, 0, ""), (byte)64, (short)0));
        add(FLOWING_WATER = new Items("flowing water", new ItemData(8, 0, ""), new ItemData(8, 0, ""), (byte)64, (short)0));
        add(STILL_WATER = new Items("still water", new ItemData(9, 0, ""), new ItemData(9, 0, ""), (byte)64, (short)0));
        add(FLOWING_LAVA = new Items("flowing lava", new ItemData(10, 0, ""), new ItemData(10, 0, ""), (byte)64, (short)0));
        add(STILL_LAVA = new Items("still lava", new ItemData(11, 0, ""), new ItemData(11, 0, ""), (byte)64, (short)0));
        add(SAND = new Items("sand", new ItemData(12, 0, ""), new ItemData(12, 0, ""), (byte)64, (short)0));
        add(RED_SAND = new Items("red sand", new ItemData(12, 1, ""), new ItemData(12, 1, ""), (byte)64, (short)0));
        add(GRAVEL = new Items("gravel", new ItemData(13, 0, ""), new ItemData(13, 0, ""), (byte)64, (short)0));
        add(GOLD_ORE = new Items("gold ore", new ItemData(14, 0, ""), new ItemData(14, 0, ""), (byte)64, (short)0));
        add(IRON_ORE = new Items("iron ore", new ItemData(15, 0, ""), new ItemData(15, 0, ""), (byte)64, (short)0));
        add(COAL_ORE = new Items("coal ore", new ItemData(16, 0, ""), new ItemData(16, 0, ""), (byte)64, (short)0));
        add(OAK_WOOD = new Items("oak wood", new ItemData(17, 0, ""), new ItemData(17, 0, ""), (byte)64, (short)0));
        add(SPRUCE_WOOD = new Items("spruce wood", new ItemData(17, 1, ""), new ItemData(17, 1, ""), (byte)64, (short)0));
        add(BIRCH_WOOD = new Items("birch wood", new ItemData(17, 2, ""), new ItemData(17, 2, ""), (byte)64, (short)0));
        add(JUNGLE_WOOD = new Items("jungle wood", new ItemData(17, 3, ""), new ItemData(17, 3, ""), (byte)64, (short)0));
        add(OAK_LEAVES = new Items("oak leaves", new ItemData(18, 0, ""), new ItemData(18, 0, ""), (byte)64, (short)0));
        add(SPRUCE_LEAVES = new Items("spruce leaves", new ItemData(18, 1, ""), new ItemData(18, 1, ""), (byte)64, (short)0));
        add(BIRCH_LEAVES = new Items("birch leaves", new ItemData(18, 2, ""), new ItemData(18, 2, ""), (byte)64, (short)0));
        add(JUNGLE_LEAVES = new Items("jungle leaves", new ItemData(18, 3, ""), new ItemData(18, 3, ""), (byte)64, (short)0));
        add(SPONGE = new Items("sponge", new ItemData(19, 0, ""), new ItemData(19, 0, ""), (byte)64, (short)0));
        add(WET_SPONGE = new Items("wet sponge", new ItemData(19, 1, ""), new ItemData(19, 1, ""), (byte)64, (short)0));
        add(GLASS = new Items("glass", new ItemData(20, 0, ""), new ItemData(20, 0, ""), (byte)64, (short)0));
        add(LAPIS_LAZULI_ORE = new Items("lapis lazuli ore", new ItemData(21, 0, ""), new ItemData(21, 0, ""), (byte)64, (short)0));
        add(LAPIS_LAZULI_BLOCK = new Items("lapis lazuli block", new ItemData(22, 0, ""), new ItemData(22, 0, ""), (byte)64, (short)0));
        add(DISPENSER = new Items("dispenser", new ItemData(23, 0, ""), new ItemData(23, 0, ""), (byte)64, (short)0));
        add(SANDSTONE = new Items("sandstone", new ItemData(24, 0, ""), new ItemData(24, 0, ""), (byte)64, (short)0));
        add(CHISELED_SANDSTONE = new Items("chiseled sandstone", new ItemData(24, 1, ""), new ItemData(24, 1, ""), (byte)64, (short)0));
        add(SMOOTH_SANDSTONE = new Items("smooth sandstone", new ItemData(24, 2, ""), new ItemData(24, 2, ""), (byte)64, (short)0));
        add(NOTE_BLOCK = new Items("note block", new ItemData(25, 0, ""), new ItemData(25, 0, ""), (byte)64, (short)0));
        add(BED_BLOCK = new Items("bed block", new ItemData(26, 0, ""), new ItemData(26, 0, ""), (byte)64, (short)0));
        add(POWERED_RAIL = new Items("powered rail", new ItemData(27, 0, ""), new ItemData(27, 0, ""), (byte)64, (short)0));
        add(DETECTOR_RAIL = new Items("detector rail", new ItemData(28, 0, ""), new ItemData(28, 0, ""), (byte)64, (short)0));
        add(STICKY_PISTON = new Items("sticky piston", new ItemData(29, 0, ""), new ItemData(29, 0, ""), (byte)64, (short)0));
        add(COBWEB = new Items("cobweb", new ItemData(30, 0, ""), new ItemData(30, 0, ""), (byte)64, (short)0));
        add(DEAD_SHRUB = new Items("dead shrub", new ItemData(31, 0, ""), null, (byte)64, (short)0));
        add(TALL_GRASS = new Items("tall grass", new ItemData(31, 1, ""), new ItemData(31, 0, ""), (byte)64, (short)0));
        add(FERN = new Items("fern", new ItemData(31, 2, ""), new ItemData(31, 2, ""), (byte)64, (short)0));
        add(DEAD_BUSH = new Items("dead bush", new ItemData(32, 0, ""), new ItemData(32, 0, ""), (byte)64, (short)0));
        add(PISTON = new Items("piston", new ItemData(33, 0, ""), new ItemData(33, 0, ""), (byte)64, (short)0));
        add(PISTON_HEAD = new Items("piston head", new ItemData(34, 0, ""), new ItemData(34, 0, ""), (byte)64, (short)0));
        add(WHITE_WOOL = new Items("white wool", new ItemData(35, 0, ""), new ItemData(35, 0, ""), (byte)64, (short)0));
        add(ORANGE_WOOL = new Items("orange wool", new ItemData(35, 1, ""), new ItemData(35, 1, ""), (byte)64, (short)0));
        add(MAGENTA_WOOL = new Items("magenta wool", new ItemData(35, 2, ""), new ItemData(35, 2, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_WOOL = new Items("light blue wool", new ItemData(35, 3, ""), new ItemData(35, 3, ""), (byte)64, (short)0));
        add(YELLOW_WOOL = new Items("yellow wool", new ItemData(35, 4, ""), new ItemData(35, 4, ""), (byte)64, (short)0));
        add(LIME_WOOL = new Items("lime wool", new ItemData(35, 5, ""), new ItemData(35, 5, ""), (byte)64, (short)0));
        add(PINK_WOOL = new Items("pink wool", new ItemData(35, 6, ""), new ItemData(35, 6, ""), (byte)64, (short)0));
        add(GRAY_WOOL = new Items("gray wool", new ItemData(35, 7, ""), new ItemData(35, 7, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_WOOL = new Items("light gray wool", new ItemData(35, 8, ""), new ItemData(35, 8, ""), (byte)64, (short)0));
        add(CYAN_WOOL = new Items("cyan wool", new ItemData(35, 9, ""), new ItemData(35, 9, ""), (byte)64, (short)0));
        add(PURPLE_WOOL = new Items("purple wool", new ItemData(35, 10, ""), new ItemData(35, 10, ""), (byte)64, (short)0));
        add(BLUE_WOOL = new Items("blue wool", new ItemData(35, 11, ""), new ItemData(35, 11, ""), (byte)64, (short)0));
        add(BROWN_WOOL = new Items("brown wool", new ItemData(35, 12, ""), new ItemData(35, 12, ""), (byte)64, (short)0));
        add(GREEN_WOOL = new Items("green wool", new ItemData(35, 13, ""), new ItemData(35, 13, ""), (byte)64, (short)0));
        add(RED_WOOL = new Items("red wool", new ItemData(35, 14, ""), new ItemData(35, 14, ""), (byte)64, (short)0));
        add(BLACK_WOOL = new Items("black wool", new ItemData(35, 15, ""), new ItemData(35, 15, ""), (byte)64, (short)0));
        add(PISTON_EXTENSION = new Items("piston extension", new ItemData(36, 0, ""), new ItemData(250, 0, ""), (byte)64, (short)0));
        add(DANDELION = new Items("dandelion", new ItemData(37, 0, ""), new ItemData(37, 0, ""), (byte)64, (short)0));
        add(POPPY = new Items("poppy", new ItemData(38, 0, ""), new ItemData(38, 0, ""), (byte)64, (short)0));
        add(BLUE_ORCHID = new Items("blue orchid", new ItemData(38, 1, ""), new ItemData(38, 1, ""), (byte)64, (short)0));
        add(ALLIUM = new Items("allium", new ItemData(38, 2, ""), new ItemData(38, 2, ""), (byte)64, (short)0));
        add(AZURE_BLUET = new Items("azure bluet", new ItemData(38, 3, ""), new ItemData(38, 3, ""), (byte)64, (short)0));
        add(RED_TULIP = new Items("red tulip", new ItemData(38, 4, ""), new ItemData(38, 4, ""), (byte)64, (short)0));
        add(ORANGE_TULIP = new Items("orange tulip", new ItemData(38, 5, ""), new ItemData(38, 5, ""), (byte)64, (short)0));
        add(WHITE_TULIP = new Items("white tulip", new ItemData(38, 6, ""), new ItemData(38, 6, ""), (byte)64, (short)0));
        add(PINK_TULIP = new Items("pink tulip", new ItemData(38, 7, ""), new ItemData(38, 7, ""), (byte)64, (short)0));
        add(OXEYE_DAISY = new Items("oxeye daisy", new ItemData(38, 8, ""), new ItemData(38, 8, ""), (byte)64, (short)0));
        add(BROWN_MUSHROOM = new Items("brown mushroom", new ItemData(39, 0, ""), new ItemData(39, 0, ""), (byte)64, (short)0));
        add(RED_MUSHROOM = new Items("red mushroom", new ItemData(40, 0, ""), new ItemData(40, 0, ""), (byte)64, (short)0));
        add(GOLD_BLOCK = new Items("gold block", new ItemData(41, 0, ""), new ItemData(41, 0, ""), (byte)64, (short)0));
        add(IRON_BLOCK = new Items("iron block", new ItemData(42, 0, ""), new ItemData(42, 0, ""), (byte)64, (short)0));
        add(DOUBLE_STONE_SLAB = new Items("double stone slab", new ItemData(43, 0, ""), new ItemData(43, 0, ""), (byte)64, (short)0));
        add(DOUBLE_SANDSTONE_SLAB = new Items("double sandstone slab", new ItemData(43, 1, ""), new ItemData(43, 1, ""), (byte)64, (short)0));
        add(DOUBLE_STONE_WOODEN_SLAB = new Items("double stone wooden slab", new ItemData(43, 2, ""), new ItemData(43, 2, ""), (byte)64, (short)0));
        add(DOUBLE_COBBLESTONE_SLAB = new Items("double cobblestone slab", new ItemData(43, 3, ""), new ItemData(43, 3, ""), (byte)64, (short)0));
        add(DOUBLE_BRICK_SLAB = new Items("double brick slab", new ItemData(43, 4, ""), new ItemData(43, 4, ""), (byte)64, (short)0));
        add(DOUBLE_STONE_BRICK_SLAB = new Items("double stone brick slab", new ItemData(43, 5, ""), new ItemData(43, 5, ""), (byte)64, (short)0));
        add(DOUBLE_NETHER_BRICK_SLAB = new Items("double nether brick slab", new ItemData(43, 6, ""), new ItemData(43, 6, ""), (byte)64, (short)0));
        add(DOUBLE_QUARTZ_SLAB = new Items("double quartz slab", new ItemData(43, 7, ""), new ItemData(43, 7, ""), (byte)64, (short)0));
        add(STONE_SLAB = new Items("stone slab", new ItemData(44, 0, ""), new ItemData(44, 0, ""), (byte)64, (short)0));
        add(SANDSTONE_SLAB = new Items("sandstone slab", new ItemData(44, 1, ""), new ItemData(44, 1, ""), (byte)64, (short)0));
        add(STONE_WOODEN_SLAB = new Items("stone wooden slab", new ItemData(44, 2, ""), new ItemData(44, 2, ""), (byte)64, (short)0));
        add(COBBLESTONE_SLAB = new Items("cobblestone slab", new ItemData(44, 3, ""), new ItemData(44, 3, ""), (byte)64, (short)0));
        add(BRICKS_SLAB = new Items("bricks slab", new ItemData(44, 4, ""), new ItemData(44, 4, ""), (byte)64, (short)0));
        add(STONE_BRICK_SLAB = new Items("stone brick slab", new ItemData(44, 5, ""), new ItemData(44, 5, ""), (byte)64, (short)0));
        add(NETHER_BRICK_SLAB = new Items("nether brick slab", new ItemData(44, 6, ""), new ItemData(44, 6, ""), (byte)64, (short)0));
        add(QUARTZ_SLAB = new Items("quartz slab", new ItemData(44, 7, ""), new ItemData(44, 7, ""), (byte)64, (short)0));
        add(BRICKS = new Items("bricks", new ItemData(45, 0, ""), new ItemData(45, 0, ""), (byte)64, (short)0));
        add(TNT = new Items("tnt", new ItemData(46, 0, ""), new ItemData(46, 0, ""), (byte)64, (short)0));
        add(BOOKSHELF = new Items("bookshelf", new ItemData(47, 0, ""), new ItemData(47, 0, ""), (byte)64, (short)0));
        add(MOSS_STONE = new Items("moss stone", new ItemData(48, 0, ""), new ItemData(48, 0, ""), (byte)64, (short)0));
        add(OBSIDIAN = new Items("obsidian", new ItemData(49, 0, ""), new ItemData(49, 0, ""), (byte)64, (short)0));
        add(TORCH = new Items("torch", new ItemData(50, 0, ""), new ItemData(50, 0, ""), (byte)64, (short)0));
        add(FIRE = new Items("fire", new ItemData(51, 0, ""), new ItemData(51, 0, ""), (byte)64, (short)0));
        add(MONSTER_SPAWNER = new Items("monster spawner", new ItemData(52, 0, ""), new ItemData(52, 0, ""), (byte)64, (short)0));
        add(OAK_WOOD_STAIRS = new Items("oak wood stairs", new ItemData(53, 0, ""), new ItemData(53, 0, ""), (byte)64, (short)0));
        add(CHEST = new Items("chest", new ItemData(54, 0, ""), new ItemData(54, 0, ""), (byte)64, (short)0));
        add(REDSTONE_WIRE = new Items("redstone wire", new ItemData(55, 0, ""), new ItemData(55, 0, ""), (byte)64, (short)0));
        add(DIAMOND_ORE = new Items("diamond ore", new ItemData(56, 0, ""), new ItemData(56, 0, ""), (byte)64, (short)0));
        add(DIAMOND_BLOCK = new Items("diamond block", new ItemData(57, 0, ""), new ItemData(57, 0, ""), (byte)64, (short)0));
        add(CRAFTING_TABLE = new Items("crafting table", new ItemData(58, 0, ""), new ItemData(58, 0, ""), (byte)64, (short)0));
        add(WHEAT_CROPS = new Items("wheat crops", new ItemData(59, 0, ""), new ItemData(59, 0, ""), (byte)64, (short)0));
        add(FARMLAND = new Items("farmland", new ItemData(60, 0, ""), new ItemData(60, 0, ""), (byte)64, (short)0));
        add(FURNACE = new Items("furnace", new ItemData(61, 0, ""), new ItemData(61, 0, ""), (byte)64, (short)0));
        add(BURNING_FURNACE = new Items("burning furnace", new ItemData(62, 0, ""), new ItemData(62, 0, ""), (byte)64, (short)0));
        add(SIGN_BLOCK = new Items("sign block", new ItemData(63, 0, ""), new ItemData(63, 0, ""), (byte)64, (short)0));
        add(OAK_DOOR_BLOCK = new Items("oak door block", new ItemData(64, 0, ""), new ItemData(64, 0, ""), (byte)64, (short)0));
        add(LADDER = new Items("ladder", new ItemData(65, 0, ""), new ItemData(65, 0, ""), (byte)64, (short)0));
        add(RAIL = new Items("rail", new ItemData(66, 0, ""), new ItemData(66, 0, ""), (byte)64, (short)0));
        add(COBBLESTONE_STAIRS = new Items("cobblestone stairs", new ItemData(67, 0, ""), new ItemData(67, 0, ""), (byte)64, (short)0));
        add(WALL_SIGN = new Items("wall sign", new ItemData(68, 0, ""), new ItemData(68, 0, ""), (byte)64, (short)0));
        add(LEVER = new Items("lever", new ItemData(69, 0, ""), new ItemData(69, 0, ""), (byte)64, (short)0));
        add(STONE_PRESSURE_PLATE = new Items("stone pressure plate", new ItemData(70, 0, ""), new ItemData(70, 0, ""), (byte)64, (short)0));
        add(IRON_DOOR_BLOCK = new Items("iron door block", new ItemData(71, 0, ""), new ItemData(71, 0, ""), (byte)64, (short)0));
        add(WOODEN_PRESSURE_PLATE = new Items("wooden pressure plate", new ItemData(72, 0, ""), new ItemData(72, 0, ""), (byte)64, (short)0));
        add(REDSTONE_ORE = new Items("redstone ore", new ItemData(73, 0, ""), new ItemData(73, 0, ""), (byte)64, (short)0));
        add(LIT_REDSTONE_ORE = new Items("lit redstone ore", new ItemData(74, 0, ""), new ItemData(74, 0, ""), (byte)64, (short)0));
        add(REDSTONE_TORCH = new Items("redstone torch", new ItemData(75, 0, ""), new ItemData(75, 0, ""), (byte)64, (short)0));
        add(ACTIVE_REDSTONE_TORCH = new Items("active redstone torch", new ItemData(76, 0, ""), new ItemData(76, 0, ""), (byte)64, (short)0));
        add(STONE_BUTTON = new Items("stone button", new ItemData(77, 0, ""), new ItemData(77, 0, ""), (byte)64, (short)0));
        add(SNOW_LAYER = new Items("snow layer", new ItemData(78, 0, ""), new ItemData(78, 0, ""), (byte)64, (short)0));
        add(ICE = new Items("ice", new ItemData(79, 0, ""), new ItemData(79, 0, ""), (byte)64, (short)0));
        add(SNOW_BLOCK = new Items("snow block", new ItemData(80, 0, ""), new ItemData(80, 0, ""), (byte)64, (short)0));
        add(CACTUS = new Items("cactus", new ItemData(81, 0, ""), new ItemData(81, 0, ""), (byte)64, (short)0));
        add(CLAY_BLOCK = new Items("clay block", new ItemData(82, 0, ""), new ItemData(82, 0, ""), (byte)64, (short)0));
        add(SUGAR_CANES_BLOCK = new Items("sugar canes block", new ItemData(83, 0, ""), new ItemData(83, 0, ""), (byte)64, (short)0));
        add(JUKEBOX = new Items("jukebox", new ItemData(84, 0, ""), new ItemData(84, 0, ""), (byte)64, (short)0));
        add(OAK_FENCE = new Items("oak fence", new ItemData(85, 0, ""), new ItemData(85, 0, ""), (byte)64, (short)0));
        add(PUMPKIN = new Items("pumpkin", new ItemData(86, 0, ""), new ItemData(86, 0, ""), (byte)64, (short)0));
        add(NETHERRACK = new Items("netherrack", new ItemData(87, 0, ""), new ItemData(87, 0, ""), (byte)64, (short)0));
        add(SOUL_SAND = new Items("soul sand", new ItemData(88, 0, ""), new ItemData(88, 0, ""), (byte)64, (short)0));
        add(GLOWSTONE = new Items("glowstone", new ItemData(89, 0, ""), new ItemData(89, 0, ""), (byte)64, (short)0));
        add(NETHER_PORTAL = new Items("nether portal", new ItemData(90, 0, ""), new ItemData(90, 0, ""), (byte)64, (short)0));
        add(JACK_O_LANTERN = new Items("jack o lantern", new ItemData(91, 0, ""), new ItemData(91, 0, ""), (byte)64, (short)0));
        add(CAKE_BLOCK = new Items("cake block", new ItemData(92, 0, ""), new ItemData(92, 0, ""), (byte)64, (short)0));
        add(INACTIVE_REDSTONE_REPEATER = new Items("inactive redstone repeater", new ItemData(93, 0, ""), new ItemData(93, 0, ""), (byte)64, (short)0));
        add(ACTIVE_REDSTONE_REPEATER = new Items("active redstone repeater", new ItemData(94, 0, ""), new ItemData(94, 0, ""), (byte)64, (short)0));
        add(WHITE_STAINED_GLASS = new Items("white stained glass", new ItemData(95, 0, ""), null, (byte)64, (short)0));
        add(ORANGE_STAINED_GLASS = new Items("orange stained glass", new ItemData(95, 1, ""), null, (byte)64, (short)0));
        add(MAGENTA_STAINED_GLASS = new Items("magenta stained glass", new ItemData(95, 2, ""), null, (byte)64, (short)0));
        add(LIGHT_BLUE_STAINED_GLASS = new Items("light blue stained glass", new ItemData(95, 3, ""), null, (byte)64, (short)0));
        add(YELLOW_STAINED_GLASS = new Items("yellow stained glass", new ItemData(95, 4, ""), null, (byte)64, (short)0));
        add(LIME_STAINED_GLASS = new Items("lime stained glass", new ItemData(95, 5, ""), null, (byte)64, (short)0));
        add(PINK_STAINED_GLASS = new Items("pink stained glass", new ItemData(95, 6, ""), null, (byte)64, (short)0));
        add(GRAY_STAINED_GLASS = new Items("gray stained glass", new ItemData(95, 7, ""), null, (byte)64, (short)0));
        add(LIGHT_GRAY_STAINED_GLASS = new Items("light gray stained glass", new ItemData(95, 8, ""), null, (byte)64, (short)0));
        add(CYAN_STAINED_GLASS = new Items("cyan stained glass", new ItemData(95, 9, ""), null, (byte)64, (short)0));
        add(PURPLE_STAINED_GLASS = new Items("purple stained glass", new ItemData(95, 10, ""), null, (byte)64, (short)0));
        add(BLUE_STAINED_GLASS = new Items("blue stained glass", new ItemData(95, 11, ""), null, (byte)64, (short)0));
        add(BROWN_STAINED_GLASS = new Items("brown stained glass", new ItemData(95, 12, ""), null, (byte)64, (short)0));
        add(GREEN_STAINED_GLASS = new Items("green stained glass", new ItemData(95, 13, ""), null, (byte)64, (short)0));
        add(RED_STAINED_GLASS = new Items("red stained glass", new ItemData(95, 14, ""), null, (byte)64, (short)0));
        add(BLACK_STAINED_GLASS = new Items("black stained glass", new ItemData(95, 15, ""), null, (byte)64, (short)0));
        add(WOODEN_TRAPDOOR = new Items("wooden trapdoor", new ItemData(96, 0, ""), new ItemData(96, 0, ""), (byte)64, (short)0));
        add(STONE_MONSTER_EGG = new Items("stone monster egg", new ItemData(97, 0, ""), new ItemData(97, 0, ""), (byte)64, (short)0));
        add(COBBLESTONE_MONSTER_EGG = new Items("cobblestone monster egg", new ItemData(97, 1, ""), new ItemData(97, 1, ""), (byte)64, (short)0));
        add(STONE_BRICK_MONSTER_EGG = new Items("stone brick monster egg", new ItemData(97, 2, ""), new ItemData(97, 2, ""), (byte)64, (short)0));
        add(MOSSY_STONE_BRICK_MONSTER_EGG = new Items("mossy stone brick monster egg", new ItemData(97, 3, ""), new ItemData(97, 3, ""), (byte)64, (short)0));
        add(CRACKED_STONE_BRICK_MONSTER_EGG = new Items("cracked stone brick monster egg", new ItemData(97, 4, ""), new ItemData(97, 4, ""), (byte)64, (short)0));
        add(CHISELED_STONE_BRICK_MONSTER_EGG = new Items("chiseled stone brick monster egg", new ItemData(97, 5, ""), new ItemData(97, 5, ""), (byte)64, (short)0));
        add(STONE_BRICKS = new Items("stone bricks", new ItemData(98, 0, ""), new ItemData(98, 0, ""), (byte)64, (short)0));
        add(MOSSY_STONE_BRICKS = new Items("mossy stone bricks", new ItemData(98, 1, ""), new ItemData(98, 1, ""), (byte)64, (short)0));
        add(CRACKED_STONE_BRICKS = new Items("cracked stone bricks", new ItemData(98, 2, ""), new ItemData(98, 2, ""), (byte)64, (short)0));
        add(CHISELED_STONE_BRICKS = new Items("chiseled stone bricks", new ItemData(98, 3, ""), new ItemData(98, 3, ""), (byte)64, (short)0));
        add(BROWN_MUSHROOM_BLOCK = new Items("brown mushroom block", new ItemData(99, 0, ""), new ItemData(99, 0, ""), (byte)64, (short)0));
        add(RED_MUSHROOM_BLOCK = new Items("red mushroom block", new ItemData(100, 0, ""), new ItemData(100, 0, ""), (byte)64, (short)0));
        add(IRON_BARS = new Items("iron bars", new ItemData(101, 0, ""), new ItemData(101, 0, ""), (byte)64, (short)0));
        add(GLASS_PANE = new Items("glass pane", new ItemData(102, 0, ""), new ItemData(102, 0, ""), (byte)64, (short)0));
        add(MELON_BLOCK = new Items("melon block", new ItemData(103, 0, ""), new ItemData(103, 0, ""), (byte)64, (short)0));
        add(PUMPKIN_STEM = new Items("pumpkin stem", new ItemData(104, 0, ""), new ItemData(104, 0, ""), (byte)64, (short)0));
        add(MELON_STEM = new Items("melon stem", new ItemData(105, 0, ""), new ItemData(105, 0, ""), (byte)64, (short)0));
        add(VINES = new Items("vines", new ItemData(106, 0, ""), new ItemData(106, 0, ""), (byte)64, (short)0));
        add(OAK_FENCE_GATE = new Items("oak fence gate", new ItemData(107, 0, ""), new ItemData(107, 0, ""), (byte)64, (short)0));
        add(BRICK_STAIRS = new Items("brick stairs", new ItemData(108, 0, ""), new ItemData(108, 0, ""), (byte)64, (short)0));
        add(STONE_BRICK_STAIRS = new Items("stone brick stairs", new ItemData(109, 0, ""), new ItemData(109, 0, ""), (byte)64, (short)0));
        add(MYCELIUM = new Items("mycelium", new ItemData(110, 0, ""), new ItemData(110, 0, ""), (byte)64, (short)0));
        add(LILY_PAD = new Items("lily pad", new ItemData(111, 0, ""), new ItemData(111, 0, ""), (byte)64, (short)0));
        add(NETHER_BRICK_BLOCK = new Items("nether brick block", new ItemData(112, 0, ""), new ItemData(112, 0, ""), (byte)64, (short)0));
        add(NETHER_BRICK_FENCE = new Items("nether brick fence", new ItemData(113, 0, ""), new ItemData(113, 0, ""), (byte)64, (short)0));
        add(NETHER_BRICK_STAIRS = new Items("nether brick stairs", new ItemData(114, 0, ""), new ItemData(114, 0, ""), (byte)64, (short)0));
        add(NETHER_WART_PLANT = new Items("nether wart plant", new ItemData(115, 0, ""), new ItemData(115, 0, ""), (byte)64, (short)0));
        add(ENCHANTMENT_TABLE = new Items("enchantment table", new ItemData(116, 0, ""), new ItemData(116, 0, ""), (byte)64, (short)0));
        add(BREWING_STAND_BLOCK = new Items("brewing stand block", new ItemData(117, 0, ""), new ItemData(117, 0, ""), (byte)64, (short)0));
        add(CAULDRON_BLOCK = new Items("cauldron block", new ItemData(118, 0, ""), new ItemData(118, 0, ""), (byte)64, (short)0));
        add(END_PORTAL = new Items("end portal", new ItemData(119, 0, ""), new ItemData(119, 0, ""), (byte)64, (short)0));
        add(END_PORTAL_FRAME = new Items("end portal frame", new ItemData(120, 0, ""), new ItemData(120, 0, ""), (byte)64, (short)0));
        add(END_STONE = new Items("end stone", new ItemData(121, 0, ""), new ItemData(121, 0, ""), (byte)64, (short)0));
        add(DRAGON_EGG = new Items("dragon egg", new ItemData(122, 0, ""), new ItemData(122, 0, ""), (byte)64, (short)0));
        add(REDSTONE_LAMP = new Items("redstone lamp", new ItemData(123, 0, ""), new ItemData(123, 0, ""), (byte)64, (short)0));
        add(ACTIVE_REDSTONE_LAMP = new Items("active redstone lamp", new ItemData(124, 0, ""), new ItemData(124, 0, ""), (byte)64, (short)0));
        add(DOUBLE_OAK_WOOD_SLAB = new Items("double oak wood slab", new ItemData(125, 0, ""), new ItemData(157, 0, ""), (byte)64, (short)0));
        add(DOUBLE_SPRUCE_WOOD_SLAB = new Items("double spruce wood slab", new ItemData(125, 1, ""), new ItemData(157, 1, ""), (byte)64, (short)0));
        add(DOUBLE_BIRCH_WOOD_SLAB = new Items("double birch wood slab", new ItemData(125, 2, ""), new ItemData(157, 2, ""), (byte)64, (short)0));
        add(DOUBLE_JUNGLE_WOOD_SLAB = new Items("double jungle wood slab", new ItemData(125, 3, ""), new ItemData(157, 3, ""), (byte)64, (short)0));
        add(DOUBLE_ACACIA_WOOD_SLAB = new Items("double acacia wood slab", new ItemData(125, 4, ""), new ItemData(157, 4, ""), (byte)64, (short)0));
        add(DOUBLE_DARK_OAK_WOOD_SLAB = new Items("double dark oak wood slab", new ItemData(125, 5, ""), new ItemData(157, 5, ""), (byte)64, (short)0));
        add(OAK_WOOD_SLAB = new Items("oak wood slab", new ItemData(126, 0, ""), new ItemData(158, 0, ""), (byte)64, (short)0));
        add(SPRUCE_WOOD_SLAB = new Items("spruce wood slab", new ItemData(126, 1, ""), new ItemData(158, 1, ""), (byte)64, (short)0));
        add(BIRCH_WOOD_SLAB = new Items("birch wood slab", new ItemData(126, 2, ""), new ItemData(158, 2, ""), (byte)64, (short)0));
        add(JUNGLE_WOOD_SLAB = new Items("jungle wood slab", new ItemData(126, 3, ""), new ItemData(158, 3, ""), (byte)64, (short)0));
        add(ACACIA_WOOD_SLAB = new Items("acacia wood slab", new ItemData(126, 4, ""), new ItemData(158, 4, ""), (byte)64, (short)0));
        add(DARK_OAK_WOOD_SLAB = new Items("dark oak wood slab", new ItemData(126, 5, ""), new ItemData(158, 5, ""), (byte)64, (short)0));
        add(COCOA_BLOCK = new Items("cocoa block", new ItemData(127, 0, ""), new ItemData(127, 0, ""), (byte)64, (short)0));
        add(SANDSTONE_STAIRS = new Items("sandstone stairs", new ItemData(128, 0, ""), new ItemData(128, 0, ""), (byte)64, (short)0));
        add(EMERALD_ORE = new Items("emerald ore", new ItemData(129, 0, ""), new ItemData(129, 0, ""), (byte)64, (short)0));
        add(ENDER_CHEST = new Items("ender chest", new ItemData(130, 0, ""), new ItemData(130, 0, ""), (byte)64, (short)0));
        add(TRIPWIRE_HOOK = new Items("tripwire hook", new ItemData(131, 0, ""), new ItemData(131, 0, ""), (byte)64, (short)0));
        add(TRIPWIRE = new Items("tripwire", new ItemData(132, 0, ""), new ItemData(132, 0, ""), (byte)64, (short)0));
        add(EMERALD_BLOCK = new Items("emerald block", new ItemData(133, 0, ""), new ItemData(133, 0, ""), (byte)64, (short)0));
        add(SPRUCE_WOOD_STAIRS = new Items("spruce wood stairs", new ItemData(134, 0, ""), new ItemData(134, 0, ""), (byte)64, (short)0));
        add(BIRCH_WOOD_STAIRS = new Items("birch wood stairs", new ItemData(135, 0, ""), new ItemData(135, 0, ""), (byte)64, (short)0));
        add(JUNGLE_WOOD_STAIRS = new Items("jungle wood stairs", new ItemData(136, 0, ""), new ItemData(136, 0, ""), (byte)64, (short)0));
        add(COMMAND_BLOCK = new Items("command block", new ItemData(137, 0, ""), null, (byte)64, (short)0));
        add(BEACON = new Items("beacon", new ItemData(138, 0, ""), new ItemData(138, 0, ""), (byte)64, (short)0));
        add(COBBLESTONE_WALL = new Items("cobblestone wall", new ItemData(139, 0, ""), new ItemData(139, 0, ""), (byte)64, (short)0));
        add(MOSSY_COBBLESTONE_WALL = new Items("mossy cobblestone wall", new ItemData(139, 1, ""), new ItemData(139, 1, ""), (byte)64, (short)0));
        add(FLOWER_POT_BLOCK = new Items("flower pot block", new ItemData(140, 0, ""), new ItemData(140, 0, ""), (byte)64, (short)0));
        add(CARROTS_BLOCK = new Items("carrots block", new ItemData(141, 0, ""), new ItemData(141, 0, ""), (byte)64, (short)0));
        add(POTATOES_BLOCK = new Items("potatoes block", new ItemData(142, 0, ""), new ItemData(142, 0, ""), (byte)64, (short)0));
        add(WOODEN_BUTTON = new Items("wooden button", new ItemData(143, 0, ""), new ItemData(143, 0, ""), (byte)64, (short)0));
        add(MOB_HEAD = new Items("mob head", new ItemData(144, 0, ""), new ItemData(144, 0, ""), (byte)64, (short)0));
        add(ANVIL = new Items("anvil", new ItemData(145, 0, ""), new ItemData(145, 0, ""), (byte)64, (short)0));
        add(TRAPPED_CHEST = new Items("trapped chest", new ItemData(146, 0, ""), new ItemData(146, 0, ""), (byte)64, (short)0));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE = new Items("light weighted pressure plate", new ItemData(147, 0, ""), new ItemData(147, 0, ""), (byte)64, (short)0));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE = new Items("heavy weighted pressure plate", new ItemData(148, 0, ""), new ItemData(148, 0, ""), (byte)64, (short)0));
        add(INACTIVE_REDSTONE_COMPARATOR = new Items("inactive redstone comparator", new ItemData(149, 0, ""), new ItemData(149, 0, ""), (byte)64, (short)0));
        add(ACTIVE_REDSTONE_COMPARATOR = new Items("active redstone comparator", new ItemData(150, 0, ""), new ItemData(150, 0, ""), (byte)64, (short)0));
        add(DAYLIGHT_SENSOR = new Items("daylight sensor", new ItemData(151, 0, ""), new ItemData(151, 0, ""), (byte)64, (short)0));
        add(REDSTONE_BLOCK = new Items("redstone block", new ItemData(152, 0, ""), new ItemData(152, 0, ""), (byte)64, (short)0));
        add(NETHER_QUARTZ_ORE = new Items("nether quartz ore", new ItemData(153, 0, ""), new ItemData(153, 0, ""), (byte)64, (short)0));
        add(HOPPER = new Items("hopper", new ItemData(154, 0, ""), new ItemData(154, 0, ""), (byte)64, (short)0));
        add(QUARTZ_BLOCK = new Items("quartz block", new ItemData(155, 0, ""), new ItemData(155, 0, ""), (byte)64, (short)0));
        add(CHISELED_QUARTZ_BLOCK = new Items("chiseled quartz block", new ItemData(155, 1, ""), new ItemData(155, 1, ""), (byte)64, (short)0));
        add(PILLAR_QUARTZ_BLOCK = new Items("pillar quartz block", new ItemData(155, 2, ""), new ItemData(155, 2, ""), (byte)64, (short)0));
        add(QUARTZ_STAIRS = new Items("quartz stairs", new ItemData(156, 0, ""), new ItemData(156, 0, ""), (byte)64, (short)0));
        add(ACTIVATOR_RAIL = new Items("activator rail", new ItemData(157, 0, ""), new ItemData(126, 0, ""), (byte)64, (short)0));
        add(DROPPER = new Items("dropper", new ItemData(158, 0, ""), new ItemData(125, 0, ""), (byte)64, (short)0));
        add(WHITE_STAINED_CLAY = new Items("white stained clay", new ItemData(159, 0, ""), new ItemData(159, 0, ""), (byte)64, (short)0));
        add(ORANGE_STAINED_CLAY = new Items("orange stained clay", new ItemData(159, 1, ""), new ItemData(159, 1, ""), (byte)64, (short)0));
        add(MAGENTA_STAINED_CLAY = new Items("magenta stained clay", new ItemData(159, 2, ""), new ItemData(159, 2, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_STAINED_CLAY = new Items("light blue stained clay", new ItemData(159, 3, ""), new ItemData(159, 3, ""), (byte)64, (short)0));
        add(YELLOW_STAINED_CLAY = new Items("yellow stained clay", new ItemData(159, 4, ""), new ItemData(159, 4, ""), (byte)64, (short)0));
        add(LIME_STAINED_CLAY = new Items("lime stained clay", new ItemData(159, 5, ""), new ItemData(159, 5, ""), (byte)64, (short)0));
        add(PINK_STAINED_CLAY = new Items("pink stained clay", new ItemData(159, 6, ""), new ItemData(159, 6, ""), (byte)64, (short)0));
        add(GRAY_STAINED_CLAY = new Items("gray stained clay", new ItemData(159, 7, ""), new ItemData(159, 7, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_STAINED_CLAY = new Items("light gray stained clay", new ItemData(159, 8, ""), new ItemData(159, 8, ""), (byte)64, (short)0));
        add(CYAN_STAINED_CLAY = new Items("cyan stained clay", new ItemData(159, 9, ""), new ItemData(159, 9, ""), (byte)64, (short)0));
        add(PURPLE_STAINED_CLAY = new Items("purple stained clay", new ItemData(159, 10, ""), new ItemData(159, 10, ""), (byte)64, (short)0));
        add(BLUE_STAINED_CLAY = new Items("blue stained clay", new ItemData(159, 11, ""), new ItemData(159, 11, ""), (byte)64, (short)0));
        add(BROWN_STAINED_CLAY = new Items("brown stained clay", new ItemData(159, 12, ""), new ItemData(159, 12, ""), (byte)64, (short)0));
        add(GREEN_STAINED_CLAY = new Items("green stained clay", new ItemData(159, 13, ""), new ItemData(159, 13, ""), (byte)64, (short)0));
        add(RED_STAINED_CLAY = new Items("red stained clay", new ItemData(159, 14, ""), new ItemData(159, 14, ""), (byte)64, (short)0));
        add(BLACK_STAINED_CLAY = new Items("black stained clay", new ItemData(159, 15, ""), new ItemData(159, 15, ""), (byte)64, (short)0));
        add(WHITE_STAINED_GLASS_PANE = new Items("white stained glass pane", new ItemData(160, 0, ""), null, (byte)64, (short)0));
        add(ORANGE_STAINED_GLASS_PANE = new Items("orange stained glass pane", new ItemData(160, 1, ""), null, (byte)64, (short)0));
        add(MAGENTA_STAINED_GLASS_PANE = new Items("magenta stained glass pane", new ItemData(160, 2, ""), null, (byte)64, (short)0));
        add(LIGHT_BLUE_STAINED_GLASS_PANE = new Items("light blue stained glass pane", new ItemData(160, 3, ""), null, (byte)64, (short)0));
        add(YELLOW_STAINED_GLASS_PANE = new Items("yellow stained glass pane", new ItemData(160, 4, ""), null, (byte)64, (short)0));
        add(LIME_STAINED_GLASS_PANE = new Items("lime stained glass pane", new ItemData(160, 5, ""), null, (byte)64, (short)0));
        add(PINK_STAINED_GLASS_PANE = new Items("pink stained glass pane", new ItemData(160, 6, ""), null, (byte)64, (short)0));
        add(GRAY_STAINED_GLASS_PANE = new Items("gray stained glass pane", new ItemData(160, 7, ""), null, (byte)64, (short)0));
        add(LIGHT_GRAY_STAINED_GLASS_PANE = new Items("light gray stained glass pane", new ItemData(160, 8, ""), null, (byte)64, (short)0));
        add(CYAN_STAINED_GLASS_PANE = new Items("cyan stained glass pane", new ItemData(160, 9, ""), null, (byte)64, (short)0));
        add(PURPLE_STAINED_GLASS_PANE = new Items("purple stained glass pane", new ItemData(160, 10, ""), null, (byte)64, (short)0));
        add(BLUE_STAINED_GLASS_PANE = new Items("blue stained glass pane", new ItemData(160, 11, ""), null, (byte)64, (short)0));
        add(BROWN_STAINED_GLASS_PANE = new Items("brown stained glass pane", new ItemData(160, 12, ""), null, (byte)64, (short)0));
        add(GREEN_STAINED_GLASS_PANE = new Items("green stained glass pane", new ItemData(160, 13, ""), null, (byte)64, (short)0));
        add(RED_STAINED_GLASS_PANE = new Items("red stained glass pane", new ItemData(160, 14, ""), null, (byte)64, (short)0));
        add(BLACK_STAINED_GLASS_PANE = new Items("black stained glass pane", new ItemData(160, 15, ""), null, (byte)64, (short)0));
        add(ACACIA_LEAVES = new Items("acacia leaves", new ItemData(161, 0, ""), new ItemData(161, 0, ""), (byte)64, (short)0));
        add(DARK_OAK_LEAVES = new Items("dark oak leaves", new ItemData(161, 1, ""), new ItemData(161, 1, ""), (byte)64, (short)0));
        add(ACACIA_WOOD = new Items("acacia wood", new ItemData(162, 0, ""), new ItemData(162, 0, ""), (byte)64, (short)0));
        add(DARK_OAK_WOOD = new Items("dark oak wood", new ItemData(162, 1, ""), new ItemData(162, 1, ""), (byte)64, (short)0));
        add(ACACIA_WOOD_STAIRS = new Items("acacia wood stairs", new ItemData(163, 0, ""), new ItemData(163, 0, ""), (byte)64, (short)0));
        add(DARK_OAK_WOOD_STAIRS = new Items("dark oak wood stairs", new ItemData(164, 0, ""), new ItemData(164, 0, ""), (byte)64, (short)0));
        add(SLIME_BLOCK = new Items("slime block", new ItemData(165, 0, ""), new ItemData(165, 0, ""), (byte)64, (short)0));
        add(BARRIER = new Items("barrier", new ItemData(166, 0, ""), new ItemData(95, 0, ""), (byte)64, (short)0));
        add(IRON_TRAPDOOR = new Items("iron trapdoor", new ItemData(167, 0, ""), new ItemData(167, 0, ""), (byte)64, (short)0));
        add(PRISMARINE = new Items("prismarine", new ItemData(168, 0, ""), new ItemData(168, 0, ""), (byte)64, (short)0));
        add(PRISMARINE_BRICKS = new Items("prismarine bricks", new ItemData(168, 1, ""), new ItemData(168, 1, ""), (byte)64, (short)0));
        add(DARK_PRISMARINE = new Items("dark prismarine", new ItemData(168, 2, ""), new ItemData(168, 2, ""), (byte)64, (short)0));
        add(SEA_LANTERN = new Items("sea lantern", new ItemData(169, 0, ""), new ItemData(169, 0, ""), (byte)64, (short)0));
        add(HAY_BALE = new Items("hay bale", new ItemData(170, 0, ""), new ItemData(170, 0, ""), (byte)64, (short)0));
        add(WHITE_CARPET = new Items("white carpet", new ItemData(171, 0, ""), new ItemData(171, 0, ""), (byte)64, (short)0));
        add(ORANGE_CARPET = new Items("orange carpet", new ItemData(171, 1, ""), new ItemData(171, 1, ""), (byte)64, (short)0));
        add(MAGENTA_CARPET = new Items("magenta carpet", new ItemData(171, 2, ""), new ItemData(171, 2, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_CARPET = new Items("light blue carpet", new ItemData(171, 3, ""), new ItemData(171, 3, ""), (byte)64, (short)0));
        add(YELLOW_CARPET = new Items("yellow carpet", new ItemData(171, 4, ""), new ItemData(171, 4, ""), (byte)64, (short)0));
        add(LIME_CARPET = new Items("lime carpet", new ItemData(171, 5, ""), new ItemData(171, 5, ""), (byte)64, (short)0));
        add(PINK_CARPET = new Items("pink carpet", new ItemData(171, 6, ""), new ItemData(171, 6, ""), (byte)64, (short)0));
        add(GRAY_CARPET = new Items("gray carpet", new ItemData(171, 7, ""), new ItemData(171, 7, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_CARPET = new Items("light gray carpet", new ItemData(171, 8, ""), new ItemData(171, 8, ""), (byte)64, (short)0));
        add(CYAN_CARPET = new Items("cyan carpet", new ItemData(171, 9, ""), new ItemData(171, 9, ""), (byte)64, (short)0));
        add(PURPLE_CARPET = new Items("purple carpet", new ItemData(171, 10, ""), new ItemData(171, 10, ""), (byte)64, (short)0));
        add(BLUE_CARPET = new Items("blue carpet", new ItemData(171, 11, ""), new ItemData(171, 11, ""), (byte)64, (short)0));
        add(BROWN_CARPET = new Items("brown carpet", new ItemData(171, 12, ""), new ItemData(171, 12, ""), (byte)64, (short)0));
        add(GREEN_CARPET = new Items("green carpet", new ItemData(171, 13, ""), new ItemData(171, 13, ""), (byte)64, (short)0));
        add(RED_CARPET = new Items("red carpet", new ItemData(171, 14, ""), new ItemData(171, 14, ""), (byte)64, (short)0));
        add(BLACK_CARPET = new Items("black carpet", new ItemData(171, 15, ""), new ItemData(171, 15, ""), (byte)64, (short)0));
        add(HARDENED_CLAY = new Items("hardened clay", new ItemData(172, 0, ""), new ItemData(172, 0, ""), (byte)64, (short)0));
        add(COAL_BLOCK = new Items("coal block", new ItemData(173, 0, ""), new ItemData(173, 0, ""), (byte)64, (short)0));
        add(PACKED_ICE = new Items("packed ice", new ItemData(174, 0, ""), new ItemData(174, 0, ""), (byte)64, (short)0));
        add(SUNFLOWER = new Items("sunflower", new ItemData(175, 0, ""), new ItemData(175, 0, ""), (byte)64, (short)0));
        add(LILIAC = new Items("liliac", new ItemData(175, 1, ""), new ItemData(175, 1, ""), (byte)64, (short)0));
        add(DOUBLE_TALLGRASS = new Items("double tallgrass", new ItemData(175, 2, ""), new ItemData(175, 2, ""), (byte)64, (short)0));
        add(LARGE_FERN = new Items("large fern", new ItemData(175, 3, ""), new ItemData(175, 3, ""), (byte)64, (short)0));
        add(ROSE_BUSH = new Items("rose bush", new ItemData(175, 4, ""), new ItemData(175, 4, ""), (byte)64, (short)0));
        add(PEONY = new Items("peony", new ItemData(175, 5, ""), new ItemData(175, 5, ""), (byte)64, (short)0));
        add(PLANTED_BANNER = new Items("planted banner", new ItemData(176, 0, ""), new ItemData(176, 0, ""), (byte)64, (short)0));
        add(WALL_BANNER = new Items("wall banner", new ItemData(177, 0, ""), new ItemData(177, 0, ""), (byte)64, (short)0));
        add(INVERTED_DAYLIGHT_SENSOR = new Items("inverted daylight sensor", new ItemData(178, 0, ""), new ItemData(178, 0, ""), (byte)64, (short)0));
        add(RED_SANDSTONE = new Items("red sandstone", new ItemData(179, 0, ""), new ItemData(179, 0, ""), (byte)64, (short)0));
        add(CHISELED_RED_SANDSTONE = new Items("chiseled red sandstone", new ItemData(179, 1, ""), new ItemData(179, 1, ""), (byte)64, (short)0));
        add(SMOOTH_RED_SANDSTONE = new Items("smooth red sandstone", new ItemData(179, 2, ""), new ItemData(179, 2, ""), (byte)64, (short)0));
        add(RED_SANDSTONE_STAIRS = new Items("red sandstone stairs", new ItemData(180, 0, ""), new ItemData(180, 0, ""), (byte)64, (short)0));
        add(DOUBLE_RED_SANDSTONE_SLAB = new Items("double red sandstone slab", new ItemData(181, 0, ""), new ItemData(181, 0, ""), (byte)64, (short)0));
        add(RED_SANDSTONE_SLAB = new Items("red sandstone slab", new ItemData(182, 0, ""), new ItemData(182, 0, ""), (byte)64, (short)0));
        add(SPRUCE_FENCE_GATE = new Items("spruce fence gate", new ItemData(183, 0, ""), new ItemData(183, 0, ""), (byte)64, (short)0));
        add(BIRCH_FENCE_GATE = new Items("birch fence gate", new ItemData(184, 0, ""), new ItemData(184, 0, ""), (byte)64, (short)0));
        add(JUNGLE_FENCE_GATE = new Items("jungle fence gate", new ItemData(185, 0, ""), new ItemData(185, 0, ""), (byte)64, (short)0));
        add(DARK_OAK_FENCE_GATE = new Items("dark oak fence gate", new ItemData(186, 0, ""), new ItemData(186, 0, ""), (byte)64, (short)0));
        add(ACACIA_FENCE_GATE = new Items("acacia fence gate", new ItemData(187, 0, ""), new ItemData(187, 0, ""), (byte)64, (short)0));
        add(SPRUCE_FENCE = new Items("spruce fence", new ItemData(188, 0, ""), new ItemData(85, 1, ""), (byte)64, (short)0));
        add(BIRCH_FENCE = new Items("birch fence", new ItemData(189, 0, ""), new ItemData(85, 2, ""), (byte)64, (short)0));
        add(JUNGLE_FENCE = new Items("jungle fence", new ItemData(190, 0, ""), new ItemData(85, 3, ""), (byte)64, (short)0));
        add(DARK_OAK_FENCE = new Items("dark oak fence", new ItemData(191, 0, ""), new ItemData(85, 5, ""), (byte)64, (short)0));
        add(ACACIA_FENCE = new Items("acacia fence", new ItemData(192, 0, ""), new ItemData(85, 4, ""), (byte)64, (short)0));
        add(SPRUCE_DOOR_BLOCK = new Items("spruce door block", new ItemData(193, 0, ""), new ItemData(193, 0, ""), (byte)64, (short)0));
        add(BIRCH_DOOR_BLOCK = new Items("birch door block", new ItemData(194, 0, ""), new ItemData(194, 0, ""), (byte)64, (short)0));
        add(JUNGLE_DOOR_BLOCK = new Items("jungle door block", new ItemData(195, 0, ""), new ItemData(195, 0, ""), (byte)64, (short)0));
        add(ACACIA_DOOR_BLOCK = new Items("acacia door block", new ItemData(196, 0, ""), new ItemData(196, 0, ""), (byte)64, (short)0));
        add(DARK_OAK_DOOR_BLOCK = new Items("dark oak door block", new ItemData(197, 0, ""), new ItemData(197, 0, ""), (byte)64, (short)0));
        add(END_ROD = new Items("end rod", new ItemData(198, 0, ""), new ItemData(208, 0, ""), (byte)64, (short)0));
        add(ITEM_FRAME_BLOCK = new Items("item frame block", null, new ItemData(199, 0, ""), (byte)64, (short)0));
        add(CHORUS_PLANT = new Items("chorus plant", new ItemData(199, 0, ""), new ItemData(240, 0, ""), (byte)64, (short)0));
        add(CHORUS_FLOWER = new Items("chorus flower", new ItemData(200, 0, ""), new ItemData(200, 0, ""), (byte)64, (short)0));
        add(PURPUR_BLOCK = new Items("purpur block", new ItemData(201, 0, ""), new ItemData(201, 0, ""), (byte)64, (short)0));
        add(PURPUR_PILLAR = new Items("purpur pillar", new ItemData(202, 0, ""), new ItemData(202, 0, ""), (byte)64, (short)0));
        add(PURPUR_STAIRS = new Items("purpur stairs", new ItemData(203, 0, ""), new ItemData(203, 0, ""), (byte)64, (short)0));
        add(PURPUR_DOUBLE_SLAB = new Items("purpur double slab", new ItemData(204, 0, ""), new ItemData(204, 0, ""), (byte)64, (short)0));
        add(PURPUR_SLAB = new Items("purpur slab", new ItemData(205, 0, ""), new ItemData(205, 0, ""), (byte)64, (short)0));
        add(END_STONE_BRICKS = new Items("end stone bricks", new ItemData(206, 0, ""), new ItemData(206, 0, ""), (byte)64, (short)0));
        add(BEETROOT_BLOCK = new Items("beetroot block", new ItemData(207, 0, ""), new ItemData(244, 0, ""), (byte)64, (short)0));
        add(GRASS_PATH = new Items("grass path", new ItemData(208, 0, ""), new ItemData(198, 0, ""), (byte)64, (short)0));
        add(END_GATEWAY = new Items("end gateway", new ItemData(209, 0, ""), new ItemData(209, 0, ""), (byte)64, (short)0));
        add(REPEATING_COMMAND_BLOCK = new Items("repeating command block", new ItemData(210, 0, ""), null, (byte)64, (short)0));
        add(CHAIN_COMMAND_BLOCK = new Items("chain command block", new ItemData(211, 0, ""), null, (byte)64, (short)0));
        add(FROSTED_ICE = new Items("frosted ice", new ItemData(212, 0, ""), new ItemData(207, 0, ""), (byte)64, (short)0));
        add(MAGMA_BLOCK = new Items("magma block", new ItemData(213, 0, ""), new ItemData(213, 0, ""), (byte)64, (short)0));
        add(NETHER_WART_BLOCK = new Items("nether wart block", new ItemData(214, 0, ""), new ItemData(214, 0, ""), (byte)64, (short)0));
        add(RED_NETHER_BRICK = new Items("red nether brick", new ItemData(215, 0, ""), new ItemData(215, 0, ""), (byte)64, (short)0));
        add(BONE_BLOCK = new Items("bone block", new ItemData(216, 0, ""), new ItemData(216, 0, ""), (byte)64, (short)0));
        add(STRUCTURE_VOID = new Items("structure void", new ItemData(217, 0, ""), null, (byte)64, (short)0));
        add(OBSERVER = new Items("observer", new ItemData(218, 0, ""), new ItemData(251, 0, ""), (byte)64, (short)0));
        add(WHITE_SHULKER_BOX = new Items("white shulker box", new ItemData(219, 0, ""), new ItemData(218, 0, ""), (byte)64, (short)0));
        add(ORANGE_SHULKER_BOX = new Items("orange shulker box", new ItemData(220, 0, ""), new ItemData(218, 1, ""), (byte)64, (short)0));
        add(MAGENTA_SHULKER_BOX = new Items("magenta shulker box", new ItemData(221, 0, ""), new ItemData(218, 2, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_SHULKER_BOX = new Items("light blue shulker box", new ItemData(222, 0, ""), new ItemData(218, 3, ""), (byte)64, (short)0));
        add(YELLOW_SHULKER_BOX = new Items("yellow shulker box", new ItemData(223, 0, ""), new ItemData(218, 4, ""), (byte)64, (short)0));
        add(LIME_SHULKER_BOX = new Items("lime shulker box", new ItemData(224, 0, ""), new ItemData(218, 5, ""), (byte)64, (short)0));
        add(PINK_SHULKER_BOX = new Items("pink shulker box", new ItemData(225, 0, ""), new ItemData(218, 6, ""), (byte)64, (short)0));
        add(GRAY_SHULKER_BOX = new Items("gray shulker box", new ItemData(226, 0, ""), new ItemData(218, 7, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_SHULKER_BOX = new Items("light gray shulker box", new ItemData(227, 0, ""), new ItemData(218, 8, ""), (byte)64, (short)0));
        add(CYAN_SHULKER_BOX = new Items("cyan shulker box", new ItemData(228, 0, ""), new ItemData(218, 9, ""), (byte)64, (short)0));
        add(PURPLE_SHULKER_BOX = new Items("purple shulker box", new ItemData(229, 0, ""), new ItemData(218, 10, ""), (byte)64, (short)0));
        add(BLUE_SHULKER_BOX = new Items("blue shulker box", new ItemData(230, 0, ""), new ItemData(218, 11, ""), (byte)64, (short)0));
        add(BROWN_SHULKER_BOX = new Items("brown shulker box", new ItemData(231, 0, ""), new ItemData(218, 12, ""), (byte)64, (short)0));
        add(GREEN_SHULKER_BOX = new Items("green shulker box", new ItemData(232, 0, ""), new ItemData(218, 13, ""), (byte)64, (short)0));
        add(RED_SHULKER_BOX = new Items("red shulker box", new ItemData(233, 0, ""), new ItemData(218, 14, ""), (byte)64, (short)0));
        add(BLACK_SHULKER_BOX = new Items("black shulker box", new ItemData(234, 0, ""), new ItemData(218, 15, ""), (byte)64, (short)0));
        add(WHITE_GLAZED_TERRACOTTA = new Items("white glazed terracotta", new ItemData(235, 0, ""), new ItemData(220, 0, ""), (byte)64, (short)0));
        add(ORANGE_GLAZED_TERRACOTTA = new Items("orange glazed terracotta", new ItemData(236, 0, ""), new ItemData(221, 0, ""), (byte)64, (short)0));
        add(MAGENTA_GLAZED_TERRACOTTA = new Items("magenta glazed terracotta", new ItemData(237, 0, ""), new ItemData(222, 0, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_GLAZED_TERRACOTTA = new Items("light blue glazed terracotta", new ItemData(238, 0, ""), new ItemData(223, 0, ""), (byte)64, (short)0));
        add(YELLOW_GLAZED_TERRACOTTA = new Items("yellow glazed terracotta", new ItemData(239, 0, ""), new ItemData(224, 0, ""), (byte)64, (short)0));
        add(LIME_GLAZED_TERRACOTTA = new Items("lime glazed terracotta", new ItemData(240, 0, ""), new ItemData(225, 0, ""), (byte)64, (short)0));
        add(PINK_GLAZED_TERRACOTTA = new Items("pink glazed terracotta", new ItemData(241, 0, ""), new ItemData(226, 0, ""), (byte)64, (short)0));
        add(GRAY_GLAZED_TERRACOTTA = new Items("gray glazed terracotta", new ItemData(242, 0, ""), new ItemData(227, 0, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_GLAZED_TERRACOTTA = new Items("light gray glazed terracotta", new ItemData(243, 0, ""), new ItemData(228, 0, ""), (byte)64, (short)0));
        add(CYAN_GLAZED_TERRACOTTA = new Items("cyan glazed terracotta", new ItemData(244, 0, ""), new ItemData(229, 0, ""), (byte)64, (short)0));
        add(PURPLE_GLAZED_TERRACOTTA = new Items("purple glazed terracotta", new ItemData(245, 0, ""), new ItemData(219, 0, ""), (byte)64, (short)0));
        add(BLUE_GLAZED_TERRACOTTA = new Items("blue glazed terracotta", new ItemData(246, 0, ""), new ItemData(231, 0, ""), (byte)64, (short)0));
        add(BROWN_GLAZED_TERRACOTTA = new Items("brown glazed terracotta", new ItemData(247, 0, ""), new ItemData(232, 0, ""), (byte)64, (short)0));
        add(GREEN_GLAZED_TERRACOTTA = new Items("green glazed terracotta", new ItemData(248, 0, ""), new ItemData(233, 0, ""), (byte)64, (short)0));
        add(RED_GLAZED_TERRACOTTA = new Items("red glazed terracotta", new ItemData(249, 0, ""), new ItemData(234, 0, ""), (byte)64, (short)0));
        add(BLACK_GLAZED_TERRACOTTA = new Items("black glazed terracotta", new ItemData(250, 0, ""), new ItemData(235, 0, ""), (byte)64, (short)0));
        add(WHITE_CONCRETE = new Items("white concrete", new ItemData(251, 0, ""), new ItemData(236, 0, ""), (byte)64, (short)0));
        add(ORANGE_CONCRETE = new Items("orange concrete", new ItemData(251, 1, ""), new ItemData(236, 1, ""), (byte)64, (short)0));
        add(MAGENTA_CONCRETE = new Items("magenta concrete", new ItemData(251, 2, ""), new ItemData(236, 2, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_CONCRETE = new Items("light blue concrete", new ItemData(251, 3, ""), new ItemData(236, 3, ""), (byte)64, (short)0));
        add(YELLOW_CONCRETE = new Items("yellow concrete", new ItemData(251, 4, ""), new ItemData(236, 4, ""), (byte)64, (short)0));
        add(LIME_CONCRETE = new Items("lime concrete", new ItemData(251, 5, ""), new ItemData(236, 5, ""), (byte)64, (short)0));
        add(PINK_CONCRETE = new Items("pink concrete", new ItemData(251, 6, ""), new ItemData(236, 6, ""), (byte)64, (short)0));
        add(GRAY_CONCRETE = new Items("gray concrete", new ItemData(251, 7, ""), new ItemData(236, 7, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_CONCRETE = new Items("light gray concrete", new ItemData(251, 8, ""), new ItemData(236, 8, ""), (byte)64, (short)0));
        add(CYAN_CONCRETE = new Items("cyan concrete", new ItemData(251, 9, ""), new ItemData(236, 9, ""), (byte)64, (short)0));
        add(PURPLE_CONCRETE = new Items("purple concrete", new ItemData(251, 10, ""), new ItemData(236, 10, ""), (byte)64, (short)0));
        add(BLUE_CONCRETE = new Items("blue concrete", new ItemData(251, 11, ""), new ItemData(236, 11, ""), (byte)64, (short)0));
        add(BROWN_CONCRETE = new Items("brown concrete", new ItemData(251, 12, ""), new ItemData(236, 12, ""), (byte)64, (short)0));
        add(GREEN_CONCRETE = new Items("green concrete", new ItemData(251, 13, ""), new ItemData(236, 13, ""), (byte)64, (short)0));
        add(RED_CONCRETE = new Items("red concrete", new ItemData(251, 14, ""), new ItemData(236, 14, ""), (byte)64, (short)0));
        add(BLACK_CONCRETE = new Items("black concrete", new ItemData(251, 15, ""), new ItemData(236, 15, ""), (byte)64, (short)0));
        add(WHITE_CONCRETE_POWDER = new Items("white concrete powder", new ItemData(252, 0, ""), new ItemData(237, 0, ""), (byte)64, (short)0));
        add(ORANGE_CONCRETE_POWDER = new Items("orange concrete powder", new ItemData(252, 1, ""), new ItemData(237, 1, ""), (byte)64, (short)0));
        add(MAGENTA_CONCRETE_POWDER = new Items("magenta concrete powder", new ItemData(252, 2, ""), new ItemData(237, 2, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_CONCRETE_POWDER = new Items("light blue concrete powder", new ItemData(252, 3, ""), new ItemData(237, 3, ""), (byte)64, (short)0));
        add(YELLOW_CONCRETE_POWDER = new Items("yellow concrete powder", new ItemData(252, 4, ""), new ItemData(237, 4, ""), (byte)64, (short)0));
        add(LIME_CONCRETE_POWDER = new Items("lime concrete powder", new ItemData(252, 5, ""), new ItemData(237, 5, ""), (byte)64, (short)0));
        add(PINK_CONCRETE_POWDER = new Items("pink concrete powder", new ItemData(252, 6, ""), new ItemData(237, 6, ""), (byte)64, (short)0));
        add(GRAY_CONCRETE_POWDER = new Items("gray concrete powder", new ItemData(252, 7, ""), new ItemData(237, 7, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_CONCRETE_POWDER = new Items("light gray concrete powder", new ItemData(252, 8, ""), new ItemData(237, 8, ""), (byte)64, (short)0));
        add(CYAN_CONCRETE_POWDER = new Items("cyan concrete powder", new ItemData(252, 9, ""), new ItemData(237, 9, ""), (byte)64, (short)0));
        add(PURPLE_CONCRETE_POWDER = new Items("purple concrete powder", new ItemData(252, 10, ""), new ItemData(237, 10, ""), (byte)64, (short)0));
        add(BLUE_CONCRETE_POWDER = new Items("blue concrete powder", new ItemData(252, 11, ""), new ItemData(237, 11, ""), (byte)64, (short)0));
        add(BROWN_CONCRETE_POWDER = new Items("brown concrete powder", new ItemData(252, 12, ""), new ItemData(237, 12, ""), (byte)64, (short)0));
        add(GREEN_CONCRETE_POWDER = new Items("green concrete powder", new ItemData(252, 13, ""), new ItemData(237, 13, ""), (byte)64, (short)0));
        add(RED_CONCRETE_POWDER = new Items("red concrete powder", new ItemData(252, 14, ""), new ItemData(237, 14, ""), (byte)64, (short)0));
        add(BLACK_CONCRETE_POWDER = new Items("black concrete powder", new ItemData(252, 15, ""), new ItemData(237, 15, ""), (byte)64, (short)0));
        add(STONECUTTER = new Items("stonecutter", null, new ItemData(245, 0, ""), (byte)64, (short)0));
        add(GLOWING_OBSIDIAN = new Items("glowing obsidian", null, new ItemData(246, 0, ""), (byte)64, (short)0));
        add(NETHER_REACTOR_CORE = new Items("nether reactor core", null, new ItemData(247, 0, ""), (byte)64, (short)0));
        add(UPDATE_BLOCK = new Items("update block", null, new ItemData(248, 0, ""), (byte)64, (short)0));
        add(ATEUPD_BLOCK = new Items("ateupd block", null, new ItemData(249, 0, ""), (byte)64, (short)0));
        add(STRUCTURE_SAVE = new Items("structure save", new ItemData(255, 0, ""), new ItemData(252, 0, ""), (byte)64, (short)0));
        add(STRUCTURE_LOAD = new Items("structure load", new ItemData(255, 1, ""), new ItemData(252, 1, ""), (byte)64, (short)0));
        add(STRUCTURE_CORNER = new Items("structure corner", new ItemData(255, 2, ""), new ItemData(252, 2, ""), (byte)64, (short)0));
        add(STRUCTURE_DATA = new Items("structure data", new ItemData(255, 3, ""), new ItemData(252, 3, ""), (byte)64, (short)0));
        add(IRON_SHOVEL = new Items("iron shovel", new ItemData(256, 0, ""), new ItemData(256, 0, ""), (byte)1, (short)251));
        add(IRON_PICKAXE = new Items("iron pickaxe", new ItemData(257, 0, ""), new ItemData(257, 0, ""), (byte)1, (short)251));
        add(IRON_AXE = new Items("iron axe", new ItemData(258, 0, ""), new ItemData(258, 0, ""), (byte)1, (short)251));
        add(FLINT_AND_STEEL = new Items("flint and steel", new ItemData(259, 0, ""), new ItemData(259, 0, ""), (byte)1, (short)65));
        add(APPLE = new Items("apple", new ItemData(260, 0, ""), new ItemData(260, 0, ""), (byte)64, (short)0));
        add(BOW = new Items("bow", new ItemData(261, 0, ""), new ItemData(261, 0, ""), (byte)1, (short)385));
        add(ARROW = new Items("arrow", new ItemData(262, 0, ""), new ItemData(262, 0, ""), (byte)64, (short)0));
        add(COAL = new Items("coal", new ItemData(263, 0, ""), new ItemData(263, 0, ""), (byte)64, (short)0));
        add(CHARCOAL = new Items("charcoal", new ItemData(263, 1, ""), new ItemData(263, 1, ""), (byte)64, (short)0));
        add(DIAMOND = new Items("diamond", new ItemData(264, 0, ""), new ItemData(264, 0, ""), (byte)64, (short)0));
        add(IRON_INGOT = new Items("iron ingot", new ItemData(265, 0, ""), new ItemData(265, 0, ""), (byte)64, (short)0));
        add(GOLD_INGOT = new Items("gold ingot", new ItemData(266, 0, ""), new ItemData(266, 0, ""), (byte)64, (short)0));
        add(IRON_SWORD = new Items("iron sword", new ItemData(267, 0, ""), new ItemData(267, 0, ""), (byte)1, (short)251));
        add(WOODEN_SWORD = new Items("wooden sword", new ItemData(268, 0, ""), new ItemData(268, 0, ""), (byte)1, (short)60));
        add(WOODEN_SHOVEL = new Items("wooden shovel", new ItemData(269, 0, ""), new ItemData(269, 0, ""), (byte)1, (short)60));
        add(WOODEN_PICKAXE = new Items("wooden pickaxe", new ItemData(270, 0, ""), new ItemData(270, 0, ""), (byte)1, (short)60));
        add(WOODEN_AXE = new Items("wooden axe", new ItemData(271, 0, ""), new ItemData(271, 0, ""), (byte)1, (short)60));
        add(STONE_SWORD = new Items("stone sword", new ItemData(272, 0, ""), new ItemData(272, 0, ""), (byte)1, (short)132));
        add(STONE_SHOVEL = new Items("stone shovel", new ItemData(273, 0, ""), new ItemData(273, 0, ""), (byte)1, (short)132));
        add(STONE_PICKAXE = new Items("stone pickaxe", new ItemData(274, 0, ""), new ItemData(274, 0, ""), (byte)1, (short)132));
        add(STONE_AXE = new Items("stone axe", new ItemData(275, 0, ""), new ItemData(275, 0, ""), (byte)1, (short)132));
        add(DIAMOND_SWORD = new Items("diamond sword", new ItemData(276, 0, ""), new ItemData(276, 0, ""), (byte)1, (short)1562));
        add(DIAMOND_SHOVEL = new Items("diamond shovel", new ItemData(277, 0, ""), new ItemData(277, 0, ""), (byte)1, (short)1562));
        add(DIAMOND_PICKAXE = new Items("diamond pickaxe", new ItemData(278, 0, ""), new ItemData(278, 0, ""), (byte)1, (short)1562));
        add(DIAMOND_AXE = new Items("diamond axe", new ItemData(279, 0, ""), new ItemData(279, 0, ""), (byte)1, (short)1562));
        add(STICK = new Items("stick", new ItemData(280, 0, ""), new ItemData(280, 0, ""), (byte)64, (short)0));
        add(BOWL = new Items("bowl", new ItemData(281, 0, ""), new ItemData(281, 0, ""), (byte)64, (short)0));
        add(MUSHROOM_STEW = new Items("mushroom stew", new ItemData(282, 0, ""), new ItemData(282, 0, ""), (byte)1, (short)0));
        add(GOLDEN_SWORD = new Items("golden sword", new ItemData(283, 0, ""), new ItemData(283, 0, ""), (byte)1, (short)33));
        add(GOLDEN_SHOVEL = new Items("golden shovel", new ItemData(284, 0, ""), new ItemData(284, 0, ""), (byte)1, (short)33));
        add(GOLDEN_PICKAXE = new Items("golden pickaxe", new ItemData(285, 0, ""), new ItemData(285, 0, ""), (byte)1, (short)33));
        add(GOLDEN_AXE = new Items("golden axe", new ItemData(286, 0, ""), new ItemData(286, 0, ""), (byte)1, (short)33));
        add(STRING = new Items("string", new ItemData(287, 0, ""), new ItemData(287, 0, ""), (byte)64, (short)0));
        add(FEATHER = new Items("feather", new ItemData(288, 0, ""), new ItemData(288, 0, ""), (byte)64, (short)0));
        add(GUNPOWDER = new Items("gunpowder", new ItemData(289, 0, ""), new ItemData(289, 0, ""), (byte)64, (short)0));
        add(WOODEN_HOE = new Items("wooden hoe", new ItemData(290, 0, ""), new ItemData(290, 0, ""), (byte)1, (short)60));
        add(STONE_HOE = new Items("stone hoe", new ItemData(291, 0, ""), new ItemData(291, 0, ""), (byte)1, (short)132));
        add(IRON_HOE = new Items("iron hoe", new ItemData(292, 0, ""), new ItemData(292, 0, ""), (byte)1, (short)251));
        add(DIAMOND_HOE = new Items("diamond hoe", new ItemData(293, 0, ""), new ItemData(293, 0, ""), (byte)1, (short)1562));
        add(GOLDEN_HOE = new Items("golden hoe", new ItemData(294, 0, ""), new ItemData(294, 0, ""), (byte)1, (short)33));
        add(SEEDS = new Items("seeds", new ItemData(295, 0, ""), new ItemData(295, 0, ""), (byte)64, (short)0));
        add(WHEAT = new Items("wheat", new ItemData(296, 0, ""), new ItemData(296, 0, ""), (byte)64, (short)0));
        add(BREAD = new Items("bread", new ItemData(297, 0, ""), new ItemData(297, 0, ""), (byte)64, (short)0));
        add(LEATHER_CAP = new Items("leather cap", new ItemData(298, 0, ""), new ItemData(298, 0, ""), (byte)1, (short)56));
        add(LEATHER_TUNIC = new Items("leather tunic", new ItemData(299, 0, ""), new ItemData(299, 0, ""), (byte)1, (short)81));
        add(LEATHER_PANTS = new Items("leather pants", new ItemData(300, 0, ""), new ItemData(300, 0, ""), (byte)1, (short)76));
        add(LEATHER_BOOTS = new Items("leather boots", new ItemData(301, 0, ""), new ItemData(301, 0, ""), (byte)1, (short)66));
        add(CHAIN_HELMET = new Items("chain helmet", new ItemData(302, 0, ""), new ItemData(302, 0, ""), (byte)1, (short)166));
        add(CHAIN_CHESTPLATE = new Items("chain chestplate", new ItemData(303, 0, ""), new ItemData(303, 0, ""), (byte)1, (short)241));
        add(CHAIN_LEGGINGS = new Items("chain leggings", new ItemData(304, 0, ""), new ItemData(304, 0, ""), (byte)1, (short)226));
        add(CHAIN_BOOTS = new Items("chain boots", new ItemData(305, 0, ""), new ItemData(305, 0, ""), (byte)1, (short)196));
        add(IRON_HELMET = new Items("iron helmet", new ItemData(306, 0, ""), new ItemData(306, 0, ""), (byte)1, (short)166));
        add(IRON_CHESTPLATE = new Items("iron chestplate", new ItemData(307, 0, ""), new ItemData(307, 0, ""), (byte)1, (short)241));
        add(IRON_LEGGINGS = new Items("iron leggings", new ItemData(308, 0, ""), new ItemData(308, 0, ""), (byte)1, (short)226));
        add(IRON_BOOTS = new Items("iron boots", new ItemData(309, 0, ""), new ItemData(309, 0, ""), (byte)1, (short)196));
        add(DIAMOND_HELMET = new Items("diamond helmet", new ItemData(310, 0, ""), new ItemData(310, 0, ""), (byte)1, (short)364));
        add(DIAMOND_CHESTPLATE = new Items("diamond chestplate", new ItemData(311, 0, ""), new ItemData(311, 0, ""), (byte)1, (short)529));
        add(DIAMOND_LEGGINGS = new Items("diamond leggings", new ItemData(312, 0, ""), new ItemData(312, 0, ""), (byte)1, (short)496));
        add(DIAMOND_BOOTS = new Items("diamond boots", new ItemData(313, 0, ""), new ItemData(313, 0, ""), (byte)1, (short)430));
        add(GOLDEN_HELMET = new Items("golden helmet", new ItemData(314, 0, ""), new ItemData(314, 0, ""), (byte)1, (short)78));
        add(GOLDEN_CHESTPLATE = new Items("golden chestplate", new ItemData(315, 0, ""), new ItemData(315, 0, ""), (byte)1, (short)113));
        add(GOLDEN_LEGGINGS = new Items("golden leggings", new ItemData(316, 0, ""), new ItemData(316, 0, ""), (byte)1, (short)106));
        add(GOLDEN_BOOTS = new Items("golden boots", new ItemData(317, 0, ""), new ItemData(317, 0, ""), (byte)1, (short)92));
        add(FLINT = new Items("flint", new ItemData(318, 0, ""), new ItemData(318, 0, ""), (byte)64, (short)0));
        add(RAW_PORKCHOP = new Items("raw porkchop", new ItemData(319, 0, ""), new ItemData(319, 0, ""), (byte)64, (short)0));
        add(COOKED_PORKCHOP = new Items("cooked porkchop", new ItemData(320, 0, ""), new ItemData(320, 0, ""), (byte)64, (short)0));
        add(PAINTING = new Items("painting", new ItemData(321, 0, ""), new ItemData(321, 0, ""), (byte)64, (short)0));
        add(GOLDEN_APPLE = new Items("golden apple", new ItemData(322, 0, ""), new ItemData(322, 0, ""), (byte)64, (short)0));
        add(ENCHANTED_GOLDEN_APPLE = new Items("enchanted golden apple", new ItemData(322, 1, ""), new ItemData(466, 0, ""), (byte)64, (short)0));
        add(SIGN = new Items("sign", new ItemData(323, 0, ""), new ItemData(323, 0, ""), (byte)64, (short)0));
        add(OAK_DOOR = new Items("oak door", new ItemData(324, 0, ""), new ItemData(324, 0, ""), (byte)64, (short)0));
        add(BUCKET = new Items("bucket", new ItemData(325, 0, ""), new ItemData(325, 0, ""), (byte)16, (short)0));
        add(WATER_BUCKET = new Items("water bucket", new ItemData(326, 0, ""), new ItemData(325, 8, ""), (byte)1, (short)0));
        add(LAVA_BUCKET = new Items("lava bucket", new ItemData(327, 0, ""), new ItemData(325, 10, ""), (byte)1, (short)0));
        add(MINECART = new Items("minecart", new ItemData(328, 0, ""), new ItemData(328, 0, ""), (byte)1, (short)0));
        add(SADDLE = new Items("saddle", new ItemData(329, 0, ""), new ItemData(329, 0, ""), (byte)1, (short)0));
        add(IRON_DOOR = new Items("iron door", new ItemData(330, 0, ""), new ItemData(330, 0, ""), (byte)64, (short)0));
        add(REDSTONE_DUST = new Items("redstone dust", new ItemData(331, 0, ""), new ItemData(331, 0, ""), (byte)64, (short)0));
        add(SNOWBALL = new Items("snowball", new ItemData(332, 0, ""), new ItemData(332, 0, ""), (byte)16, (short)0));
        add(OAK_BOAT = new Items("oak boat", new ItemData(333, 0, ""), new ItemData(333, 0, ""), (byte)1, (short)0));
        add(LEATHER = new Items("leather", new ItemData(334, 0, ""), new ItemData(334, 0, ""), (byte)64, (short)0));
        add(MILK_BUCKET = new Items("milk bucket", new ItemData(335, 0, ""), new ItemData(325, 1, ""), (byte)1, (short)0));
        add(BRICK = new Items("brick", new ItemData(336, 0, ""), new ItemData(336, 0, ""), (byte)64, (short)0));
        add(CLAY = new Items("clay", new ItemData(337, 0, ""), new ItemData(337, 0, ""), (byte)64, (short)0));
        add(SUGAR_CANES = new Items("sugar canes", new ItemData(338, 0, ""), new ItemData(338, 0, ""), (byte)64, (short)0));
        add(PAPER = new Items("paper", new ItemData(339, 0, ""), new ItemData(339, 0, ""), (byte)64, (short)0));
        add(BOOK = new Items("book", new ItemData(340, 0, ""), new ItemData(340, 0, ""), (byte)64, (short)0));
        add(SLIMEBALL = new Items("slimeball", new ItemData(341, 0, ""), new ItemData(341, 0, ""), (byte)64, (short)0));
        add(MINECART_WITH_CHEST = new Items("minecart with chest", new ItemData(342, 0, ""), new ItemData(342, 0, ""), (byte)1, (short)0));
        add(MINECART_WITH_FURNACE = new Items("minecart with furnace", new ItemData(343, 0, ""), null, (byte)1, (short)0));
        add(EGG = new Items("egg", new ItemData(344, 0, ""), new ItemData(344, 0, ""), (byte)16, (short)0));
        add(COMPASS = new Items("compass", new ItemData(345, 0, ""), new ItemData(345, 0, ""), (byte)64, (short)0));
        add(FISHING_ROD = new Items("fishing rod", new ItemData(346, 0, ""), new ItemData(346, 0, ""), (byte)1, (short)65));
        add(CLOCK = new Items("clock", new ItemData(347, 0, ""), new ItemData(347, 0, ""), (byte)64, (short)0));
        add(GLOWSTONE_DUST = new Items("glowstone dust", new ItemData(348, 0, ""), new ItemData(348, 0, ""), (byte)64, (short)0));
        add(RAW_FISH = new Items("raw fish", new ItemData(349, 0, ""), new ItemData(349, 0, ""), (byte)64, (short)0));
        add(RAW_SALMON = new Items("raw salmon", new ItemData(349, 1, ""), new ItemData(460, 0, ""), (byte)64, (short)0));
        add(CLOWNFISH = new Items("clownfish", new ItemData(349, 2, ""), new ItemData(461, 0, ""), (byte)64, (short)0));
        add(PUFFERFISH = new Items("pufferfish", new ItemData(349, 3, ""), new ItemData(462, 0, ""), (byte)64, (short)0));
        add(COOKED_FISH = new Items("cooked fish", new ItemData(350, 0, ""), new ItemData(350, 0, ""), (byte)64, (short)0));
        add(COOKED_SALMON = new Items("cooked salmon", new ItemData(350, 1, ""), new ItemData(463, 0, ""), (byte)64, (short)0));
        add(INK_SAC = new Items("ink sac", new ItemData(351, 0, ""), new ItemData(351, 0, ""), (byte)64, (short)0));
        add(ROSE_RED = new Items("rose red", new ItemData(351, 1, ""), new ItemData(351, 1, ""), (byte)64, (short)0));
        add(CACTUS_GREEN = new Items("cactus green", new ItemData(351, 2, ""), new ItemData(351, 2, ""), (byte)64, (short)0));
        add(COCOA_BEANS = new Items("cocoa beans", new ItemData(351, 3, ""), new ItemData(351, 3, ""), (byte)64, (short)0));
        add(LAPIS_LAZULI = new Items("lapis lazuli", new ItemData(351, 4, ""), new ItemData(351, 4, ""), (byte)64, (short)0));
        add(PURPLE_DYE = new Items("purple dye", new ItemData(351, 5, ""), new ItemData(351, 5, ""), (byte)64, (short)0));
        add(CYAN_DYE = new Items("cyan dye", new ItemData(351, 6, ""), new ItemData(351, 6, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_DYE = new Items("light gray dye", new ItemData(351, 7, ""), new ItemData(351, 7, ""), (byte)64, (short)0));
        add(GRAY_DYE = new Items("gray dye", new ItemData(351, 8, ""), new ItemData(351, 8, ""), (byte)64, (short)0));
        add(PINK_DYE = new Items("pink dye", new ItemData(351, 9, ""), new ItemData(351, 9, ""), (byte)64, (short)0));
        add(LIME_DYE = new Items("lime dye", new ItemData(351, 10, ""), new ItemData(351, 10, ""), (byte)64, (short)0));
        add(DANDELION_YELLOW = new Items("dandelion yellow", new ItemData(351, 11, ""), new ItemData(351, 11, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_DYE = new Items("light blue dye", new ItemData(351, 12, ""), new ItemData(351, 12, ""), (byte)64, (short)0));
        add(MAGENTA_DYE = new Items("magenta dye", new ItemData(351, 13, ""), new ItemData(351, 13, ""), (byte)64, (short)0));
        add(ORANGE_DYE = new Items("orange dye", new ItemData(351, 14, ""), new ItemData(351, 14, ""), (byte)64, (short)0));
        add(BONE_MEAL = new Items("bone meal", new ItemData(351, 15, ""), new ItemData(351, 15, ""), (byte)64, (short)0));
        add(BONE = new Items("bone", new ItemData(352, 0, ""), new ItemData(352, 0, ""), (byte)64, (short)0));
        add(SUGAR = new Items("sugar", new ItemData(353, 0, ""), new ItemData(353, 0, ""), (byte)64, (short)0));
        add(CAKE = new Items("cake", new ItemData(354, 0, ""), new ItemData(354, 0, ""), (byte)1, (short)0));
        add(WHITE_BED = new Items("white bed", new ItemData(355, 0, ""), new ItemData(355, 0, ""), (byte)64, (short)0));
        add(ORANGE_BED = new Items("orange bed", new ItemData(355, 1, ""), new ItemData(355, 1, ""), (byte)64, (short)0));
        add(MAGENTA_BED = new Items("magenta bed", new ItemData(355, 2, ""), new ItemData(355, 2, ""), (byte)64, (short)0));
        add(LIGHT_BLUE_BED = new Items("light blue bed", new ItemData(355, 3, ""), new ItemData(355, 3, ""), (byte)64, (short)0));
        add(YELLOW_BED = new Items("yellow bed", new ItemData(355, 4, ""), new ItemData(355, 4, ""), (byte)64, (short)0));
        add(LIME_BED = new Items("lime bed", new ItemData(355, 5, ""), new ItemData(355, 5, ""), (byte)64, (short)0));
        add(PINK_BED = new Items("pink bed", new ItemData(355, 6, ""), new ItemData(355, 6, ""), (byte)64, (short)0));
        add(GRAY_BED = new Items("gray bed", new ItemData(355, 7, ""), new ItemData(355, 7, ""), (byte)64, (short)0));
        add(LIGHT_GRAY_BED = new Items("light gray bed", new ItemData(355, 8, ""), new ItemData(355, 8, ""), (byte)64, (short)0));
        add(CYAN_BED = new Items("cyan bed", new ItemData(355, 9, ""), new ItemData(355, 9, ""), (byte)64, (short)0));
        add(PURPLE_BED = new Items("purple bed", new ItemData(355, 10, ""), new ItemData(355, 10, ""), (byte)64, (short)0));
        add(BLUE_BED = new Items("blue bed", new ItemData(355, 11, ""), new ItemData(355, 11, ""), (byte)64, (short)0));
        add(BROWN_BED = new Items("brown bed", new ItemData(355, 12, ""), new ItemData(355, 12, ""), (byte)64, (short)0));
        add(GREEN_BED = new Items("green bed", new ItemData(355, 13, ""), new ItemData(355, 13, ""), (byte)64, (short)0));
        add(RED_BED = new Items("red bed", new ItemData(355, 14, ""), new ItemData(355, 14, ""), (byte)64, (short)0));
        add(BLACK_BED = new Items("black bed", new ItemData(355, 15, ""), new ItemData(355, 15, ""), (byte)64, (short)0));
        add(REDSTONE_REPEATER = new Items("redstone repeater", new ItemData(356, 0, ""), new ItemData(356, 0, ""), (byte)64, (short)0));
        add(COOKIE = new Items("cookie", new ItemData(357, 0, ""), new ItemData(357, 0, ""), (byte)64, (short)0));
        add(MAP = new Items("map", new ItemData(358, 0, ""), new ItemData(358, 0, ""), (byte)64, (short)0));
        add(SHEARS = new Items("shears", new ItemData(359, 0, ""), new ItemData(359, 0, ""), (byte)1, (short)238));
        add(MELON = new Items("melon", new ItemData(360, 0, ""), new ItemData(360, 0, ""), (byte)64, (short)0));
        add(PUMPKIN_SEEDS = new Items("pumpkin seeds", new ItemData(361, 0, ""), new ItemData(361, 0, ""), (byte)64, (short)0));
        add(MELON_SEEDS = new Items("melon seeds", new ItemData(362, 0, ""), new ItemData(362, 0, ""), (byte)64, (short)0));
        add(RAW_BEEF = new Items("raw beef", new ItemData(363, 0, ""), new ItemData(363, 0, ""), (byte)64, (short)0));
        add(STEAK = new Items("steak", new ItemData(364, 0, ""), new ItemData(364, 0, ""), (byte)64, (short)0));
        add(RAW_CHICKEN = new Items("raw chicken", new ItemData(365, 0, ""), new ItemData(365, 0, ""), (byte)64, (short)0));
        add(COOKED_CHICKEN = new Items("cooked chicken", new ItemData(366, 0, ""), new ItemData(366, 0, ""), (byte)64, (short)0));
        add(ROTTEN_FLESH = new Items("rotten flesh", new ItemData(367, 0, ""), new ItemData(367, 0, ""), (byte)64, (short)0));
        add(ENDER_PEARL = new Items("ender pearl", new ItemData(368, 0, ""), new ItemData(368, 0, ""), (byte)16, (short)0));
        add(BLAZE_ROD = new Items("blaze rod", new ItemData(369, 0, ""), new ItemData(369, 0, ""), (byte)64, (short)0));
        add(GHAST_TEAR = new Items("ghast tear", new ItemData(370, 0, ""), new ItemData(370, 0, ""), (byte)64, (short)0));
        add(GOLD_NUGGET = new Items("gold nugget", new ItemData(371, 0, ""), new ItemData(371, 0, ""), (byte)64, (short)0));
        add(NETHER_WART = new Items("nether wart", new ItemData(372, 0, ""), new ItemData(372, 0, ""), (byte)64, (short)0));
        add(UNCRAFTABLE_POTION = new Items("uncraftable potion", new ItemData(373, 0, ""), null, (byte)1, (short)0));
        add(WATER_BOTTLE = new Items("water bottle", new ItemData(373, 0, "{Potion:\"minecraft:water\"}"), new ItemData(373, 0, ""), (byte)1, (short)0));
        add(MUNDANE_POTION = new Items("mundane potion", new ItemData(373, 0, "{Potion:\"minecraft:mundane\"}"), new ItemData(373, 1, ""), (byte)1, (short)0));
        add(MUNDANE_POTION_EXTENDED = new Items("mundane potion extended", null, new ItemData(373, 2, ""), (byte)1, (short)0));
        add(THICK_POTION = new Items("thick potion", new ItemData(373, 0, "{Potion:\"minecraft:thick\"}"), new ItemData(373, 3, ""), (byte)1, (short)0));
        add(AWKWARD_POTION = new Items("awkward potion", new ItemData(373, 0, "{Potion:\"minecraft:awkward\"}"), new ItemData(373, 4, ""), (byte)1, (short)0));
        add(NIGHT_VISION_POTION = new Items("night vision potion", new ItemData(373, 0, "{Potion:\"minecraft:night_vision\"}"), new ItemData(373, 5, ""), (byte)1, (short)0));
        add(NIGHT_VISION_POTION_EXTENDED = new Items("night vision potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_night_vision\"}"), new ItemData(373, 6, ""), (byte)1, (short)0));
        add(INVISIBILITY_POTION = new Items("invisibility potion", new ItemData(373, 0, "{Potion:\"minecraft:invisibility\"}"), new ItemData(373, 7, ""), (byte)1, (short)0));
        add(INVISIBILITY_POTION_EXTENDED = new Items("invisibility potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_invisibility\"}"), new ItemData(373, 8, ""), (byte)1, (short)0));
        add(LEAPING_POTION = new Items("leaping potion", new ItemData(373, 0, "{Potion:\"minecraft:leaping\"}"), new ItemData(373, 9, ""), (byte)1, (short)0));
        add(LEAPING_POTION_EXTENDED = new Items("leaping potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_leaping\"}"), new ItemData(373, 10, ""), (byte)1, (short)0));
        add(LEAPING_POTION_PLUS = new Items("leaping potion plus", new ItemData(373, 0, "{Potion:\"minecraft:strong_leaping\"}"), new ItemData(373, 11, ""), (byte)1, (short)0));
        add(FIRE_RESISTANCE_POTION = new Items("fire resistance potion", new ItemData(373, 0, "{Potion:\"minecraft:fire_resistance\"}"), new ItemData(373, 12, ""), (byte)1, (short)0));
        add(FIRE_RESISTANCE_POTION_EXTENDED = new Items("fire resistance potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_fire_resistance\"}"), new ItemData(373, 13, ""), (byte)1, (short)0));
        add(SWIFTNESS_POTION = new Items("swiftness potion", new ItemData(373, 0, "{Potion:\"minecraft:swiftness\"}"), new ItemData(373, 14, ""), (byte)1, (short)0));
        add(SWIFTNESS_POTION_EXTENDED = new Items("swiftness potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_swiftness\"}"), new ItemData(373, 15, ""), (byte)1, (short)0));
        add(SWIFTNESS_POTION_PLUS = new Items("swiftness potion plus", new ItemData(373, 0, "{Potion:\"minecraft:strong_swiftness\"}"), new ItemData(373, 16, ""), (byte)1, (short)0));
        add(SLOWNESS_POTION = new Items("slowness potion", new ItemData(373, 0, "{Potion:\"minecraft:slowness\"}"), new ItemData(373, 17, ""), (byte)1, (short)0));
        add(SLOWNESS_POTION_EXTENDED = new Items("slowness potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_slowness\"}"), new ItemData(373, 18, ""), (byte)1, (short)0));
        add(WATER_BREATHING_POTION = new Items("water breathing potion", new ItemData(373, 0, "{Potion:\"minecraft:water_breathing\"}"), new ItemData(373, 19, ""), (byte)1, (short)0));
        add(WATER_BREATHING_POTION_EXTENDED = new Items("water breathing potion extended", new ItemData(373, 0, "{Potion:\"minecraft:water_breathing_extended\"}"), new ItemData(373, 20, ""), (byte)1, (short)0));
        add(HEALING_POTION = new Items("healing potion", new ItemData(373, 0, "{Potion:\"minecraft:healing\"}"), new ItemData(373, 21, ""), (byte)1, (short)0));
        add(HEALING_POTION_PLUS = new Items("healing potion plus", new ItemData(373, 0, "{Potion:\"minecraft:strong_healing\"}"), new ItemData(373, 22, ""), (byte)1, (short)0));
        add(HARMING_POTION = new Items("harming potion", new ItemData(373, 0, "{Potion:\"minecraft:harming\"}"), new ItemData(373, 23, ""), (byte)1, (short)0));
        add(HARMING_POTION_PLUS = new Items("harming potion plus", new ItemData(373, 0, "{Potion:\"minecraft:strong_harming\"}"), new ItemData(373, 24, ""), (byte)1, (short)0));
        add(POISON_POTION = new Items("poison potion", new ItemData(373, 0, "{Potion:\"minecraft:poison\"}"), new ItemData(373, 25, ""), (byte)1, (short)0));
        add(POISON_POTION_EXTENDED = new Items("poison potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_poison\"}"), new ItemData(373, 26, ""), (byte)1, (short)0));
        add(POISON_POTION_PLUS = new Items("poison potion plus", new ItemData(373, 0, "{Potion:\"minecraft:strong_poison\"}"), new ItemData(373, 27, ""), (byte)1, (short)0));
        add(REGENERATION_POTION = new Items("regeneration potion", new ItemData(373, 0, "{Potion:\"minecraft:regeneration\"}"), new ItemData(373, 28, ""), (byte)1, (short)0));
        add(REGENERATION_POTION_EXTENDED = new Items("regeneration potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_regeneration\"}"), new ItemData(373, 29, ""), (byte)1, (short)0));
        add(REGENERATION_POTION_PLUS = new Items("regeneration potion plus", new ItemData(373, 0, "{Potion:\"minecraft:strong_regeneration\"}"), new ItemData(373, 30, ""), (byte)1, (short)0));
        add(STRENGTH_POTION = new Items("strength potion", new ItemData(373, 0, "{Potion:\"minecraft:strength\"}"), new ItemData(373, 31, ""), (byte)1, (short)0));
        add(STRENGTH_POTION_EXTENDED = new Items("strength potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_strength\"}"), new ItemData(373, 32, ""), (byte)1, (short)0));
        add(STRENGTH_POTION_PLUS = new Items("strength potion plus", new ItemData(373, 0, "{Potion:\"minecraft:strong_strength\"}"), new ItemData(373, 33, ""), (byte)1, (short)0));
        add(WEAKNESS_POTION = new Items("weakness potion", new ItemData(373, 0, "{Potion:\"minecraft:weakness\"}"), new ItemData(373, 34, ""), (byte)1, (short)0));
        add(WEAKNESS_POTION_EXTENDED = new Items("weakness potion extended", new ItemData(373, 0, "{Potion:\"minecraft:long_weakness\"}"), new ItemData(373, 35, ""), (byte)1, (short)0));
        add(DECAY_POTION = new Items("decay potion", null, new ItemData(373, 36, ""), (byte)1, (short)0));
        add(GLASS_BOTTLE = new Items("glass bottle", new ItemData(374, 0, ""), new ItemData(374, 0, ""), (byte)64, (short)0));
        add(SPIDER_EYE = new Items("spider eye", new ItemData(375, 0, ""), new ItemData(375, 0, ""), (byte)64, (short)0));
        add(FERMENTED_SPIDER_EYE = new Items("fermented spider eye", new ItemData(376, 0, ""), new ItemData(376, 0, ""), (byte)64, (short)0));
        add(BLAZE_POWDER = new Items("blaze powder", new ItemData(377, 0, ""), new ItemData(377, 0, ""), (byte)64, (short)0));
        add(MAGMA_CREAM = new Items("magma cream", new ItemData(378, 0, ""), new ItemData(378, 0, ""), (byte)64, (short)0));
        add(BREWING_STAND = new Items("brewing stand", new ItemData(379, 0, ""), new ItemData(379, 0, ""), (byte)64, (short)0));
        add(CAULDRON = new Items("cauldron", new ItemData(380, 0, ""), new ItemData(380, 0, ""), (byte)64, (short)0));
        add(EYE_OF_ENDER = new Items("eye of ender", new ItemData(381, 0, ""), new ItemData(381, 0, ""), (byte)16, (short)0));
        add(GLISTERING_MELON = new Items("glistering melon", new ItemData(382, 0, ""), new ItemData(382, 0, ""), (byte)64, (short)0));
        add(SPAWN_ELDER_GUARDIAN = new Items("spawn elder guardian", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:elder_guardian\"}}"), new ItemData(383, 50, ""), (byte)64, (short)0));
        add(SPAWN_WITHER_SKELETON = new Items("spawn wither skeleton", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:wither_skeleton\"}}"), new ItemData(383, 48, ""), (byte)64, (short)0));
        add(SPAWN_STRAY = new Items("spawn stray", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:stray\"}}"), new ItemData(383, 46, ""), (byte)64, (short)0));
        add(SPAWN_HUSK = new Items("spawn husk", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:husk\"}}"), new ItemData(383, 47, ""), (byte)64, (short)0));
        add(SPAWN_ZOMBIE_VILLAGER = new Items("spawn zombie villager", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:zombie_villager\"}}"), new ItemData(383, 44, ""), (byte)64, (short)0));
        add(SPAWN_SKELETON_HORSE = new Items("spawn skeleton horse", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:skeleton_horse\"}}"), new ItemData(383, 26, ""), (byte)64, (short)0));
        add(SPAWN_ZOMBIE_HORSE = new Items("spawn zombie horse", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:zombie_horse\"}}"), new ItemData(383, 27, ""), (byte)64, (short)0));
        add(SPAWN_DONKEY = new Items("spawn donkey", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:donkey\"}}"), new ItemData(383, 24, ""), (byte)64, (short)0));
        add(SPAWN_MULE = new Items("spawn mule", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:mule\"}}"), new ItemData(383, 25, ""), (byte)64, (short)0));
        add(SPAWN_EVOKER = new Items("spawn evoker", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:evocation_illager\"}}"), new ItemData(383, 104, ""), (byte)64, (short)0));
        add(SPAWN_VEX = new Items("spawn vex", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:vex\"}}"), new ItemData(383, 105, ""), (byte)64, (short)0));
        add(SPAWN_VINDICATOR = new Items("spawn vindicator", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:vindication_illager\"}}"), new ItemData(383, 56, ""), (byte)64, (short)0));
        add(SPAWN_CREEPER = new Items("spawn creeper", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:creeper\"}}"), new ItemData(383, 33, ""), (byte)64, (short)0));
        add(SPAWN_SKELETON = new Items("spawn skeleton", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:skeleton\"}}"), new ItemData(383, 34, ""), (byte)64, (short)0));
        add(SPAWN_SPIDER = new Items("spawn spider", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:spider\"}}"), new ItemData(383, 35, ""), (byte)64, (short)0));
        add(SPAWN_ZOMBIE = new Items("spawn zombie", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:zombie\"}}"), new ItemData(383, 32, ""), (byte)64, (short)0));
        add(SPAWN_SLIME = new Items("spawn slime", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:slime\"}}"), new ItemData(383, 37, ""), (byte)64, (short)0));
        add(SPAWN_GHAST = new Items("spawn ghast", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:ghast\"}}"), new ItemData(383, 41, ""), (byte)64, (short)0));
        add(SPAWN_ZOMBIE_PIGMAN = new Items("spawn zombie pigman", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:zombie_pigman\"}}"), new ItemData(383, 36, ""), (byte)64, (short)0));
        add(SPAWN_ENDERMAN = new Items("spawn enderman", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:enderman\"}}"), new ItemData(383, 38, ""), (byte)64, (short)0));
        add(SPAWN_CAVE_SPIDER = new Items("spawn cave spider", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:cave_spider\"}}"), new ItemData(383, 40, ""), (byte)64, (short)0));
        add(SPAWN_SILVERFISH = new Items("spawn silverfish", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:silverfish\"}}"), new ItemData(383, 39, ""), (byte)64, (short)0));
        add(SPAWN_BLAZE = new Items("spawn blaze", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:blaze\"}}"), new ItemData(383, 43, ""), (byte)64, (short)0));
        add(SPAWN_MAGMA_CUBE = new Items("spawn magma cube", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:magma_cube\"}}"), new ItemData(383, 42, ""), (byte)64, (short)0));
        add(SPAWN_BAT = new Items("spawn bat", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:bat\"}}"), new ItemData(383, 19, ""), (byte)64, (short)0));
        add(SPAWN_WITCH = new Items("spawn witch", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:witch\"}}"), new ItemData(383, 45, ""), (byte)64, (short)0));
        add(SPAWN_ENDERMITE = new Items("spawn endermite", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:endermite\"}}"), new ItemData(383, 55, ""), (byte)64, (short)0));
        add(SPAWN_GUARDIAN = new Items("spawn guardian", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:guardian\"}}"), new ItemData(383, 49, ""), (byte)64, (short)0));
        add(SPAWN_SHULKER = new Items("spawn shulker", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:shulker\"}}"), new ItemData(383, 54, ""), (byte)64, (short)0));
        add(SPAWN_PIG = new Items("spawn pig", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:pig\"}}"), new ItemData(383, 12, ""), (byte)64, (short)0));
        add(SPAWN_SHEEP = new Items("spawn sheep", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:sheep\"}}"), new ItemData(383, 13, ""), (byte)64, (short)0));
        add(SPAWN_COW = new Items("spawn cow", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:cow\"}}"), new ItemData(383, 11, ""), (byte)64, (short)0));
        add(SPAWN_CHICKEN = new Items("spawn chicken", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:chicken\"}}"), new ItemData(383, 10, ""), (byte)64, (short)0));
        add(SPAWN_SQUID = new Items("spawn squid", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:squid\"}}"), new ItemData(383, 17, ""), (byte)64, (short)0));
        add(SPAWN_WOLF = new Items("spawn wolf", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:wolf\"}}"), new ItemData(383, 14, ""), (byte)64, (short)0));
        add(SPAWN_MOOSHROOM = new Items("spawn mooshroom", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:mooshroom\"}}"), new ItemData(383, 16, ""), (byte)64, (short)0));
        add(SPAWN_OCELOT = new Items("spawn ocelot", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:ocelot\"}}"), new ItemData(383, 22, ""), (byte)64, (short)0));
        add(SPAWN_HORSE = new Items("spawn horse", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:horse\"}}"), new ItemData(383, 23, ""), (byte)64, (short)0));
        add(SPAWN_RABBIT = new Items("spawn rabbit", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:rabbit\"}}"), new ItemData(383, 18, ""), (byte)64, (short)0));
        add(SPAWN_POLAR_BEAR = new Items("spawn polar bear", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:polar_bear\"}}"), new ItemData(383, 28, ""), (byte)64, (short)0));
        add(SPAWN_LLAMA = new Items("spawn llama", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:llama\"}}"), new ItemData(383, 29, ""), (byte)64, (short)0));
        add(SPAWN_PARROT = new Items("spawn parrot", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:parrot\"}}"), null, (byte)64, (short)0));
        add(SPAWN_VILLAGER = new Items("spawn villager", new ItemData(383, 0, "{EntityTag:{id:\"minecraft:villager\"}}"), new ItemData(383, 15, ""), (byte)64, (short)0));
        add(SPAWN_NPC = new Items("spawn npc", null, new ItemData(383, 51, ""), (byte)64, (short)0));
        add(BOTTLE_O_ENCHANTING = new Items("bottle o enchanting", new ItemData(384, 0, ""), new ItemData(384, 0, ""), (byte)64, (short)0));
        add(FIRE_CHARGE = new Items("fire charge", new ItemData(385, 0, ""), new ItemData(385, 0, ""), (byte)64, (short)0));
        add(BOOK_AND_QUILL = new Items("book and quill", new ItemData(386, 0, ""), new ItemData(386, 0, ""), (byte)1, (short)0));
        add(WRITTEN_BOOK = new Items("written book", new ItemData(387, 0, ""), new ItemData(387, 0, ""), (byte)1, (short)0));
        add(EMERALD = new Items("emerald", new ItemData(388, 0, ""), new ItemData(388, 0, ""), (byte)64, (short)0));
        add(ITEM_FRAME = new Items("item frame", new ItemData(389, 0, ""), new ItemData(389, 0, ""), (byte)64, (short)0));
        add(FLOWER_POT = new Items("flower pot", new ItemData(390, 0, ""), new ItemData(390, 0, ""), (byte)64, (short)0));
        add(CARROT = new Items("carrot", new ItemData(391, 0, ""), new ItemData(391, 0, ""), (byte)64, (short)0));
        add(POTATO = new Items("potato", new ItemData(392, 0, ""), new ItemData(392, 0, ""), (byte)64, (short)0));
        add(BAKED_POTATO = new Items("baked potato", new ItemData(393, 0, ""), new ItemData(393, 0, ""), (byte)64, (short)0));
        add(POISONOUS_POTATO = new Items("poisonous potato", new ItemData(394, 0, ""), new ItemData(394, 0, ""), (byte)64, (short)0));
        add(EMPTY_MAP = new Items("empty map", new ItemData(395, 0, ""), new ItemData(395, 0, ""), (byte)64, (short)0));
        add(EMPTY_LOCATOR_MAP = new Items("empty locator map", null, new ItemData(395, 2, ""), (byte)64, (short)0));
        add(GOLDEN_CARROT = new Items("golden carrot", new ItemData(396, 0, ""), new ItemData(396, 0, ""), (byte)64, (short)0));
        add(SKELETON_SKULL = new Items("skeleton skull", new ItemData(397, 0, ""), new ItemData(397, 0, ""), (byte)64, (short)0));
        add(WITHER_SKELETON_SKULL = new Items("wither skeleton skull", new ItemData(397, 1, ""), new ItemData(397, 1, ""), (byte)64, (short)0));
        add(ZOMBIE_HEAD = new Items("zombie head", new ItemData(397, 2, ""), new ItemData(397, 2, ""), (byte)64, (short)0));
        add(HUMAN_HEAD = new Items("human head", new ItemData(397, 3, ""), new ItemData(397, 3, ""), (byte)64, (short)0));
        add(CREEPER_HEAD = new Items("creeper head", new ItemData(397, 4, ""), new ItemData(397, 4, ""), (byte)64, (short)0));
        add(DRAGON_HEAD = new Items("dragon head", new ItemData(397, 5, ""), new ItemData(397, 5, ""), (byte)64, (short)0));
        add(CARROT_ON_A_STICK = new Items("carrot on a stick", new ItemData(398, 0, ""), new ItemData(398, 0, ""), (byte)1, (short)26));
        add(NETHER_STAR = new Items("nether star", new ItemData(399, 0, ""), new ItemData(399, 0, ""), (byte)64, (short)0));
        add(PUMPKIN_PIE = new Items("pumpkin pie", new ItemData(400, 0, ""), new ItemData(400, 0, ""), (byte)64, (short)0));
        add(FIREWORK_ROCKET = new Items("firework rocket", new ItemData(401, 0, ""), new ItemData(401, 0, ""), (byte)64, (short)0));
        add(FIREWORK_STAR = new Items("firework star", new ItemData(402, 0, ""), new ItemData(402, 0, ""), (byte)64, (short)0));
        add(ENCHANTED_BOOK = new Items("enchanted book", new ItemData(403, 0, ""), new ItemData(403, 0, ""), (byte)1, (short)0));
        add(REDSTONE_COMPARATOR = new Items("redstone comparator", new ItemData(404, 0, ""), new ItemData(404, 0, ""), (byte)64, (short)0));
        add(NETHER_BRICK = new Items("nether brick", new ItemData(405, 0, ""), new ItemData(405, 0, ""), (byte)64, (short)0));
        add(NETHER_QUARTZ = new Items("nether quartz", new ItemData(406, 0, ""), new ItemData(406, 0, ""), (byte)64, (short)0));
        add(MINECART_WITH_TNT = new Items("minecart with tnt", new ItemData(407, 0, ""), new ItemData(407, 0, ""), (byte)1, (short)0));
        add(MINECART_WITH_HOPPER = new Items("minecart with hopper", new ItemData(408, 0, ""), new ItemData(408, 0, ""), (byte)1, (short)0));
        add(PRISMARINE_SHARD = new Items("prismarine shard", new ItemData(409, 0, ""), new ItemData(409, 0, ""), (byte)64, (short)0));
        add(PRISMARINE_CRYSTALS = new Items("prismarine crystals", new ItemData(410, 0, ""), new ItemData(422, 0, ""), (byte)64, (short)0));
        add(RAW_RABBIT = new Items("raw rabbit", new ItemData(411, 0, ""), new ItemData(411, 0, ""), (byte)64, (short)0));
        add(COOKED_RABBIT = new Items("cooked rabbit", new ItemData(412, 0, ""), new ItemData(412, 0, ""), (byte)64, (short)0));
        add(RABBIT_STEW = new Items("rabbit stew", new ItemData(413, 0, ""), new ItemData(413, 0, ""), (byte)1, (short)0));
        add(RABBIT_FOOT = new Items("rabbit foot", new ItemData(414, 0, ""), new ItemData(414, 0, ""), (byte)64, (short)0));
        add(RABBIT_HIDE = new Items("rabbit hide", new ItemData(415, 0, ""), new ItemData(415, 0, ""), (byte)64, (short)0));
        add(ARMOR_STAND = new Items("armor stand", new ItemData(416, 0, ""), new ItemData(425, 0, ""), (byte)16, (short)0));
        add(LEATHER_HORSE_ARMOR = new Items("leather horse armor", null, new ItemData(416, 0, ""), (byte)1, (short)0));
        add(IRON_HORSE_ARMOR = new Items("iron horse armor", new ItemData(417, 0, ""), new ItemData(417, 0, ""), (byte)1, (short)0));
        add(GOLDEN_HORSE_ARMOR = new Items("golden horse armor", new ItemData(418, 0, ""), new ItemData(418, 0, ""), (byte)1, (short)0));
        add(DIAMOND_HORSE_ARMOR = new Items("diamond horse armor", new ItemData(419, 0, ""), new ItemData(419, 0, ""), (byte)1, (short)0));
        add(LEAD = new Items("lead", new ItemData(420, 0, ""), new ItemData(420, 0, ""), (byte)64, (short)0));
        add(NAME_TAG = new Items("name tag", new ItemData(421, 0, ""), new ItemData(421, 0, ""), (byte)64, (short)0));
        add(MINECART_WITH_COMMAND_BLOCK = new Items("minecart with command block", new ItemData(422, 0, ""), new ItemData(443, 0, ""), (byte)1, (short)0));
        add(RAW_MUTTON = new Items("raw mutton", new ItemData(423, 0, ""), new ItemData(423, 0, ""), (byte)64, (short)0));
        add(COOKED_MUTTON = new Items("cooked mutton", new ItemData(424, 0, ""), new ItemData(424, 0, ""), (byte)64, (short)0));
        add(BANNER = new Items("banner", new ItemData(425, 0, ""), new ItemData(446, 0, ""), (byte)64, (short)0));
        add(END_CRYSTAL = new Items("end crystal", new ItemData(426, 0, ""), new ItemData(426, 0, ""), (byte)64, (short)0));
        add(SPRUCE_DOOR = new Items("spruce door", new ItemData(427, 0, ""), new ItemData(427, 0, ""), (byte)64, (short)0));
        add(BIRCH_DOOR = new Items("birch door", new ItemData(428, 0, ""), new ItemData(428, 0, ""), (byte)64, (short)0));
        add(JUNGLE_DOOR = new Items("jungle door", new ItemData(429, 0, ""), new ItemData(429, 0, ""), (byte)64, (short)0));
        add(ACACIA_DOOR = new Items("acacia door", new ItemData(430, 0, ""), new ItemData(430, 0, ""), (byte)64, (short)0));
        add(DARK_OAK_DOOR = new Items("dark oak door", new ItemData(431, 0, ""), new ItemData(431, 0, ""), (byte)64, (short)0));
        add(CHORUS_FRUIT = new Items("chorus fruit", new ItemData(432, 0, ""), new ItemData(432, 0, ""), (byte)64, (short)0));
        add(POPPED_CHORUS_FRUIT = new Items("popped chorus fruit", new ItemData(433, 0, ""), new ItemData(433, 0, ""), (byte)64, (short)0));
        add(BEETROOT = new Items("beetroot", new ItemData(434, 0, ""), new ItemData(457, 0, ""), (byte)64, (short)0));
        add(BEETROOT_SEEDS = new Items("beetroot seeds", new ItemData(435, 0, ""), new ItemData(458, 0, ""), (byte)64, (short)0));
        add(BEETROOT_SOUP = new Items("beetroot soup", new ItemData(436, 0, ""), new ItemData(459, 0, ""), (byte)1, (short)0));
        add(DRAGONS_BREATH = new Items("dragons breath", new ItemData(437, 0, ""), new ItemData(437, 0, ""), (byte)64, (short)0));
        add(UNCRAFTABLE_SPLASH_POTION = new Items("uncraftable splash potion", new ItemData(438, 0, ""), null, (byte)1, (short)0));
        add(SPLASH_POTION = new Items("splash potion", new ItemData(438, 0, "{Potion:\"minecraft:water\"}"), new ItemData(438, 0, ""), (byte)1, (short)0));
        add(MUNDANE_SPLASH_POTION = new Items("mundane splash potion", new ItemData(438, 0, "{Potion:\"minecraft:mundane\"}"), new ItemData(438, 1, ""), (byte)1, (short)0));
        add(MUNDANE_SPLASH_POTION_EXTENDED = new Items("mundane splash potion extended", null, new ItemData(438, 2, ""), (byte)1, (short)0));
        add(THICK_SPLASH_POTION = new Items("thick splash potion", new ItemData(438, 0, "{Potion:\"minecraft:thick\"}"), new ItemData(438, 3, ""), (byte)1, (short)0));
        add(AWKWARD_SPLASH_POTION = new Items("awkward splash potion", new ItemData(438, 0, "{Potion:\"minecraft:awkward\"}"), new ItemData(438, 4, ""), (byte)1, (short)0));
        add(NIGHT_VISION_SPLASH_POTION = new Items("night vision splash potion", new ItemData(438, 0, "{Potion:\"minecraft:night_vision\"}"), new ItemData(438, 5, ""), (byte)1, (short)0));
        add(NIGHT_VISION_SPLASH_POTION_EXTENDED = new Items("night vision splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_night_vision\"}"), new ItemData(438, 6, ""), (byte)1, (short)0));
        add(INVISIBILITY_SPLASH_POTION = new Items("invisibility splash potion", new ItemData(438, 0, "{Potion:\"minecraft:invisibility\"}"), new ItemData(438, 7, ""), (byte)1, (short)0));
        add(INVISIBILITY_SPLASH_POTION_EXTENDED = new Items("invisibility splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_invisibility\"}"), new ItemData(438, 8, ""), (byte)1, (short)0));
        add(LEAPING_SPLASH_POTION = new Items("leaping splash potion", new ItemData(438, 0, "{Potion:\"minecraft:leaping\"}"), new ItemData(438, 9, ""), (byte)1, (short)0));
        add(LEAPING_SPLASH_POTION_EXTENDED = new Items("leaping splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_leaping\"}"), new ItemData(438, 10, ""), (byte)1, (short)0));
        add(LEAPING_SPLASH_POTION_PLUS = new Items("leaping splash potion plus", new ItemData(438, 0, "{Potion:\"minecraft:strong_leaping\"}"), new ItemData(438, 11, ""), (byte)1, (short)0));
        add(FIRE_RESISTANCE_SPLASH_POTION = new Items("fire resistance splash potion", new ItemData(438, 0, "{Potion:\"minecraft:fire_resistance\"}"), new ItemData(438, 12, ""), (byte)1, (short)0));
        add(FIRE_RESISTANCE_SPLASH_POTION_EXTENDED = new Items("fire resistance splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_fire_resistance\"}"), new ItemData(438, 13, ""), (byte)1, (short)0));
        add(SWIFTNESS_SPLASH_POTION = new Items("swiftness splash potion", new ItemData(438, 0, "{Potion:\"minecraft:swiftness\"}"), new ItemData(438, 14, ""), (byte)1, (short)0));
        add(SWIFTNESS_SPLASH_POTION_EXTENDED = new Items("swiftness splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_swiftness\"}"), new ItemData(438, 15, ""), (byte)1, (short)0));
        add(SWIFTNESS_SPLASH_POTION_PLUS = new Items("swiftness splash potion plus", new ItemData(438, 0, "{Potion:\"minecraft:strong_swiftness\"}"), new ItemData(438, 16, ""), (byte)1, (short)0));
        add(SLOWNESS_SPLASH_POTION = new Items("slowness splash potion", new ItemData(438, 0, "{Potion:\"minecraft:slowness\"}"), new ItemData(438, 17, ""), (byte)1, (short)0));
        add(SLOWNESS_SPLASH_POTION_EXTENDED = new Items("slowness splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_slowness\"}"), new ItemData(438, 18, ""), (byte)1, (short)0));
        add(WATER_BREATHING_SPLASH_POTION = new Items("water breathing splash potion", new ItemData(438, 0, "{Potion:\"minecraft:water_breathing\"}"), new ItemData(438, 19, ""), (byte)1, (short)0));
        add(WATER_BREATHING_SPLASH_POTION_EXTENDED = new Items("water breathing splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:water_breathing_extended\"}"), new ItemData(438, 20, ""), (byte)1, (short)0));
        add(HEALING_SPLASH_POTION = new Items("healing splash potion", new ItemData(438, 0, "{Potion:\"minecraft:healing\"}"), new ItemData(438, 21, ""), (byte)1, (short)0));
        add(HEALING_SPLASH_POTION_PLUS = new Items("healing splash potion plus", new ItemData(438, 0, "{Potion:\"minecraft:strong_healing\"}"), new ItemData(438, 22, ""), (byte)1, (short)0));
        add(HARMING_SPLASH_POTION = new Items("harming splash potion", new ItemData(438, 0, "{Potion:\"minecraft:harming\"}"), new ItemData(438, 23, ""), (byte)1, (short)0));
        add(HARMING_SPLASH_POTION_PLUS = new Items("harming splash potion plus", new ItemData(438, 0, "{Potion:\"minecraft:strong_harming\"}"), new ItemData(438, 24, ""), (byte)1, (short)0));
        add(POISON_SPLASH_POTION = new Items("poison splash potion", new ItemData(438, 0, "{Potion:\"minecraft:poison\"}"), new ItemData(438, 25, ""), (byte)1, (short)0));
        add(POISON_SPLASH_POTION_EXTENDED = new Items("poison splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_poison\"}"), new ItemData(438, 26, ""), (byte)1, (short)0));
        add(POISON_SPLASH_POTION_PLUS = new Items("poison splash potion plus", new ItemData(438, 0, "{Potion:\"minecraft:strong_poison\"}"), new ItemData(438, 27, ""), (byte)1, (short)0));
        add(REGENERATION_SPLASH_POTION = new Items("regeneration splash potion", new ItemData(438, 0, "{Potion:\"minecraft:regeneration\"}"), new ItemData(438, 28, ""), (byte)1, (short)0));
        add(REGENERATION_SPLASH_POTION_EXTENDED = new Items("regeneration splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_regeneration\"}"), new ItemData(438, 29, ""), (byte)1, (short)0));
        add(REGENERATION_SPLASH_POTION_PLUS = new Items("regeneration splash potion plus", new ItemData(438, 0, "{Potion:\"minecraft:strong_regeneration\"}"), new ItemData(438, 30, ""), (byte)1, (short)0));
        add(STRENGTH_SPLASH_POTION = new Items("strength splash potion", new ItemData(438, 0, "{Potion:\"minecraft:strength\"}"), new ItemData(438, 31, ""), (byte)1, (short)0));
        add(STRENGTH_SPLASH_POTION_EXTENDED = new Items("strength splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_strength\"}"), new ItemData(438, 32, ""), (byte)1, (short)0));
        add(STRENGTH_SPLASH_POTION_PLUS = new Items("strength splash potion plus", new ItemData(438, 0, "{Potion:\"minecraft:strong_strength\"}"), new ItemData(438, 33, ""), (byte)1, (short)0));
        add(WEAKNESS_SPLASH_POTION = new Items("weakness splash potion", new ItemData(438, 0, "{Potion:\"minecraft:weakness\"}"), new ItemData(438, 34, ""), (byte)1, (short)0));
        add(WEAKNESS_SPLASH_POTION_EXTENDED = new Items("weakness splash potion extended", new ItemData(438, 0, "{Potion:\"minecraft:long_weakness\"}"), new ItemData(438, 35, ""), (byte)1, (short)0));
        add(DECAY_SPLASH_POTION = new Items("decay splash potion", null, new ItemData(438, 36, ""), (byte)1, (short)0));
        add(SPECTRAL_ARROW = new Items("spectral arrow", new ItemData(439, 0, ""), null, (byte)64, (short)0));
        add(UNCRAFTABLE_TIPPED_ARROW = new Items("uncraftable tipped arrow", new ItemData(440, 0, ""), null, (byte)64, (short)0));
        add(TIPPED_ARROW = new Items("tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:water\"}"), new ItemData(440, 0, ""), (byte)64, (short)0));
        add(MUNDANE_TIPPED_ARROW = new Items("mundane tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:mundane\"}"), new ItemData(440, 1, ""), (byte)64, (short)0));
        add(MUNDANE_TIPPED_ARROW_EXTENDED = new Items("mundane tipped arrow extended", null, new ItemData(440, 2, ""), (byte)64, (short)0));
        add(THICK_TIPPED_ARROW = new Items("thick tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:thick\"}"), new ItemData(440, 3, ""), (byte)64, (short)0));
        add(AWKWARD_TIPPED_ARROW = new Items("awkward tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:awkward\"}"), new ItemData(440, 4, ""), (byte)64, (short)0));
        add(NIGHT_VISION_TIPPED_ARROW = new Items("night vision tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:night_vision\"}"), new ItemData(440, 5, ""), (byte)64, (short)0));
        add(NIGHT_VISION_TIPPED_ARROW_EXTENDED = new Items("night vision tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_night_vision\"}"), new ItemData(440, 6, ""), (byte)64, (short)0));
        add(INVISIBILITY_TIPPED_ARROW = new Items("invisibility tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:invisibility\"}"), new ItemData(440, 7, ""), (byte)64, (short)0));
        add(INVISIBILITY_TIPPED_ARROW_EXTENDED = new Items("invisibility tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_invisibility\"}"), new ItemData(440, 8, ""), (byte)64, (short)0));
        add(LEAPING_TIPPED_ARROW = new Items("leaping tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:leaping\"}"), new ItemData(440, 9, ""), (byte)64, (short)0));
        add(LEAPING_TIPPED_ARROW_EXTENDED = new Items("leaping tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_leaping\"}"), new ItemData(440, 10, ""), (byte)64, (short)0));
        add(LEAPING_TIPPED_ARROW_PLUS = new Items("leaping tipped arrow plus", new ItemData(440, 0, "{Potion:\"minecraft:strong_leaping\"}"), new ItemData(440, 11, ""), (byte)64, (short)0));
        add(FIRE_RESISTANCE_TIPPED_ARROW = new Items("fire resistance tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:fire_resistance\"}"), new ItemData(440, 12, ""), (byte)64, (short)0));
        add(FIRE_RESISTANCE_TIPPED_ARROW_EXTENDED = new Items("fire resistance tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_fire_resistance\"}"), new ItemData(440, 13, ""), (byte)64, (short)0));
        add(SWIFTNESS_TIPPED_ARROW = new Items("swiftness tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:swiftness\"}"), new ItemData(440, 14, ""), (byte)64, (short)0));
        add(SWIFTNESS_TIPPED_ARROW_EXTENDED = new Items("swiftness tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_swiftness\"}"), new ItemData(440, 15, ""), (byte)64, (short)0));
        add(SWIFTNESS_TIPPED_ARROW_PLUS = new Items("swiftness tipped arrow plus", new ItemData(440, 0, "{Potion:\"minecraft:strong_swiftness\"}"), new ItemData(440, 16, ""), (byte)64, (short)0));
        add(SLOWNESS_TIPPED_ARROW = new Items("slowness tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:slowness\"}"), new ItemData(440, 17, ""), (byte)64, (short)0));
        add(SLOWNESS_TIPPED_ARROW_EXTENDED = new Items("slowness tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_slowness\"}"), new ItemData(440, 18, ""), (byte)64, (short)0));
        add(WATER_BREATHING_TIPPED_ARROW = new Items("water breathing tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:water_breathing\"}"), new ItemData(440, 19, ""), (byte)64, (short)0));
        add(WATER_BREATHING_TIPPED_ARROW_EXTENDED = new Items("water breathing tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:water_breathing_extended\"}"), new ItemData(440, 20, ""), (byte)64, (short)0));
        add(HEALING_TIPPED_ARROW = new Items("healing tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:healing\"}"), new ItemData(440, 21, ""), (byte)64, (short)0));
        add(HEALING_TIPPED_ARROW_PLUS = new Items("healing tipped arrow plus", new ItemData(440, 0, "{Potion:\"minecraft:strong_healing\"}"), new ItemData(440, 22, ""), (byte)64, (short)0));
        add(HARMING_TIPPED_ARROW = new Items("harming tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:harming\"}"), new ItemData(440, 23, ""), (byte)64, (short)0));
        add(HARMING_TIPPED_ARROW_PLUS = new Items("harming tipped arrow plus", new ItemData(440, 0, "{Potion:\"minecraft:strong_harming\"}"), new ItemData(440, 24, ""), (byte)64, (short)0));
        add(POISON_TIPPED_ARROW = new Items("poison tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:poison\"}"), new ItemData(440, 25, ""), (byte)64, (short)0));
        add(POISON_TIPPED_ARROW_EXTENDED = new Items("poison tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_poison\"}"), new ItemData(440, 26, ""), (byte)64, (short)0));
        add(POISON_TIPPED_ARROW_PLUS = new Items("poison tipped arrow plus", new ItemData(440, 0, "{Potion:\"minecraft:strong_poison\"}"), new ItemData(440, 27, ""), (byte)64, (short)0));
        add(REGENERATION_TIPPED_ARROW = new Items("regeneration tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:regeneration\"}"), new ItemData(440, 28, ""), (byte)64, (short)0));
        add(REGENERATION_TIPPED_ARROW_EXTENDED = new Items("regeneration tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_regeneration\"}"), new ItemData(440, 29, ""), (byte)64, (short)0));
        add(REGENERATION_TIPPED_ARROW_PLUS = new Items("regeneration tipped arrow plus", new ItemData(440, 0, "{Potion:\"minecraft:strong_regeneration\"}"), new ItemData(440, 30, ""), (byte)64, (short)0));
        add(STRENGTH_TIPPED_ARROW = new Items("strength tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:strength\"}"), new ItemData(440, 31, ""), (byte)64, (short)0));
        add(STRENGTH_TIPPED_ARROW_EXTENDED = new Items("strength tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_strength\"}"), new ItemData(440, 32, ""), (byte)64, (short)0));
        add(STRENGTH_TIPPED_ARROW_PLUS = new Items("strength tipped arrow plus", new ItemData(440, 0, "{Potion:\"minecraft:strong_strength\"}"), new ItemData(440, 33, ""), (byte)64, (short)0));
        add(WEAKNESS_TIPPED_ARROW = new Items("weakness tipped arrow", new ItemData(440, 0, "{Potion:\"minecraft:weakness\"}"), new ItemData(440, 34, ""), (byte)64, (short)0));
        add(WEAKNESS_TIPPED_ARROW_EXTENDED = new Items("weakness tipped arrow extended", new ItemData(440, 0, "{Potion:\"minecraft:long_weakness\"}"), new ItemData(440, 35, ""), (byte)64, (short)0));
        add(DECAY_TIPPED_ARROW = new Items("decay tipped arrow", null, new ItemData(440, 36, ""), (byte)64, (short)0));
        add(UNCRAFTABLE_LINGERING_POTION = new Items("uncraftable lingering potion", new ItemData(441, 0, ""), null, (byte)1, (short)0));
        add(LINGERING_POTION = new Items("lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:water\"}"), new ItemData(441, 0, ""), (byte)1, (short)0));
        add(MUNDANE_LINGERING_POTION = new Items("mundane lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:mundane\"}"), new ItemData(441, 1, ""), (byte)1, (short)0));
        add(MUNDANE_LINGERING_POTION_EXTENDED = new Items("mundane lingering potion extended", null, new ItemData(441, 2, ""), (byte)1, (short)0));
        add(THICK_LINGERING_POTION = new Items("thick lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:thick\"}"), new ItemData(441, 3, ""), (byte)1, (short)0));
        add(AWKWARD_LINGERING_POTION = new Items("awkward lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:awkward\"}"), new ItemData(441, 4, ""), (byte)1, (short)0));
        add(NIGHT_VISION_LINGERING_POTION = new Items("night vision lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:night_vision\"}"), new ItemData(441, 5, ""), (byte)1, (short)0));
        add(NIGHT_VISION_LINGERING_POTION_EXTENDED = new Items("night vision lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_night_vision\"}"), new ItemData(441, 6, ""), (byte)1, (short)0));
        add(INVISIBILITY_LINGERING_POTION = new Items("invisibility lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:invisibility\"}"), new ItemData(441, 7, ""), (byte)1, (short)0));
        add(INVISIBILITY_LINGERING_POTION_EXTENDED = new Items("invisibility lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_invisibility\"}"), new ItemData(441, 8, ""), (byte)1, (short)0));
        add(LEAPING_LINGERING_POTION = new Items("leaping lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:leaping\"}"), new ItemData(441, 9, ""), (byte)1, (short)0));
        add(LEAPING_LINGERING_POTION_EXTENDED = new Items("leaping lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_leaping\"}"), new ItemData(441, 10, ""), (byte)1, (short)0));
        add(LEAPING_LINGERING_POTION_PLUS = new Items("leaping lingering potion plus", new ItemData(441, 0, "{Potion:\"minecraft:strong_leaping\"}"), new ItemData(441, 11, ""), (byte)1, (short)0));
        add(FIRE_RESISTANCE_LINGERING_POTION = new Items("fire resistance lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:fire_resistance\"}"), new ItemData(441, 12, ""), (byte)1, (short)0));
        add(FIRE_RESISTANCE_LINGERING_POTION_EXTENDED = new Items("fire resistance lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_fire_resistance\"}"), new ItemData(441, 13, ""), (byte)1, (short)0));
        add(SWIFTNESS_LINGERING_POTION = new Items("swiftness lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:swiftness\"}"), new ItemData(441, 14, ""), (byte)1, (short)0));
        add(SWIFTNESS_LINGERING_POTION_EXTENDED = new Items("swiftness lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_swiftness\"}"), new ItemData(441, 15, ""), (byte)1, (short)0));
        add(SWIFTNESS_LINGERING_POTION_PLUS = new Items("swiftness lingering potion plus", new ItemData(441, 0, "{Potion:\"minecraft:strong_swiftness\"}"), new ItemData(441, 16, ""), (byte)1, (short)0));
        add(SLOWNESS_LINGERING_POTION = new Items("slowness lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:slowness\"}"), new ItemData(441, 17, ""), (byte)1, (short)0));
        add(SLOWNESS_LINGERING_POTION_EXTENDED = new Items("slowness lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_slowness\"}"), new ItemData(441, 18, ""), (byte)1, (short)0));
        add(WATER_BREATHING_LINGERING_POTION = new Items("water breathing lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:water_breathing\"}"), new ItemData(441, 19, ""), (byte)1, (short)0));
        add(WATER_BREATHING_LINGERING_POTION_EXTENDED = new Items("water breathing lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:water_breathing_extended\"}"), new ItemData(441, 20, ""), (byte)1, (short)0));
        add(HEALING_LINGERING_POTION = new Items("healing lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:healing\"}"), new ItemData(441, 21, ""), (byte)1, (short)0));
        add(HEALING_LINGERING_POTION_PLUS = new Items("healing lingering potion plus", new ItemData(441, 0, "{Potion:\"minecraft:strong_healing\"}"), new ItemData(441, 22, ""), (byte)1, (short)0));
        add(HARMING_LINGERING_POTION = new Items("harming lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:harming\"}"), new ItemData(441, 23, ""), (byte)1, (short)0));
        add(HARMING_LINGERING_POTION_PLUS = new Items("harming lingering potion plus", new ItemData(441, 0, "{Potion:\"minecraft:strong_harming\"}"), new ItemData(441, 24, ""), (byte)1, (short)0));
        add(POISON_LINGERING_POTION = new Items("poison lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:poison\"}"), new ItemData(441, 25, ""), (byte)1, (short)0));
        add(POISON_LINGERING_POTION_EXTENDED = new Items("poison lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_poison\"}"), new ItemData(441, 26, ""), (byte)1, (short)0));
        add(POISON_LINGERING_POTION_PLUS = new Items("poison lingering potion plus", new ItemData(441, 0, "{Potion:\"minecraft:strong_poison\"}"), new ItemData(441, 27, ""), (byte)1, (short)0));
        add(REGENERATION_LINGERING_POTION = new Items("regeneration lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:regeneration\"}"), new ItemData(441, 28, ""), (byte)1, (short)0));
        add(REGENERATION_LINGERING_POTION_EXTENDED = new Items("regeneration lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_regeneration\"}"), new ItemData(441, 29, ""), (byte)1, (short)0));
        add(REGENERATION_LINGERING_POTION_PLUS = new Items("regeneration lingering potion plus", new ItemData(441, 0, "{Potion:\"minecraft:strong_regeneration\"}"), new ItemData(441, 30, ""), (byte)1, (short)0));
        add(STRENGTH_LINGERING_POTION = new Items("strength lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:strength\"}"), new ItemData(441, 31, ""), (byte)1, (short)0));
        add(STRENGTH_LINGERING_POTION_EXTENDED = new Items("strength lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_strength\"}"), new ItemData(441, 32, ""), (byte)1, (short)0));
        add(STRENGTH_LINGERING_POTION_PLUS = new Items("strength lingering potion plus", new ItemData(441, 0, "{Potion:\"minecraft:strong_strength\"}"), new ItemData(441, 33, ""), (byte)1, (short)0));
        add(WEAKNESS_LINGERING_POTION = new Items("weakness lingering potion", new ItemData(441, 0, "{Potion:\"minecraft:weakness\"}"), new ItemData(441, 34, ""), (byte)1, (short)0));
        add(WEAKNESS_LINGERING_POTION_EXTENDED = new Items("weakness lingering potion extended", new ItemData(441, 0, "{Potion:\"minecraft:long_weakness\"}"), new ItemData(441, 35, ""), (byte)1, (short)0));
        add(DECAY_LINGERING_POTION = new Items("decay lingering potion", null, new ItemData(441, 36, ""), (byte)1, (short)0));
        add(SHIELD = new Items("shield", new ItemData(442, 0, ""), null, (byte)1, (short)337));
        add(ELYTRA = new Items("elytra", new ItemData(443, 0, ""), new ItemData(444, 0, ""), (byte)64, (short)432));
        add(SPRUCE_BOAT = new Items("spruce boat", new ItemData(444, 0, ""), new ItemData(333, 1, ""), (byte)1, (short)0));
        add(BIRCH_BOAT = new Items("birch boat", new ItemData(445, 0, ""), new ItemData(333, 2, ""), (byte)1, (short)0));
        add(JUNGLE_BOAT = new Items("jungle boat", new ItemData(446, 0, ""), new ItemData(333, 3, ""), (byte)1, (short)0));
        add(ACACIA_BOAT = new Items("acacia boat", new ItemData(447, 0, ""), new ItemData(333, 4, ""), (byte)1, (short)0));
        add(DARK_OAK_BOAT = new Items("dark oak boat", new ItemData(448, 0, ""), new ItemData(333, 5, ""), (byte)1, (short)0));
        add(UNDYING_TOTEM = new Items("undying totem", new ItemData(449, 0, ""), new ItemData(450, 0, ""), (byte)1, (short)0));
        add(SHULKER_SHELL = new Items("shulker shell", new ItemData(450, 0, ""), new ItemData(445, 0, ""), (byte)64, (short)0));
        add(IRON_NUGGET = new Items("iron nugget", new ItemData(452, 0, ""), new ItemData(452, 0, ""), (byte)64, (short)0));
        add(KNOWLEDGE_BOOK = new Items("knowledge book", new ItemData(453, 0, ""), null, (byte)1, (short)0));
        add(DISC_13 = new Items("disc 13", new ItemData(2256, 0, ""), new ItemData(500, 0, ""), (byte)1, (short)0));
        add(DISC_CAT = new Items("disc cat", new ItemData(2257, 0, ""), new ItemData(501, 0, ""), (byte)1, (short)0));
        add(DISC_BLOCKS = new Items("disc blocks", new ItemData(2258, 0, ""), new ItemData(502, 0, ""), (byte)1, (short)0));
        add(DISC_CHIRP = new Items("disc chirp", new ItemData(2259, 0, ""), new ItemData(503, 0, ""), (byte)1, (short)0));
        add(DISC_FAR = new Items("disc far", new ItemData(2260, 0, ""), new ItemData(504, 0, ""), (byte)1, (short)0));
        add(DISC_MALL = new Items("disc mall", new ItemData(2261, 0, ""), new ItemData(505, 0, ""), (byte)1, (short)0));
        add(DISC_MELLOHI = new Items("disc mellohi", new ItemData(2262, 0, ""), new ItemData(506, 0, ""), (byte)1, (short)0));
        add(DISC_STAL = new Items("disc stal", new ItemData(2263, 0, ""), new ItemData(507, 0, ""), (byte)1, (short)0));
        add(DISC_STRAD = new Items("disc strad", new ItemData(2264, 0, ""), new ItemData(508, 0, ""), (byte)1, (short)0));
        add(DISC_WARD = new Items("disc ward", new ItemData(2265, 0, ""), new ItemData(509, 0, ""), (byte)1, (short)0));
        add(DISC_11 = new Items("disc 11", new ItemData(2266, 0, ""), new ItemData(510, 0, ""), (byte)1, (short)0));
        add(DISC_WAIT = new Items("disc wait", new ItemData(2267, 0, ""), new ItemData(511, 0, ""), (byte)1, (short)0));

    }

    private static void add(Items item)
    {
        if(item.minecraft != null) {
            if(!minecraftItems.containsKey(item.minecraft.id)) minecraftItems.put(item.minecraft.id, new HashMap<Integer, Items>());
            minecraftItems.get(item.minecraft.id).put(item.minecraft.meta, item);
        }
        if(item.pocket != null) {
            if(!pocketItems.containsKey(item.pocket.id)) pocketItems.put(item.pocket.id, new HashMap<Integer, Items>());
            pocketItems.get(item.pocket.id).put(item.pocket.meta, item);
        }
    }

    public static Items getMinecraftItem(int id, int meta)
    {
        Map<Integer, Items> b = minecraftItems.get(id);
        if(b != null) {
            Items ret = b.get(meta);
            if(ret != null) return ret;
            else if(meta != 0) return b.get(0);
        }
        return null;
    }

    public static Items getPocketItem(int id, int meta)
    {
        Map<Integer, Items> b = pocketItems.get(id);
        if(b != null) {
            Items ret = b.get(meta);
            if(ret != null) return ret;
            else if(meta != 0) return b.get(0);
        }
        return null;
    }

}
