/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket110.xml
 */
package sul.protocol.pocket110.play;

import sul.utils.*;

/**
 * Sets the time.
 */
public class SetTime extends Packet {

	public static final byte ID = (byte)10;

	public static final boolean CLIENTBOUND = true;
	public static final boolean SERVERBOUND = false;

	@Override
	public int getId() {
		return ID;
	}

	/**
	 * Time of the day in a range from 0 to 24000. If higher or lower it will be moduled
	 * to 24000.
	 */
	public int time;

	/**
	 * Indicates whether the daylight cycle is active. If not, the time will be stopped
	 * at the value given in the previous field.
	 */
	public boolean daylightCycle;

	public SetTime() {}

	public SetTime(int time, boolean daylightCycle) {
		this.time = time;
		this.daylightCycle = daylightCycle;
	}

	@Override
	public int length() {
		return Buffer.varintLength(time) + 2;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarint(time);
		this.writeBool(daylightCycle);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		time=this.readVarint();
		daylightCycle=this.readBool();
	}

	public static SetTime fromBuffer(byte[] buffer) {
		SetTime ret = new SetTime();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "SetTime(time: " + this.time + ", daylightCycle: " + this.daylightCycle + ")";
	}

}