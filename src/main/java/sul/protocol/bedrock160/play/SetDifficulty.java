/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/bedrock160.xml
 */
package sul.protocol.bedrock160.play;

import sul.utils.*;

public class SetDifficulty extends Packet {

	public static final int ID = (int)60;

	public static final boolean CLIENTBOUND = true;
	public static final boolean SERVERBOUND = false;

	@Override
	public int getId() {
		return ID;
	}

	// difficulty
	public static final int PEACEFUL = (int)0;
	public static final int EASY = (int)1;
	public static final int NORMAL = (int)2;
	public static final int HARD = (int)3;

	public int difficulty;

	public SetDifficulty() {}

	public SetDifficulty(int difficulty) {
		this.difficulty = difficulty;
	}

	@Override
	public int length() {
		return Buffer.varuintLength(difficulty) + 1;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeVaruint(difficulty);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		this.readVaruint();
		difficulty=this.readVaruint();
	}

	public static SetDifficulty fromBuffer(byte[] buffer) {
		SetDifficulty ret = new SetDifficulty();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "SetDifficulty(difficulty: " + this.difficulty + ")";
	}

}