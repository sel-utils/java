/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket137.xml
 */
package sul.protocol.pocket137.play;

import sul.utils.*;

public class SetDefaultGameType extends Packet {

	public static final int ID = (int)105;

	public static final boolean CLIENTBOUND = true;
	public static final boolean SERVERBOUND = false;

	@Override
	public int getId() {
		return ID;
	}

	// game type
	public static final int SURVIVAL = (int)0;
	public static final int CREATIVE = (int)1;
	public static final int ADVENTURE = (int)2;

	public int gameType;

	public SetDefaultGameType() {}

	public SetDefaultGameType(int gameType) {
		this.gameType = gameType;
	}

	@Override
	public int length() {
		return Buffer.varuintLength(gameType) + 2;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeVaruint(gameType);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		this.readVaruint();
		gameType=this.readVaruint();
	}

	public static SetDefaultGameType fromBuffer(byte[] buffer) {
		SetDefaultGameType ret = new SetDefaultGameType();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "SetDefaultGameType(gameType: " + this.gameType + ")";
	}

}