/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket112.xml
 */
package sul.protocol.pocket112.play;

import sul.utils.*;

public class InventoryAction extends Packet {

	public static final byte ID = (byte)47;

	public static final boolean CLIENTBOUND = false;
	public static final boolean SERVERBOUND = true;

	@Override
	public int getId() {
		return ID;
	}

	public int action;
	public sul.protocol.pocket112.types.Slot item;
	public int unknown2;
	public int unknown3;

	public InventoryAction() {}

	public InventoryAction(int action, sul.protocol.pocket112.types.Slot item, int unknown2, int unknown3) {
		this.action = action;
		this.item = item;
		this.unknown2 = unknown2;
		this.unknown3 = unknown3;
	}

	@Override
	public int length() {
		return Buffer.varintLength(action) + item.length() + Buffer.varintLength(unknown2) + Buffer.varintLength(unknown3) + 1;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarint(action);
		this.writeBytes(item.encode());
		this.writeVarint(unknown2);
		this.writeVarint(unknown3);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		action=this.readVarint();
		item=new sul.protocol.pocket112.types.Slot(); item._index=this._index; item.decode(this._buffer); this._index=item._index;
		unknown2=this.readVarint();
		unknown3=this.readVarint();
	}

	public static InventoryAction fromBuffer(byte[] buffer) {
		InventoryAction ret = new InventoryAction();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "InventoryAction(action: " + this.action + ", item: " + this.item.toString() + ", unknown2: " + this.unknown2 + ", unknown3: " + this.unknown3 + ")";
	}

}