/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket113.xml
 */
package sul.protocol.pocket113.play;

import sul.utils.*;

public class EntityFall extends Packet {

	public static final byte ID = (byte)37;

	public static final boolean CLIENTBOUND = false;
	public static final boolean SERVERBOUND = true;

	@Override
	public int getId() {
		return ID;
	}

	public long entityId;
	public float distance;
	public boolean unknown2;

	public EntityFall() {}

	public EntityFall(long entityId, float distance, boolean unknown2) {
		this.entityId = entityId;
		this.distance = distance;
		this.unknown2 = unknown2;
	}

	@Override
	public int length() {
		return Buffer.varlongLength(entityId) + 6;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarlong(entityId);
		this.writeLittleEndianFloat(distance);
		this.writeBool(unknown2);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		entityId=this.readVarlong();
		distance=readLittleEndianFloat();
		unknown2=this.readBool();
	}

	public static EntityFall fromBuffer(byte[] buffer) {
		EntityFall ret = new EntityFall();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "EntityFall(entityId: " + this.entityId + ", distance: " + this.distance + ", unknown2: " + this.unknown2 + ")";
	}

}