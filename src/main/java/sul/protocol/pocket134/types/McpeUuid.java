/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket134.xml
 */
package sul.protocol.pocket134.types;

import sul.utils.*;

public class McpeUuid extends Stream {

	public long mostSignificantBits;
	public long leastSignificantBits;

	public McpeUuid() {}

	public McpeUuid(long mostSignificantBits, long leastSignificantBits) {
		this.mostSignificantBits = mostSignificantBits;
		this.leastSignificantBits = leastSignificantBits;
	}

	@Override
	public int length() {
		return 16;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeLittleEndianLong(mostSignificantBits);
		this.writeLittleEndianLong(leastSignificantBits);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		mostSignificantBits=readLittleEndianLong();
		leastSignificantBits=readLittleEndianLong();
	}

	@Override
	public String toString() {
		return "McpeUuid(mostSignificantBits: " + this.mostSignificantBits + ", leastSignificantBits: " + this.leastSignificantBits + ")";
	}


}