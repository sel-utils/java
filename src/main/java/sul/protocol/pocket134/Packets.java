/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 */
package sul.protocol.pocket134;

import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

import sul.utils.Packet;

/**
 * Protocol used in Minecraft: Pocket Edition and variants. The network part of the
 * protocol is managed by RakNet.
 * 
 * ⚠ Every packet is encoded as id (byte), padding (2 bytes) and body ⚠
 * 
 * <h3>Login sequence</h3>
 * + The client sends a Login packet with the details of its game and its account
 * + The server always replies with a PlayerStatus
 * + If status field in the packet sent was different from ok the connection is closed
 * 
 * <h3>Spawning sequence</h3>
 * + The server sends a StartGame packet with the world's informations
 * + The server sends zero or more FullChunkData with the chunk's blocks and tiles
 * + The server sends the player's inventory using ContainerSetContent
 * + The server sends the world's textures through ResourcePacksInfo (the textures
 * may be empty)
 * + The client replies with ResourcePackClientResponse telling the server that the
 * textures have been loaded
 * + The server sends a PlayStatus packet set to spawned
 * + The client spawns
 * 
 * Everything written in the documentation has been tested on [sel-server](https://github.com/sel-project/sel-server).
 * The types and the packets without documentation haven't been tested yet or it's
 * not clear what their real purpose in the game is.
 */
public final class Packets {

	private Packets() {}

	/**
	 * Packets related to the gameplay. Network-related packets (encapsulation, acks, nacks)
	 * are managed by RakNet and every packet in this section is encapsualted in an Encapsualted
	 * packet.
	 */
	public static final Map<Integer, Class<? extends Packet>> PLAY;

	static {

		HashMap<Integer, Class<? extends Packet>> play = new HashMap<Integer, Class<? extends Packet>>();
		play.put(1, sul.protocol.pocket134.play.Login.class);
		play.put(2, sul.protocol.pocket134.play.PlayStatus.class);
		play.put(3, sul.protocol.pocket134.play.ServerToClientHandshake.class);
		play.put(4, sul.protocol.pocket134.play.ClientToServerHandshake.class);
		play.put(5, sul.protocol.pocket134.play.Disconnect.class);
		play.put(6, sul.protocol.pocket134.play.ResourcePacksInfo.class);
		play.put(7, sul.protocol.pocket134.play.ResourcePacksStackPacket.class);
		play.put(8, sul.protocol.pocket134.play.ResourcePackClientResponse.class);
		play.put(9, sul.protocol.pocket134.play.Text.class);
		play.put(10, sul.protocol.pocket134.play.SetTime.class);
		play.put(11, sul.protocol.pocket134.play.StartGame.class);
		play.put(12, sul.protocol.pocket134.play.AddPlayer.class);
		play.put(13, sul.protocol.pocket134.play.AddEntity.class);
		play.put(14, sul.protocol.pocket134.play.RemoveEntity.class);
		play.put(15, sul.protocol.pocket134.play.AddItemEntity.class);
		play.put(16, sul.protocol.pocket134.play.AddHangingEntity.class);
		play.put(17, sul.protocol.pocket134.play.TakeItemEntity.class);
		play.put(18, sul.protocol.pocket134.play.MoveEntity.class);
		play.put(19, sul.protocol.pocket134.play.MovePlayer.class);
		play.put(20, sul.protocol.pocket134.play.RiderJump.class);
		play.put(21, sul.protocol.pocket134.play.UpdateBlock.class);
		play.put(22, sul.protocol.pocket134.play.AddPainting.class);
		play.put(23, sul.protocol.pocket134.play.Explode.class);
		play.put(24, sul.protocol.pocket134.play.LevelSoundEvent.class);
		play.put(25, sul.protocol.pocket134.play.LevelEvent.class);
		play.put(26, sul.protocol.pocket134.play.BlockEvent.class);
		play.put(27, sul.protocol.pocket134.play.EntityEvent.class);
		play.put(28, sul.protocol.pocket134.play.MobEffect.class);
		play.put(29, sul.protocol.pocket134.play.UpdateAttributes.class);
		play.put(30, sul.protocol.pocket134.play.InventoryTransaction.class);
		play.put(31, sul.protocol.pocket134.play.MobEquipment.class);
		play.put(32, sul.protocol.pocket134.play.MobArmorEquipment.class);
		play.put(33, sul.protocol.pocket134.play.Interact.class);
		play.put(34, sul.protocol.pocket134.play.BlockPickRequest.class);
		play.put(35, sul.protocol.pocket134.play.EntityPickRequest.class);
		play.put(36, sul.protocol.pocket134.play.PlayerAction.class);
		play.put(37, sul.protocol.pocket134.play.EntityFall.class);
		play.put(38, sul.protocol.pocket134.play.HurtArmor.class);
		play.put(39, sul.protocol.pocket134.play.SetEntityData.class);
		play.put(40, sul.protocol.pocket134.play.SetEntityMotion.class);
		play.put(41, sul.protocol.pocket134.play.SetEntityLink.class);
		play.put(42, sul.protocol.pocket134.play.SetHealth.class);
		play.put(43, sul.protocol.pocket134.play.SetSpawnPosition.class);
		play.put(44, sul.protocol.pocket134.play.Animate.class);
		play.put(45, sul.protocol.pocket134.play.Respawn.class);
		play.put(46, sul.protocol.pocket134.play.ContainerOpen.class);
		play.put(47, sul.protocol.pocket134.play.ContainerClose.class);
		play.put(48, sul.protocol.pocket134.play.PlayerHotbar.class);
		play.put(49, sul.protocol.pocket134.play.InventoryContent.class);
		play.put(50, sul.protocol.pocket134.play.InventorySlot.class);
		play.put(51, sul.protocol.pocket134.play.ContainerSetData.class);
		play.put(52, sul.protocol.pocket134.play.CraftingData.class);
		play.put(53, sul.protocol.pocket134.play.CraftingEvent.class);
		play.put(54, sul.protocol.pocket134.play.GuiDataPickItem.class);
		play.put(55, sul.protocol.pocket134.play.AdventureSettings.class);
		play.put(56, sul.protocol.pocket134.play.BlockEntityData.class);
		play.put(57, sul.protocol.pocket134.play.PlayerInput.class);
		play.put(58, sul.protocol.pocket134.play.FullChunkData.class);
		play.put(59, sul.protocol.pocket134.play.SetCommandsEnabled.class);
		play.put(60, sul.protocol.pocket134.play.SetDifficulty.class);
		play.put(61, sul.protocol.pocket134.play.ChangeDimension.class);
		play.put(62, sul.protocol.pocket134.play.SetPlayerGameType.class);
		play.put(63, sul.protocol.pocket134.play.PlayerList.class);
		play.put(64, sul.protocol.pocket134.play.SimpleEvent.class);
		play.put(65, sul.protocol.pocket134.play.TelemetryEvent.class);
		play.put(66, sul.protocol.pocket134.play.SpawnExperienceOrb.class);
		play.put(67, sul.protocol.pocket134.play.ClientboundMapItemData.class);
		play.put(68, sul.protocol.pocket134.play.MapInfoRequest.class);
		play.put(69, sul.protocol.pocket134.play.RequestChunkRadius.class);
		play.put(70, sul.protocol.pocket134.play.ChunkRadiusUpdated.class);
		play.put(71, sul.protocol.pocket134.play.ItemFrameDropItem.class);
		play.put(72, sul.protocol.pocket134.play.GameRulesChanged.class);
		play.put(73, sul.protocol.pocket134.play.Camera.class);
		play.put(74, sul.protocol.pocket134.play.BossEvent.class);
		play.put(75, sul.protocol.pocket134.play.ShowCredits.class);
		play.put(76, sul.protocol.pocket134.play.AvailableCommands.class);
		play.put(77, sul.protocol.pocket134.play.CommandRequest.class);
		play.put(78, sul.protocol.pocket134.play.CommandBlockUpdate.class);
		play.put(80, sul.protocol.pocket134.play.UpdateTrade.class);
		play.put(81, sul.protocol.pocket134.play.UpdateEquip.class);
		play.put(82, sul.protocol.pocket134.play.ResourcePackDataInfo.class);
		play.put(83, sul.protocol.pocket134.play.ResourcePackChunkData.class);
		play.put(84, sul.protocol.pocket134.play.ResourcePackChunkRequest.class);
		play.put(85, sul.protocol.pocket134.play.Transfer.class);
		play.put(86, sul.protocol.pocket134.play.PlaySound.class);
		play.put(87, sul.protocol.pocket134.play.StopSound.class);
		play.put(88, sul.protocol.pocket134.play.SetTitle.class);
		play.put(89, sul.protocol.pocket134.play.AddBehaviorTree.class);
		play.put(90, sul.protocol.pocket134.play.StructureBlockUpdate.class);
		play.put(91, sul.protocol.pocket134.play.ShowStoreOffer.class);
		play.put(92, sul.protocol.pocket134.play.PurchaseReceipt.class);
		play.put(93, sul.protocol.pocket134.play.PlayerSkin.class);
		play.put(94, sul.protocol.pocket134.play.SubClientLogin.class);
		play.put(95, sul.protocol.pocket134.play.InitiateWebSocketConnection.class);
		play.put(96, sul.protocol.pocket134.play.SetLastHurtBy.class);
		play.put(97, sul.protocol.pocket134.play.BookEdit.class);
		play.put(98, sul.protocol.pocket134.play.NpcRequest.class);
		play.put(99, sul.protocol.pocket134.play.PhotoTransfer.class);
		play.put(100, sul.protocol.pocket134.play.ModalFormRequest.class);
		play.put(101, sul.protocol.pocket134.play.ModalFormResponse.class);
		play.put(102, sul.protocol.pocket134.play.ServerSettingsRequest.class);
		play.put(103, sul.protocol.pocket134.play.ServerSettingsResponse.class);
		play.put(104, sul.protocol.pocket134.play.ShowProfile.class);
		play.put(105, sul.protocol.pocket134.play.SetDefaultGameType.class);
		PLAY = Collections.unmodifiableMap(play);

	}

}