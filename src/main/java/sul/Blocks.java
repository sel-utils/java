/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/blocks.xml
 */
package sul;

import java.util.*;

public final class Blocks
{

    public static Blocks AIR;
    public static Blocks STONE;
    public static Blocks GRANITE;
    public static Blocks POLISHED_GRANITE;
    public static Blocks DIORITE;
    public static Blocks POLISHED_DIORITE;
    public static Blocks ANDESITE;
    public static Blocks POLISHED_ANDESITE;
    public static Blocks STONE_BRICKS;
    public static Blocks MOSSY_STONE_BRICKS;
    public static Blocks CRACKED_STONE_BRICKS;
    public static Blocks CHISELED_STONE_BRICKS;
    public static Blocks COBBLESTONE;
    public static Blocks MOSS_STONE;
    public static Blocks COBBLESTONE_WALL;
    public static Blocks MOSSY_COBBLESTONE_WALL;
    public static Blocks BRICKS;
    public static Blocks COAL_ORE;
    public static Blocks IRON_ORE;
    public static Blocks GOLD_ORE;
    public static Blocks DIAMOND_ORE;
    public static Blocks EMERALD_ORE;
    public static Blocks LAPIS_LAZULI_ORE;
    public static Blocks REDSTONE_ORE;
    public static Blocks LIT_REDSTONE_ORE;
    public static Blocks NETHER_QUARTZ_ORE;
    public static Blocks COAL_BLOCK;
    public static Blocks IRON_BLOCK;
    public static Blocks GOLD_BLOCK;
    public static Blocks DIAMOND_BLOCK;
    public static Blocks EMERALD_BLOCK;
    public static Blocks REDSTONE_BLOCK;
    public static Blocks LAPIS_LAZULI_BLOCK;
    public static Blocks NETHER_REACTOR_CORE;
    public static Blocks ACTIVE_NETHER_REACTOR_CORE;
    public static Blocks USED_NETHER_REACTOR_CORE;
    public static Blocks GRASS;
    public static Blocks DIRT;
    public static Blocks COARSE_DIRT;
    public static Blocks PODZOL;
    public static Blocks MYCELIUM;
    public static Blocks GRASS_PATH;
    public static Blocks FARMLAND_0;
    public static Blocks FARMLAND_1;
    public static Blocks FARMLAND_2;
    public static Blocks FARMLAND_3;
    public static Blocks FARMLAND_4;
    public static Blocks FARMLAND_5;
    public static Blocks FARMLAND_6;
    public static Blocks FARMLAND_7;
    public static Blocks OAK_WOOD_PLANKS;
    public static Blocks SPRUCE_WOOD_PLANKS;
    public static Blocks BIRCH_WOOD_PLANKS;
    public static Blocks JUNGLE_WOOD_PLANKS;
    public static Blocks ACACIA_WOOD_PLANKS;
    public static Blocks DARK_OAK_WOOD_PLANKS;
    public static Blocks OAK_SAPLING;
    public static Blocks SPRUCE_SAPLING;
    public static Blocks BIRCH_SAPLING;
    public static Blocks JUNGLE_SAPLING;
    public static Blocks ACACIA_SAPLING;
    public static Blocks DARK_OAK_SAPLING;
    public static Blocks BEDROCK;
    public static Blocks SAND;
    public static Blocks RED_SAND;
    public static Blocks GRAVEL;
    public static Blocks OAK_WOOD_UP_DOWN;
    public static Blocks OAK_WOOD_EAST_WEST;
    public static Blocks OAK_WOOD_NORTH_SOUTH;
    public static Blocks OAK_WOOD_BARK;
    public static Blocks SPRUCE_WOOD_UP_DOWN;
    public static Blocks SPRUCE_WOOD_EAST_WEST;
    public static Blocks SPRUCE_WOOD_NORTH_SOUTH;
    public static Blocks SPRUCE_WOOD_BARK;
    public static Blocks BIRCH_WOOD_UP_DOWN;
    public static Blocks BIRCH_WOOD_EAST_WEST;
    public static Blocks BIRCH_WOOD_NORTH_SOUTH;
    public static Blocks BIRCH_WOOD_BARK;
    public static Blocks JUNGLE_WOOD_UP_DOWN;
    public static Blocks JUNGLE_WOOD_EAST_WEST;
    public static Blocks JUNGLE_WOOD_NORTH_SOUTH;
    public static Blocks JUNGLE_WOOD_BARK;
    public static Blocks ACACIA_WOOD_UP_DOWN;
    public static Blocks ACACIA_WOOD_EAST_WEST;
    public static Blocks ACACIA_WOOD_NORTH_SOUTH;
    public static Blocks ACACIA_WOOD_BARK;
    public static Blocks DARK_OAK_WOOD_UP_DOWN;
    public static Blocks DARK_OAK_WOOD_EAST_WEST;
    public static Blocks DARK_OAK_WOOD_NORTH_SOUTH;
    public static Blocks DARK_OAK_WOOD_BARK;
    public static Blocks OAK_LEAVES_DECAY;
    public static Blocks OAK_LEAVES_NO_DECAY;
    public static Blocks OAK_LEAVES_CHECK_DECAY;
    public static Blocks OAK_LEAVES_NO_DECAY_CHECK_DECAY;
    public static Blocks SPRUCE_LEAVES_DECAY;
    public static Blocks SPRUCE_LEAVES_NO_DECAY;
    public static Blocks SPRUCE_LEAVES_CHECK_DECAY;
    public static Blocks SPRUCE_LEAVES_NO_DECAY_CHECK_DECAY;
    public static Blocks BIRCH_LEAVES_DECAY;
    public static Blocks BIRCH_LEAVES_NO_DECAY;
    public static Blocks BIRCH_LEAVES_CHECK_DECAY;
    public static Blocks BIRCH_LEAVES_NO_DECAY_CHECK_DECAY;
    public static Blocks JUNGLE_LEAVES_DECAY;
    public static Blocks JUNGLE_LEAVES_NO_DECAY;
    public static Blocks JUNGLE_LEAVES_CHECK_DECAY;
    public static Blocks JUNGLE_LEAVES_NO_DECAY_CHECK_DECAY;
    public static Blocks ACACIA_LEAVES_DECAY;
    public static Blocks ACACIA_LEAVES_NO_DECAY;
    public static Blocks ACACIA_LEAVES_CHECK_DECAY;
    public static Blocks ACACIA_LEAVES_NO_DECAY_CHECK_DECAY;
    public static Blocks DARK_OAK_LEAVES_DECAY;
    public static Blocks DARK_OAK_LEAVES_NO_DECAY;
    public static Blocks DARK_OAK_LEAVES_CHECK_DECAY;
    public static Blocks DARK_OAK_LEAVES_NO_DECAY_CHECK_DECAY;
    public static Blocks FLOWING_WATER_0;
    public static Blocks FLOWING_WATER_1;
    public static Blocks FLOWING_WATER_2;
    public static Blocks FLOWING_WATER_3;
    public static Blocks FLOWING_WATER_4;
    public static Blocks FLOWING_WATER_5;
    public static Blocks FLOWING_WATER_6;
    public static Blocks FLOWING_WATER_7;
    public static Blocks FLOWING_WATER_FALLING_0;
    public static Blocks FLOWING_WATER_FALLING_1;
    public static Blocks FLOWING_WATER_FALLING_2;
    public static Blocks FLOWING_WATER_FALLING_3;
    public static Blocks FLOWING_WATER_FALLING_4;
    public static Blocks FLOWING_WATER_FALLING_5;
    public static Blocks FLOWING_WATER_FALLING_6;
    public static Blocks FLOWING_WATER_FALLING_7;
    public static Blocks STILL_WATER_0;
    public static Blocks STILL_WATER_1;
    public static Blocks STILL_WATER_2;
    public static Blocks STILL_WATER_3;
    public static Blocks STILL_WATER_4;
    public static Blocks STILL_WATER_5;
    public static Blocks STILL_WATER_6;
    public static Blocks STILL_WATER_7;
    public static Blocks STILL_WATER_FALLING_0;
    public static Blocks STILL_WATER_FALLING_1;
    public static Blocks STILL_WATER_FALLING_2;
    public static Blocks STILL_WATER_FALLING_3;
    public static Blocks STILL_WATER_FALLING_4;
    public static Blocks STILL_WATER_FALLING_5;
    public static Blocks STILL_WATER_FALLING_6;
    public static Blocks STILL_WATER_FALLING_7;
    public static Blocks FLOWING_LAVA_0;
    public static Blocks FLOWING_LAVA_1;
    public static Blocks FLOWING_LAVA_2;
    public static Blocks FLOWING_LAVA_3;
    public static Blocks FLOWING_LAVA_4;
    public static Blocks FLOWING_LAVA_5;
    public static Blocks FLOWING_LAVA_6;
    public static Blocks FLOWING_LAVA_7;
    public static Blocks FLOWING_LAVA_FALLING_0;
    public static Blocks FLOWING_LAVA_FALLING_1;
    public static Blocks FLOWING_LAVA_FALLING_2;
    public static Blocks FLOWING_LAVA_FALLING_3;
    public static Blocks FLOWING_LAVA_FALLING_4;
    public static Blocks FLOWING_LAVA_FALLING_5;
    public static Blocks FLOWING_LAVA_FALLING_6;
    public static Blocks FLOWING_LAVA_FALLING_7;
    public static Blocks STILL_LAVA_0;
    public static Blocks STILL_LAVA_1;
    public static Blocks STILL_LAVA_2;
    public static Blocks STILL_LAVA_3;
    public static Blocks STILL_LAVA_4;
    public static Blocks STILL_LAVA_5;
    public static Blocks STILL_LAVA_6;
    public static Blocks STILL_LAVA_7;
    public static Blocks STILL_LAVA_FALLING_0;
    public static Blocks STILL_LAVA_FALLING_1;
    public static Blocks STILL_LAVA_FALLING_2;
    public static Blocks STILL_LAVA_FALLING_3;
    public static Blocks STILL_LAVA_FALLING_4;
    public static Blocks STILL_LAVA_FALLING_5;
    public static Blocks STILL_LAVA_FALLING_6;
    public static Blocks STILL_LAVA_FALLING_7;
    public static Blocks SPONGE;
    public static Blocks WET_SPONGE;
    public static Blocks GLASS;
    public static Blocks WHITE_STAINED_GLASS;
    public static Blocks ORANGE_STAINED_GLASS;
    public static Blocks MAGENTA_STAINED_GLASS;
    public static Blocks LIGHT_BLUE_STAINED_GLASS;
    public static Blocks YELLOW_STAINED_GLASS;
    public static Blocks LIME_STAINED_GLASS;
    public static Blocks PINK_STAINED_GLASS;
    public static Blocks GRAY_STAINED_GLASS;
    public static Blocks LIGHT_GRAY_STAINED_GLASS;
    public static Blocks CYAN_STAINED_GLASS;
    public static Blocks PURPLE_STAINED_GLASS;
    public static Blocks BLUE_STAINED_GLASS;
    public static Blocks BROWN_STAINED_GLASS;
    public static Blocks GREEN_STAINED_GLASS;
    public static Blocks RED_STAINED_GLASS;
    public static Blocks BLACK_STAINED_GLASS;
    public static Blocks GLASS_PANE;
    public static Blocks WHITE_STAINED_GLASS_PANE;
    public static Blocks ORANGE_STAINED_GLASS_PANE;
    public static Blocks MAGENTA_STAINED_GLASS_PANE;
    public static Blocks LIGHT_BLUE_STAINED_GLASS_PANE;
    public static Blocks YELLOW_STAINED_GLASS_PANE;
    public static Blocks LIME_STAINED_GLASS_PANE;
    public static Blocks PINK_STAINED_GLASS_PANE;
    public static Blocks GRAY_STAINED_GLASS_PANE;
    public static Blocks LIGHT_GRAY_STAINED_GLASS_PANE;
    public static Blocks CYAN_STAINED_GLASS_PANE;
    public static Blocks PURPLE_STAINED_GLASS_PANE;
    public static Blocks BLUE_STAINED_GLASS_PANE;
    public static Blocks BROWN_STAINED_GLASS_PANE;
    public static Blocks GREEN_STAINED_GLASS_PANE;
    public static Blocks RED_STAINED_GLASS_PANE;
    public static Blocks BLACK_STAINED_GLASS_PANE;
    public static Blocks SANDSTONE;
    public static Blocks CHISELED_SANDSTONE;
    public static Blocks SMOOTH_SANDSTONE;
    public static Blocks RED_SANDSTONE;
    public static Blocks CHISELED_RED_SANDSTONE;
    public static Blocks SMOOTH_RED_SANDSTONE;
    public static Blocks DISPENSER_FACING_DOWN;
    public static Blocks DISPENSER_FACING_UP;
    public static Blocks DISPENSER_FACING_NORTH;
    public static Blocks DISPENSER_FACING_SOUTH;
    public static Blocks DISPENSER_FACING_WEST;
    public static Blocks DISPENSER_FACING_EAST;
    public static Blocks ACTIVE_DISPENSER_FACING_DOWN;
    public static Blocks ACTIVE_DISPENSER_FACING_UP;
    public static Blocks ACTIVE_DISPENSER_FACING_NORTH;
    public static Blocks ACTIVE_DISPENSER_FACING_SOUTH;
    public static Blocks ACTIVE_DISPENSER_FACING_WEST;
    public static Blocks ACTIVE_DISPENSER_FACING_EAST;
    public static Blocks DROPPER_FACING_DOWN;
    public static Blocks DROPPER_FACING_UP;
    public static Blocks DROPPER_FACING_NORTH;
    public static Blocks DROPPER_FACING_SOUTH;
    public static Blocks DROPPER_FACING_WEST;
    public static Blocks DROPPER_FACING_EAST;
    public static Blocks ACTIVE_DROPPER_FACING_DOWN;
    public static Blocks ACTIVE_DROPPER_FACING_UP;
    public static Blocks ACTIVE_DROPPER_FACING_NORTH;
    public static Blocks ACTIVE_DROPPER_FACING_SOUTH;
    public static Blocks ACTIVE_DROPPER_FACING_WEST;
    public static Blocks ACTIVE_DROPPER_FACING_EAST;
    public static Blocks OBSERVER_FACING_DOWN;
    public static Blocks OBSERVER_FACING_UP;
    public static Blocks OBSERVER_FACING_SOUTH;
    public static Blocks OBSERVER_FACING_NORTH;
    public static Blocks OBSERVER_FACING_EAST;
    public static Blocks OBSERVER_FACING_WEST;
    public static Blocks NOTE_BLOCK;
    public static Blocks BED_FOOT_FACING_SOUTH;
    public static Blocks BED_FOOT_FACING_WEST;
    public static Blocks BED_FOOT_FACING_NORTH;
    public static Blocks BED_FOOT_FACING_EAST;
    public static Blocks OCCUPIED_BED_FOOT_FACING_SOUTH;
    public static Blocks OCCUPIED_BED_FOOT_FACING_WEST;
    public static Blocks OCCUPIED_BED_FOOT_FACING_NORTH;
    public static Blocks OCCUPIED_BED_FOOT_FACING_EAST;
    public static Blocks BED_HEAD_FACING_SOUTH;
    public static Blocks BED_HEAD_FACING_WEST;
    public static Blocks BED_HEAD_FACING_NORTH;
    public static Blocks BED_HEAD_FACING_EAST;
    public static Blocks OCCUPIED_BED_HEAD_FACING_SOUTH;
    public static Blocks OCCUPIED_BED_HEAD_FACING_WEST;
    public static Blocks OCCUPIED_BED_HEAD_FACING_NORTH;
    public static Blocks OCCUPIED_BED_HEAD_FACING_EAST;
    public static Blocks RAIL_NORTH_SOUTH;
    public static Blocks RAIL_EAST_WEST;
    public static Blocks RAIL_ASCENDING_EAST;
    public static Blocks RAIL_ASCENDING_WEST;
    public static Blocks RAIL_ASCENDING_NORTH;
    public static Blocks RAIL_ASCENDING_SOUTH;
    public static Blocks RAIL_CURVED_SOUTH_EAST;
    public static Blocks RAIL_CURVED_SOUTH_WEST;
    public static Blocks RAIL_CURVED_NORTH_WEST;
    public static Blocks RAIL_CURVED_NORTH_EAST;
    public static Blocks POWERED_RAIL_NORTH_SOUTH;
    public static Blocks POWERED_RAIL_EAST_WEST;
    public static Blocks POWERED_RAIL_ASCENDING_EAST;
    public static Blocks POWERED_RAIL_ASCENDING_WEST;
    public static Blocks POWERED_RAIL_ASCENDING_NORTH;
    public static Blocks POWERED_RAIL_ASCENDING_SOUTH;
    public static Blocks ACTIVE_POWERED_RAIL_NORTH_SOUTH;
    public static Blocks ACTIVE_POWERED_RAIL_EAST_WEST;
    public static Blocks ACTIVE_POWERED_RAIL_ASCENDING_EAST;
    public static Blocks ACTIVE_POWERED_RAIL_ASCENDING_WEST;
    public static Blocks ACTIVE_POWERED_RAIL_ASCENDING_NORTH;
    public static Blocks ACTIVE_POWERED_RAIL_ASCENDING_SOUTH;
    public static Blocks ACTIVATOR_RAIL_NORTH_SOUTH;
    public static Blocks ACTIVATOR_RAIL_EAST_WEST;
    public static Blocks ACTIVATOR_RAIL_ASCENDING_EAST;
    public static Blocks ACTIVATOR_RAIL_ASCENDING_WEST;
    public static Blocks ACTIVATOR_RAIL_ASCENDING_NORTH;
    public static Blocks ACTIVATOR_RAIL_ASCENDING_SOUTH;
    public static Blocks ACTIVE_ACTIVATOR_RAIL_NORTH_SOUTH;
    public static Blocks ACTIVE_ACTIVATOR_RAIL_EAST_WEST;
    public static Blocks ACTIVE_ACTIVATOR_RAIL_ASCENDING_EAST;
    public static Blocks ACTIVE_ACTIVATOR_RAIL_ASCENDING_WEST;
    public static Blocks ACTIVE_ACTIVATOR_RAIL_ASCENDING_NORTH;
    public static Blocks ACTIVE_ACTIVATOR_RAIL_ASCENDING_SOUTH;
    public static Blocks DETECTOR_RAIL_NORTH_SOUTH;
    public static Blocks DETECTOR_RAIL_EAST_WEST;
    public static Blocks DETECTOR_RAIL_ASCENDING_EAST;
    public static Blocks DETECTOR_RAIL_ASCENDING_WEST;
    public static Blocks DETECTOR_RAIL_ASCENDING_NORTH;
    public static Blocks DETECTOR_RAIL_ASCENDING_SOUTH;
    public static Blocks ACTIVE_DETECTOR_RAIL_NORTH_SOUTH;
    public static Blocks ACTIVE_DETECTOR_RAIL_EAST_WEST;
    public static Blocks ACTIVE_DETECTOR_RAIL_ASCENDING_EAST;
    public static Blocks ACTIVE_DETECTOR_RAIL_ASCENDING_WEST;
    public static Blocks ACTIVE_DETECTOR_RAIL_ASCENDING_NORTH;
    public static Blocks ACTIVE_DETECTOR_RAIL_ASCENDING_SOUTH;
    public static Blocks PISTON_FACING_DOWN;
    public static Blocks PISTON_FACING_UP;
    public static Blocks PISTON_FACING_NORTH;
    public static Blocks PISTON_FACING_SOUTH;
    public static Blocks PISTON_FACING_WEST;
    public static Blocks PISTON_FACING_EAST;
    public static Blocks STICKY_PISTON_HEAD_FACING_DOWN;
    public static Blocks STICKY_PISTON_HEAD_FACING_UP;
    public static Blocks EXTENDED_PISTON_FACING_DOWN;
    public static Blocks EXTENDED_PISTON_FACING_UP;
    public static Blocks EXTENDED_PISTON_FACING_NORTH;
    public static Blocks EXTENDED_PISTON_FACING_SOUTH;
    public static Blocks EXTENDED_PISTON_FACING_WEST;
    public static Blocks EXTENDED_PISTON_FACING_EAST;
    public static Blocks STICKY_PISTON_HEAD_FACING_NORTH;
    public static Blocks STICKY_PISTON_HEAD_FACING_SOUTH;
    public static Blocks STICKY_PISTON_FACING_DOWN;
    public static Blocks STICKY_PISTON_FACING_UP;
    public static Blocks STICKY_PISTON_FACING_NORTH;
    public static Blocks STICKY_PISTON_FACING_SOUTH;
    public static Blocks STICKY_PISTON_FACING_WEST;
    public static Blocks STICKY_PISTON_FACING_EAST;
    public static Blocks STICKY_PISTON_HEAD_FACING_WEST;
    public static Blocks STICKY_PISTON_HEAD_FACING_EAST;
    public static Blocks EXTENDED_STICKY_PISTON_FACING_DOWN;
    public static Blocks EXTENDED_STICKY_PISTON_FACING_UP;
    public static Blocks EXTENDED_STICKY_PISTON_FACING_NORTH;
    public static Blocks EXTENDED_STICKY_PISTON_FACING_SOUTH;
    public static Blocks EXTENDED_STICKY_PISTON_FACING_WEST;
    public static Blocks EXTENDED_STICKY_PISTON_FACING_EAST;
    public static Blocks SMOOTH_STONE_SLAB;
    public static Blocks FIRE_15;
    public static Blocks PISTON_HEAD_FACING_DOWN;
    public static Blocks PISTON_HEAD_FACING_UP;
    public static Blocks PISTON_HEAD_FACING_NORTH;
    public static Blocks PISTON_HEAD_FACING_SOUTH;
    public static Blocks PISTON_HEAD_FACING_WEST;
    public static Blocks PISTON_HEAD_FACING_EAST;
    public static Blocks PISTON_EXTENSION;
    public static Blocks WHITE_WOOL;
    public static Blocks ORANGE_WOOL;
    public static Blocks MAGENTA_WOOL;
    public static Blocks LIGHT_BLUE_WOOL;
    public static Blocks YELLOW_WOOL;
    public static Blocks LIME_WOOL;
    public static Blocks PINK_WOOL;
    public static Blocks GRAY_WOOL;
    public static Blocks LIGHT_GRAY_WOOL;
    public static Blocks CYAN_WOOL;
    public static Blocks PURPLE_WOOL;
    public static Blocks BLUE_WOOL;
    public static Blocks BROWN_WOOL;
    public static Blocks GREEN_WOOL;
    public static Blocks RED_WOOL;
    public static Blocks BLACK_WOOL;
    public static Blocks WHITE_CARPET;
    public static Blocks ORANGE_CARPET;
    public static Blocks MAGENTA_CARPET;
    public static Blocks LIGHT_BLUE_CARPET;
    public static Blocks YELLOW_CARPET;
    public static Blocks LIME_CARPET;
    public static Blocks PINK_CARPET;
    public static Blocks GRAY_CARPET;
    public static Blocks LIGHT_GRAY_CARPET;
    public static Blocks CYAN_CARPET;
    public static Blocks PURPLE_CARPET;
    public static Blocks BLUE_CARPET;
    public static Blocks BROWN_CARPET;
    public static Blocks GREEN_CARPET;
    public static Blocks RED_CARPET;
    public static Blocks BLACK_CARPET;
    public static Blocks DANDELION;
    public static Blocks POPPY;
    public static Blocks BLUE_ORCHID;
    public static Blocks ALLIUM;
    public static Blocks AZURE_BLUET;
    public static Blocks RED_TULIP;
    public static Blocks ORANGE_TULIP;
    public static Blocks WHITE_TULIP;
    public static Blocks PINK_TULIP;
    public static Blocks OXEYE_DAISY;
    public static Blocks SUNFLOWER_BOTTOM;
    public static Blocks LILIAC_BOTTOM;
    public static Blocks DOUBLE_TALLGRASS_BOTTOM;
    public static Blocks LARGE_FERN_BOTTOM;
    public static Blocks ROSE_BUSH_BOTTOM;
    public static Blocks PEONY_BOTTOM;
    public static Blocks SUNFLOWER_TOP;
    public static Blocks LILIAC_TOP;
    public static Blocks DOUBLE_TALLGRASS_TOP;
    public static Blocks LARGE_FERN_TOP;
    public static Blocks ROSE_BUSH_TOP;
    public static Blocks PEONY_TOP;
    public static Blocks BROWN_MUSHROOM;
    public static Blocks RED_MUSHROOM;
    public static Blocks TALL_GRASS;
    public static Blocks FERN;
    public static Blocks DEAD_BUSH;
    public static Blocks STONE_SLAB;
    public static Blocks SANDSTONE_SLAB;
    public static Blocks STONE_WOODEN_SLAB;
    public static Blocks COBBLESTONE_SLAB;
    public static Blocks BRICKS_SLAB;
    public static Blocks STONE_BRICK_SLAB;
    public static Blocks NETHER_BRICK_SLAB;
    public static Blocks QUARTZ_SLAB;
    public static Blocks RED_SANDSTONE_SLAB;
    public static Blocks PURPUR_SLAB;
    public static Blocks OAK_WOOD_SLAB;
    public static Blocks SPRUCE_WOOD_SLAB;
    public static Blocks BIRCH_WOOD_SLAB;
    public static Blocks JUNGLE_WOOD_SLAB;
    public static Blocks ACACIA_WOOD_SLAB;
    public static Blocks DARK_OAK_WOOD_SLAB;
    public static Blocks UPPER_STONE_SLAB;
    public static Blocks UPPER_SANDSTONE_SLAB;
    public static Blocks UPPER_STONE_WOODEN_SLAB;
    public static Blocks UPPER_COBBLESTONE_SLAB;
    public static Blocks UPPER_BRICKS_SLAB;
    public static Blocks UPPER_STONE_BRICK_SLAB;
    public static Blocks UPPER_NETHER_BRICK_SLAB;
    public static Blocks UPPER_QUARTZ_SLAB;
    public static Blocks UPPER_RED_SANDSTONE_SLAB;
    public static Blocks UPPER_PURPUR_SLAB;
    public static Blocks UPPER_OAK_WOOD_SLAB;
    public static Blocks UPPER_SPRUCE_WOOD_SLAB;
    public static Blocks UPPER_BIRCH_WOOD_SLAB;
    public static Blocks UPPER_JUNGLE_WOOD_SLAB;
    public static Blocks UPPER_ACACIA_WOOD_SLAB;
    public static Blocks UPPER_DARK_OAK_WOOD_SLAB;
    public static Blocks DOUBLE_STONE_SLAB;
    public static Blocks DOUBLE_SANDSTONE_SLAB;
    public static Blocks DOUBLE_STONE_WOODEN_SLAB;
    public static Blocks DOUBLE_COBBLESTONE_SLAB;
    public static Blocks DOUBLE_BRICKS_SLAB;
    public static Blocks DOUBLE_STONE_BRICK_SLAB;
    public static Blocks DOUBLE_NETHER_BRICK_SLAB;
    public static Blocks DOUBLE_QUARTZ_SLAB;
    public static Blocks DOUBLE_RED_SANDSTONE_SLAB;
    public static Blocks DOUBLE_PURPUR_SLAB;
    public static Blocks DOUBLE_OAK_WOOD_SLAB;
    public static Blocks DOUBLE_SPRUCE_WOOD_SLAB;
    public static Blocks DOUBLE_BIRCH_WOOD_SLAB;
    public static Blocks DOUBLE_JUNGLE_WOOD_SLAB;
    public static Blocks DOUBLE_ACACIA_WOOD_SLAB;
    public static Blocks DOUBLE_DARK_OAK_WOOD_SLAB;
    public static Blocks COBBLESTONE_STAIRS_FACING_EAST;
    public static Blocks COBBLESTONE_STAIRS_FACING_WEST;
    public static Blocks COBBLESTONE_STAIRS_FACING_SOUTH;
    public static Blocks COBBLESTONE_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_NORTH;
    public static Blocks BRICK_STAIRS_FACING_EAST;
    public static Blocks BRICK_STAIRS_FACING_WEST;
    public static Blocks BRICK_STAIRS_FACING_SOUTH;
    public static Blocks BRICK_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_BRICK_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_BRICK_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_BRICK_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_BRICK_STAIRS_FACING_NORTH;
    public static Blocks NETHER_BRICK_STAIRS_FACING_EAST;
    public static Blocks NETHER_BRICK_STAIRS_FACING_WEST;
    public static Blocks NETHER_BRICK_STAIRS_FACING_SOUTH;
    public static Blocks NETHER_BRICK_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_NORTH;
    public static Blocks STONE_BRICK_STAIRS_FACING_EAST;
    public static Blocks STONE_BRICK_STAIRS_FACING_WEST;
    public static Blocks STONE_BRICK_STAIRS_FACING_SOUTH;
    public static Blocks STONE_BRICK_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_NORTH;
    public static Blocks PURPUR_STAIRS_FACING_EAST;
    public static Blocks PURPUR_STAIRS_FACING_WEST;
    public static Blocks PURPUR_STAIRS_FACING_SOUTH;
    public static Blocks PURPUR_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_PURPUR_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_PURPUR_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_PURPUR_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_PURPUR_STAIRS_FACING_NORTH;
    public static Blocks QUARTZ_STAIRS_FACING_EAST;
    public static Blocks QUARTZ_STAIRS_FACING_WEST;
    public static Blocks QUARTZ_STAIRS_FACING_SOUTH;
    public static Blocks QUARTZ_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_QUARTZ_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_QUARTZ_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_QUARTZ_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_QUARTZ_STAIRS_FACING_NORTH;
    public static Blocks SANDSTONE_STAIRS_FACING_EAST;
    public static Blocks SANDSTONE_STAIRS_FACING_WEST;
    public static Blocks SANDSTONE_STAIRS_FACING_SOUTH;
    public static Blocks SANDSTONE_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_NORTH;
    public static Blocks RED_SANDSTONE_STAIRS_FACING_EAST;
    public static Blocks RED_SANDSTONE_STAIRS_FACING_WEST;
    public static Blocks RED_SANDSTONE_STAIRS_FACING_SOUTH;
    public static Blocks RED_SANDSTONE_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_NORTH;
    public static Blocks OAK_WOOD_STAIRS_FACING_EAST;
    public static Blocks OAK_WOOD_STAIRS_FACING_WEST;
    public static Blocks OAK_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks OAK_WOOD_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_NORTH;
    public static Blocks SPRUCE_WOOD_STAIRS_FACING_EAST;
    public static Blocks SPRUCE_WOOD_STAIRS_FACING_WEST;
    public static Blocks SPRUCE_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks SPRUCE_WOOD_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_NORTH;
    public static Blocks BIRCH_WOOD_STAIRS_FACING_EAST;
    public static Blocks BIRCH_WOOD_STAIRS_FACING_WEST;
    public static Blocks BIRCH_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks BIRCH_WOOD_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_NORTH;
    public static Blocks JUNGLE_WOOD_STAIRS_FACING_EAST;
    public static Blocks JUNGLE_WOOD_STAIRS_FACING_WEST;
    public static Blocks JUNGLE_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks JUNGLE_WOOD_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_NORTH;
    public static Blocks ACACIA_WOOD_STAIRS_FACING_EAST;
    public static Blocks ACACIA_WOOD_STAIRS_FACING_WEST;
    public static Blocks ACACIA_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks ACACIA_WOOD_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_NORTH;
    public static Blocks DARK_OAK_WOOD_STAIRS_FACING_EAST;
    public static Blocks DARK_OAK_WOOD_STAIRS_FACING_WEST;
    public static Blocks DARK_OAK_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks DARK_OAK_WOOD_STAIRS_FACING_NORTH;
    public static Blocks UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_EAST;
    public static Blocks UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_WEST;
    public static Blocks UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_SOUTH;
    public static Blocks UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_NORTH;
    public static Blocks COBWEB;
    public static Blocks TNT;
    public static Blocks BOOKSHELF;
    public static Blocks OBSIDIAN;
    public static Blocks GLOWING_OBSIDIAN;
    public static Blocks TORCH_FACING_EAST;
    public static Blocks TORCH_FACING_WEST;
    public static Blocks TORCH_FACING_SOUTH;
    public static Blocks TORCH_FACING_NORTH;
    public static Blocks TORCH_FACING_UP;
    public static Blocks REDSTONE_TORCH_FACING_EAST;
    public static Blocks REDSTONE_TORCH_FACING_WEST;
    public static Blocks REDSTONE_TORCH_FACING_SOUTH;
    public static Blocks REDSTONE_TORCH_FACING_NORTH;
    public static Blocks REDSTONE_TORCH_FACING_UP;
    public static Blocks INACTIVE_REDSTONE_TORCH_FACING_EAST;
    public static Blocks INACTIVE_REDSTONE_TORCH_FACING_WEST;
    public static Blocks INACTIVE_REDSTONE_TORCH_FACING_SOUTH;
    public static Blocks INACTIVE_REDSTONE_TORCH_FACING_NORTH;
    public static Blocks INACTIVE_REDSTONE_TORCH_FACING_UP;
    public static Blocks FIRE_0;
    public static Blocks MONSTER_SPAWNER;
    public static Blocks CHEST_FACING_NORTH;
    public static Blocks CHEST_FACING_SOUTH;
    public static Blocks CHEST_FACING_WEST;
    public static Blocks CHEST_FACING_EAST;
    public static Blocks TRAPPED_CHEST_FACING_NORTH;
    public static Blocks TRAPPED_CHEST_FACING_SOUTH;
    public static Blocks TRAPPED_CHEST_FACING_WEST;
    public static Blocks TRAPPED_CHEST_FACING_EAST;
    public static Blocks ENDER_CHEST_FACING_NORTH;
    public static Blocks ENDER_CHEST_FACING_SOUTH;
    public static Blocks ENDER_CHEST_FACING_WEST;
    public static Blocks ENDER_CHEST_FACING_EAST;
    public static Blocks REDSTONE_WIRE_0;
    public static Blocks REDSTONE_WIRE_1;
    public static Blocks REDSTONE_WIRE_2;
    public static Blocks REDSTONE_WIRE_3;
    public static Blocks REDSTONE_WIRE_4;
    public static Blocks REDSTONE_WIRE_5;
    public static Blocks REDSTONE_WIRE_6;
    public static Blocks REDSTONE_WIRE_7;
    public static Blocks REDSTONE_WIRE_8;
    public static Blocks REDSTONE_WIRE_9;
    public static Blocks REDSTONE_WIRE_10;
    public static Blocks REDSTONE_WIRE_11;
    public static Blocks REDSTONE_WIRE_12;
    public static Blocks REDSTONE_WIRE_13;
    public static Blocks REDSTONE_WIRE_14;
    public static Blocks REDSTONE_WIRE_15;
    public static Blocks CRAFTING_TABLE;
    public static Blocks SEEDS_0;
    public static Blocks SEEDS_1;
    public static Blocks SEEDS_2;
    public static Blocks SEEDS_3;
    public static Blocks SEEDS_4;
    public static Blocks SEEDS_5;
    public static Blocks SEEDS_6;
    public static Blocks SEEDS_7;
    public static Blocks BEETROOT_0;
    public static Blocks BEETROOT_1;
    public static Blocks BEETROOT_2;
    public static Blocks BEETROOT_3;
    public static Blocks CARROT_0;
    public static Blocks CARROT_1;
    public static Blocks CARROT_2;
    public static Blocks CARROT_3;
    public static Blocks CARROT_4;
    public static Blocks CARROT_5;
    public static Blocks CARROT_6;
    public static Blocks CARROT_7;
    public static Blocks POTATO_0;
    public static Blocks POTATO_1;
    public static Blocks POTATO_2;
    public static Blocks POTATO_3;
    public static Blocks POTATO_4;
    public static Blocks POTATO_5;
    public static Blocks POTATO_6;
    public static Blocks POTATO_7;
    public static Blocks MELON_STEM_0;
    public static Blocks MELON_STEM_1;
    public static Blocks MELON_STEM_2;
    public static Blocks MELON_STEM_3;
    public static Blocks MELON_STEM_4;
    public static Blocks MELON_STEM_5;
    public static Blocks MELON_STEM_6;
    public static Blocks MELON_STEM_7;
    public static Blocks PUMPKIN_STEM_0;
    public static Blocks PUMPKIN_STEM_1;
    public static Blocks PUMPKIN_STEM_2;
    public static Blocks PUMPKIN_STEM_3;
    public static Blocks PUMPKIN_STEM_4;
    public static Blocks PUMPKIN_STEM_5;
    public static Blocks PUMPKIN_STEM_6;
    public static Blocks PUMPKIN_STEM_7;
    public static Blocks SUGAR_CANES_0;
    public static Blocks SUGAR_CANES_1;
    public static Blocks SUGAR_CANES_2;
    public static Blocks SUGAR_CANES_3;
    public static Blocks SUGAR_CANES_4;
    public static Blocks SUGAR_CANES_5;
    public static Blocks SUGAR_CANES_6;
    public static Blocks SUGAR_CANES_7;
    public static Blocks SUGAR_CANES_8;
    public static Blocks SUGAR_CANES_9;
    public static Blocks SUGAR_CANES_10;
    public static Blocks SUGAR_CANES_11;
    public static Blocks SUGAR_CANES_12;
    public static Blocks SUGAR_CANES_13;
    public static Blocks SUGAR_CANES_14;
    public static Blocks SUGAR_CANES_15;
    public static Blocks NETHER_WART_0;
    public static Blocks NETHER_WART_1;
    public static Blocks NETHER_WART_2;
    public static Blocks NETHER_WART_3;
    public static Blocks FURNACE_FACING_NORTH;
    public static Blocks FURNACE_FACING_SOUTH;
    public static Blocks FURNACE_FACING_WEST;
    public static Blocks FURNACE_FACING_EAST;
    public static Blocks BURNING_FURNACE_FACING_NORTH;
    public static Blocks BURNING_FURNACE_FACING_SOUTH;
    public static Blocks BURNING_FURNACE_FACING_WEST;
    public static Blocks BURNING_FURNACE_FACING_EAST;
    public static Blocks STONECUTTER;
    public static Blocks SIGN_FACING_SOUTH;
    public static Blocks SIGN_FACING_SOUTH_SOUTHWEST;
    public static Blocks SIGN_FACING_SOUTHWEST;
    public static Blocks SIGN_FACING_WEST_WESTSOUTH;
    public static Blocks SIGN_FACING_WEST;
    public static Blocks SIGN_FACING_WEST_NORTHWEST;
    public static Blocks SIGN_FACING_NORTHWEST;
    public static Blocks SIGN_FACING_NORTH_NORTHWEST;
    public static Blocks SIGN_FACING_NORTH;
    public static Blocks SIGN_FACING_NORTH_NORTHEAST;
    public static Blocks SIGN_FACING_NORTHEAST;
    public static Blocks SIGN_FACING_EAST_NORTHEAST;
    public static Blocks SIGN_FACING_EAST;
    public static Blocks SIGN_FACING_EAST_SOUTHEAST;
    public static Blocks SIGN_FACING_SOUTHEAST;
    public static Blocks SIGN_FACING_SOUTH_SOUTHEAST;
    public static Blocks WALL_SIGN_FACING_NORTH;
    public static Blocks WALL_SIGN_FACING_SOUTH;
    public static Blocks WALL_SIGN_FACING_WEST;
    public static Blocks WALL_SIGN_FACING_EAST;
    public static Blocks LOWER_OAK_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_OAK_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OAK_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_OAK_WOOD_DOOR_FACING_NORTH;
    public static Blocks LOWER_OPENED_OAK_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_OPENED_OAK_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OPENED_OAK_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_OPENED_OAK_WOOD_DOOR_FACING_NORTH;
    public static Blocks UPPER_OAK_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_OAK_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks UPPER_POWERED_OAK_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_POWERED_OAK_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks LOWER_SPRUCE_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_SPRUCE_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_SPRUCE_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_SPRUCE_WOOD_DOOR_FACING_NORTH;
    public static Blocks LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_NORTH;
    public static Blocks UPPER_SPRUCE_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_SPRUCE_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks UPPER_POWERED_SPRUCE_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_POWERED_SPRUCE_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks LOWER_BIRCH_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_BIRCH_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_BIRCH_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_BIRCH_WOOD_DOOR_FACING_NORTH;
    public static Blocks LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_NORTH;
    public static Blocks UPPER_BIRCH_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_BIRCH_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks UPPER_POWERED_BIRCH_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_POWERED_BIRCH_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks LOWER_JUNGLE_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_JUNGLE_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_JUNGLE_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_JUNGLE_WOOD_DOOR_FACING_NORTH;
    public static Blocks LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_NORTH;
    public static Blocks UPPER_JUNGLE_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_JUNGLE_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks UPPER_POWERED_JUNGLE_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_POWERED_JUNGLE_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks LOWER_ACACIA_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_ACACIA_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_ACACIA_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_ACACIA_WOOD_DOOR_FACING_NORTH;
    public static Blocks LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_NORTH;
    public static Blocks UPPER_ACACIA_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_ACACIA_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks UPPER_POWERED_ACACIA_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_POWERED_ACACIA_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks LOWER_DARK_OAK_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_DARK_OAK_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_DARK_OAK_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_DARK_OAK_WOOD_DOOR_FACING_NORTH;
    public static Blocks LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_EAST;
    public static Blocks LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_WEST;
    public static Blocks LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_NORTH;
    public static Blocks UPPER_DARK_OAK_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_DARK_OAK_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks UPPER_POWERED_DARK_OAK_WOOD_DOOR_HINGE_LEFT;
    public static Blocks UPPER_POWERED_DARK_OAK_WOOD_DOOR_HINGE_RIGHT;
    public static Blocks LOWER_IRON_DOOR_FACING_EAST;
    public static Blocks LOWER_IRON_DOOR_FACING_SOUTH;
    public static Blocks LOWER_IRON_DOOR_FACING_WEST;
    public static Blocks LOWER_IRON_DOOR_FACING_NORTH;
    public static Blocks LOWER_OPENED_IRON_DOOR_FACING_EAST;
    public static Blocks LOWER_OPENED_IRON_DOOR_FACING_SOUTH;
    public static Blocks LOWER_OPENED_IRON_DOOR_FACING_WEST;
    public static Blocks LOWER_OPENED_IRON_DOOR_FACING_NORTH;
    public static Blocks UPPER_IRON_DOOR_HINGE_LEFT;
    public static Blocks UPPER_IRON_DOOR_HINGE_RIGHT;
    public static Blocks UPPER_POWERED_IRON_DOOR_HINGE_LEFT;
    public static Blocks UPPER_POWERED_IRON_DOOR_HINGE_RIGHT;
    public static Blocks LADDER_FACING_NORTH;
    public static Blocks LADDER_FACING_SOUTH;
    public static Blocks LADDER_FACING_WEST;
    public static Blocks LADDER_FACING_EAST;
    public static Blocks LEVER_BOTTOM_POINTING_EAST;
    public static Blocks LEVER_FACING_EAST;
    public static Blocks LEVER_FACING_WEST;
    public static Blocks LEVER_FACING_SOUTH;
    public static Blocks LEVER_FACING_NORTH;
    public static Blocks LEVER_TOP_POINTING_SOUTH;
    public static Blocks LEVER_TOP_POINTING_EAST;
    public static Blocks LEVER_BOTTOM_POINTING_SOUTH;
    public static Blocks POWERED_LEVER_BOTTOM_POINTING_EAST;
    public static Blocks POWERED_LEVER_FACING_EAST;
    public static Blocks POWERED_LEVER_FACING_WEST;
    public static Blocks POWERED_LEVER_FACING_SOUTH;
    public static Blocks POWERED_LEVER_FACING_NORTH;
    public static Blocks POWERED_LEVER_TOP_POINTING_SOUTH;
    public static Blocks POWERED_LEVER_TOP_POINTING_EAST;
    public static Blocks POWERED_LEVER_BOTTOM_POINTING_SOUTH;
    public static Blocks STONE_PRESSURE_PLATE;
    public static Blocks POWERED_STONE_PRESSURE_PLATE;
    public static Blocks WOODEN_PRESSURE_PLATE;
    public static Blocks POWERED_WOODEN_PRESSURE_PLATE;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_0;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_1;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_2;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_3;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_4;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_5;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_6;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_7;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_8;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_9;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_10;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_11;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_12;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_13;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_14;
    public static Blocks HEAVY_WEIGHTED_PRESSURE_PLATE_15;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_0;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_1;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_2;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_3;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_4;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_5;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_6;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_7;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_8;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_9;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_10;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_11;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_12;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_13;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_14;
    public static Blocks LIGHT_WEIGHTED_PRESSURE_PLATE_15;
    public static Blocks STONE_BUTTON_FACING_DOWN;
    public static Blocks STONE_BUTTON_FACING_EAST;
    public static Blocks STONE_BUTTON_FACING_WEST;
    public static Blocks STONE_BUTTON_FACING_SOUTH;
    public static Blocks STONE_BUTTON_FACING_NORTH;
    public static Blocks STONE_BUTTON_FACING_UP;
    public static Blocks POWERED_STONE_BUTTON_FACING_DOWN;
    public static Blocks POWERED_STONE_BUTTON_FACING_EAST;
    public static Blocks POWERED_STONE_BUTTON_FACING_WEST;
    public static Blocks POWERED_STONE_BUTTON_FACING_SOUTH;
    public static Blocks POWERED_STONE_BUTTON_FACING_NORTH;
    public static Blocks POWERED_STONE_BUTTON_FACING_UP;
    public static Blocks WOODEN_BUTTON_FACING_DOWN;
    public static Blocks WOODEN_BUTTON_FACING_EAST;
    public static Blocks WOODEN_BUTTON_FACING_WEST;
    public static Blocks WOODEN_BUTTON_FACING_SOUTH;
    public static Blocks WOODEN_BUTTON_FACING_NORTH;
    public static Blocks WOODEN_BUTTON_FACING_UP;
    public static Blocks POWERED_WOODEN_BUTTON_FACING_DOWN;
    public static Blocks POWERED_WOODEN_BUTTON_FACING_EAST;
    public static Blocks POWERED_WOODEN_BUTTON_FACING_WEST;
    public static Blocks POWERED_WOODEN_BUTTON_FACING_SOUTH;
    public static Blocks POWERED_WOODEN_BUTTON_FACING_NORTH;
    public static Blocks POWERED_WOODEN_BUTTON_FACING_UP;
    public static Blocks SNOW_LAYER_0;
    public static Blocks SNOW_LAYER_1;
    public static Blocks SNOW_LAYER_2;
    public static Blocks SNOW_LAYER_3;
    public static Blocks SNOW_LAYER_4;
    public static Blocks SNOW_LAYER_5;
    public static Blocks SNOW_LAYER_6;
    public static Blocks SNOW_LAYER_7;
    public static Blocks SNOW;
    public static Blocks ICE;
    public static Blocks PACKED_ICE;
    public static Blocks FROSTED_ICE_0;
    public static Blocks FROSTED_ICE_1;
    public static Blocks FROSTED_ICE_2;
    public static Blocks FROSTED_ICE_3;
    public static Blocks CACTUS_0;
    public static Blocks CACTUS_1;
    public static Blocks CACTUS_2;
    public static Blocks CACTUS_3;
    public static Blocks CACTUS_4;
    public static Blocks CACTUS_5;
    public static Blocks CACTUS_6;
    public static Blocks CACTUS_7;
    public static Blocks CACTUS_8;
    public static Blocks CACTUS_9;
    public static Blocks CACTUS_10;
    public static Blocks CACTUS_11;
    public static Blocks CACTUS_12;
    public static Blocks CACTUS_13;
    public static Blocks CACTUS_14;
    public static Blocks CACTUS_15;
    public static Blocks CLAY;
    public static Blocks JUKEBOX;
    public static Blocks HARDENED_CLAY;
    public static Blocks WHITE_STAINED_CLAY;
    public static Blocks ORANGE_STAINED_CLAY;
    public static Blocks MAGENTA_STAINED_CLAY;
    public static Blocks LIGHT_BLUE_STAINED_CLAY;
    public static Blocks YELLOW_STAINED_CLAY;
    public static Blocks LIME_STAINED_CLAY;
    public static Blocks PINK_STAINED_CLAY;
    public static Blocks GRAY_STAINED_CLAY;
    public static Blocks LIGHT_GRAY_STAINED_CLAY;
    public static Blocks CYAN_STAINED_CLAY;
    public static Blocks PURPLE_STAINED_CLAY;
    public static Blocks BLUE_STAINED_CLAY;
    public static Blocks BROWN_STAINED_CLAY;
    public static Blocks GREEN_STAINED_CLAY;
    public static Blocks RED_STAINED_CLAY;
    public static Blocks BLACK_STAINED_CLAY;
    public static Blocks PUMPKIN_FACING_SOUTH;
    public static Blocks PUMPKIN_FACING_WEST;
    public static Blocks PUMPKIN_FACING_NORTH;
    public static Blocks PUMPKIN_FACING_EAST;
    public static Blocks FACELESS_PUMPKIN_FACING_SOUTH;
    public static Blocks FACELESS_PUMPKIN_FACING_WEST;
    public static Blocks FACELESS_PUMPKIN_FACING_NORTH;
    public static Blocks FACELESS_PUMPKIN_FACING_EAST;
    public static Blocks JACK_O_LANTERN_FACING_SOUTH;
    public static Blocks JACK_O_LANTERN_FACING_WEST;
    public static Blocks JACK_O_LANTERN_FACING_NORTH;
    public static Blocks JACK_O_LANTERN_FACING_EAST;
    public static Blocks FACELESS_JACK_O_LANTERN_FACING_SOUTH;
    public static Blocks FACELESS_JACK_O_LANTERN_FACING_WEST;
    public static Blocks FACELESS_JACK_O_LANTERN_FACING_NORTH;
    public static Blocks FACELESS_JACK_O_LANTERN_FACING_EAST;
    public static Blocks OAK_WOOD_FENCE;
    public static Blocks SPRUCE_WOOD_FENCE;
    public static Blocks BIRCH_WOOD_FENCE;
    public static Blocks JUNGLE_WOOD_FENCE;
    public static Blocks ACACIA_WOOD_FENCE;
    public static Blocks DARK_OAK_WOOD_FENCE;
    public static Blocks NETHER_BRICK_FENCE;
    public static Blocks NETHERRACK;
    public static Blocks SOUL_SAND;
    public static Blocks GLOWSTONE;
    public static Blocks NETHER_BRICK;
    public static Blocks RED_NETHER_BRICK;
    public static Blocks NETHER_PORTAL_EAST_WEST;
    public static Blocks NETHER_PORTAL_NORTH_SOUTH;
    public static Blocks CAKE_0;
    public static Blocks CAKE_1;
    public static Blocks CAKE_2;
    public static Blocks CAKE_3;
    public static Blocks CAKE_4;
    public static Blocks CAKE_5;
    public static Blocks CAKE_6;
    public static Blocks REPEATER_FACING_NORTH_1_DELAY;
    public static Blocks REPEATER_FACING_EAST_1_DELAY;
    public static Blocks REPEATER_FACING_SOUTH_1_DELAY;
    public static Blocks REPEATER_FACING_WEST_1_DELAY;
    public static Blocks REPEATER_FACING_NORTH_2_DELAY;
    public static Blocks REPEATER_FACING_EAST_2_DELAY;
    public static Blocks REPEATER_FACING_SOUTH_2_DELAY;
    public static Blocks REPEATER_FACING_WEST_2_DELAY;
    public static Blocks REPEATER_FACING_NORTH_3_DELAY;
    public static Blocks REPEATER_FACING_EAST_3_DELAY;
    public static Blocks REPEATER_FACING_SOUTH_3_DELAY;
    public static Blocks REPEATER_FACING_WEST_3_DELAY;
    public static Blocks REPEATER_FACING_NORTH_4_DELAY;
    public static Blocks REPEATER_FACING_EAST_4_DELAY;
    public static Blocks REPEATER_FACING_SOUTH_4_DELAY;
    public static Blocks REPEATER_FACING_WEST_4_DELAY;
    public static Blocks POWERED_REPEATER_FACING_NORTH_1_DELAY;
    public static Blocks POWERED_REPEATER_FACING_EAST_1_DELAY;
    public static Blocks POWERED_REPEATER_FACING_SOUTH_1_DELAY;
    public static Blocks POWERED_REPEATER_FACING_WEST_1_DELAY;
    public static Blocks POWERED_REPEATER_FACING_NORTH_2_DELAY;
    public static Blocks POWERED_REPEATER_FACING_EAST_2_DELAY;
    public static Blocks POWERED_REPEATER_FACING_SOUTH_2_DELAY;
    public static Blocks POWERED_REPEATER_FACING_WEST_2_DELAY;
    public static Blocks POWERED_REPEATER_FACING_NORTH_3_DELAY;
    public static Blocks POWERED_REPEATER_FACING_EAST_3_DELAY;
    public static Blocks POWERED_REPEATER_FACING_SOUTH_3_DELAY;
    public static Blocks POWERED_REPEATER_FACING_WEST_3_DELAY;
    public static Blocks POWERED_REPEATER_FACING_NORTH_4_DELAY;
    public static Blocks POWERED_REPEATER_FACING_EAST_4_DELAY;
    public static Blocks POWERED_REPEATER_FACING_SOUTH_4_DELAY;
    public static Blocks POWERED_REPEATER_FACING_WEST_4_DELAY;
    public static Blocks WOODEN_TRAPDOOR_SOUTH_SIDE;
    public static Blocks WOODEN_TRAPDOOR_NORTH_SIDE;
    public static Blocks WOODEN_TRAPDOOR_EAST_SIDE;
    public static Blocks WOODEN_TRAPDOOR_WEST_SIDE;
    public static Blocks OPENED_WOODEN_TRAPDOOR_SOUTH_SIDE;
    public static Blocks OPENED_WOODEN_TRAPDOOR_NORTH_SIDE;
    public static Blocks OPENED_WOODEN_TRAPDOOR_EAST_SIDE;
    public static Blocks OPENED_WOODEN_TRAPDOOR_WEST_SIDE;
    public static Blocks TOP_WOODEN_TRAPDOOR_SOUTH_SIDE;
    public static Blocks TOP_WOODEN_TRAPDOOR_NORTH_SIDE;
    public static Blocks TOP_WOODEN_TRAPDOOR_EAST_SIDE;
    public static Blocks TOP_WOODEN_TRAPDOOR_WEST_SIDE;
    public static Blocks OPENED_TOP_WOODEN_TRAPDOOR_SOUTH_SIDE;
    public static Blocks OPENED_TOP_WOODEN_TRAPDOOR_NORTH_SIDE;
    public static Blocks OPENED_TOP_WOODEN_TRAPDOOR_EAST_SIDE;
    public static Blocks OPENED_TOP_WOODEN_TRAPDOOR_WEST_SIDE;
    public static Blocks IRON_TRAPDOOR_SOUTH_SIDE;
    public static Blocks IRON_TRAPDOOR_NORTH_SIDE;
    public static Blocks IRON_TRAPDOOR_EAST_SIDE;
    public static Blocks IRON_TRAPDOOR_WEST_SIDE;
    public static Blocks OPENED_IRON_TRAPDOOR_SOUTH_SIDE;
    public static Blocks OPENED_IRON_TRAPDOOR_NORTH_SIDE;
    public static Blocks OPENED_IRON_TRAPDOOR_EAST_SIDE;
    public static Blocks OPENED_IRON_TRAPDOOR_WEST_SIDE;
    public static Blocks TOP_IRON_TRAPDOOR_SOUTH_SIDE;
    public static Blocks TOP_IRON_TRAPDOOR_NORTH_SIDE;
    public static Blocks TOP_IRON_TRAPDOOR_EAST_SIDE;
    public static Blocks TOP_IRON_TRAPDOOR_WEST_SIDE;
    public static Blocks OPENED_TOP_IRON_TRAPDOOR_SOUTH_SIDE;
    public static Blocks OPENED_TOP_IRON_TRAPDOOR_NORTH_SIDE;
    public static Blocks OPENED_TOP_IRON_TRAPDOOR_EAST_SIDE;
    public static Blocks OPENED_TOP_IRON_TRAPDOOR_WEST_SIDE;
    public static Blocks STONE_MONSTER_EGG;
    public static Blocks COBBLESTONE_MONSTER_EGG;
    public static Blocks STONE_BRICK_MONSTER_EGG;
    public static Blocks MOSSY_STONE_BRICK_MONSTER_EGG;
    public static Blocks CRACKED_STONE_BRICK_MONSTER_EGG;
    public static Blocks CHISELED_STONE_BRICK_MONSTER_EGG;
    public static Blocks BROWN_MUSHROOM_PORES_EVERYWHERE;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_WEST_NORTH;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_NORTH;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_NORTH_EAST;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_WEST;
    public static Blocks BROWN_MUSHROOM_CAP_TOP;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_EAST;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_SOUTH_WEST;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_SOUTH;
    public static Blocks BROWN_MUSHROOM_CAP_TOP_EAST_SOUTH;
    public static Blocks BROWN_MUSHROOM_STEM_EVERY_SIDE;
    public static Blocks BROWN_MUSHROOM_CAPS_EVERYWHERE;
    public static Blocks BROWN_MUSHROOM_STEMS_EVERYWHERE;
    public static Blocks RED_MUSHROOM_PORES_EVERYWHERE;
    public static Blocks RED_MUSHROOM_CAP_TOP_WEST_NORTH;
    public static Blocks RED_MUSHROOM_CAP_TOP_NORTH;
    public static Blocks RED_MUSHROOM_CAP_TOP_NORTH_EAST;
    public static Blocks RED_MUSHROOM_CAP_TOP_WEST;
    public static Blocks RED_MUSHROOM_CAP_TOP;
    public static Blocks RED_MUSHROOM_CAP_TOP_EAST;
    public static Blocks RED_MUSHROOM_CAP_TOP_SOUTH_WEST;
    public static Blocks RED_MUSHROOM_CAP_TOP_SOUTH;
    public static Blocks RED_MUSHROOM_CAP_TOP_EAST_SOUTH;
    public static Blocks RED_MUSHROOM_STEM_EVERY_SIDE;
    public static Blocks RED_MUSHROOM_CAPS_EVERYWHERE;
    public static Blocks RED_MUSHROOM_STEMS_EVERYWHERE;
    public static Blocks IRON_BARS;
    public static Blocks MELON;
    public static Blocks VINES_SOUTH;
    public static Blocks VINES_WEST;
    public static Blocks VINES_SOUTH_WEST;
    public static Blocks VINES_NORTH;
    public static Blocks VINES_NORTH_SOUTH;
    public static Blocks VINES_NORTH_WEST;
    public static Blocks VINES_NORTH_SOUTH_WEST;
    public static Blocks VINES_EAST;
    public static Blocks VINES_SOUTH_EAST;
    public static Blocks VINES_WEST_EAST;
    public static Blocks VINES_SOUTH_WEST_EAST;
    public static Blocks VINES_NORTH_EAST;
    public static Blocks VINES_NORTH_SOUTH_EAST;
    public static Blocks VINES_NORTH_WEST_EAST;
    public static Blocks VINES_EVERY_SIDE;
    public static Blocks OAK_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks OAK_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks OAK_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks OAK_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks SPRUCE_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks SPRUCE_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks SPRUCE_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks SPRUCE_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks BIRCH_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks BIRCH_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks BIRCH_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks BIRCH_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks JUNGLE_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks JUNGLE_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks JUNGLE_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks JUNGLE_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks ACACIA_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks ACACIA_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks ACACIA_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks ACACIA_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks DARK_OAK_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks DARK_OAK_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks DARK_OAK_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks DARK_OAK_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks OPENED_OAK_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks OPENED_OAK_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks OPENED_OAK_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks OPENED_OAK_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks OPENED_BIRCH_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks OPENED_BIRCH_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks OPENED_BIRCH_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks OPENED_BIRCH_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks OPENED_ACACIA_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks OPENED_ACACIA_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks OPENED_ACACIA_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks OPENED_ACACIA_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_SOUTH;
    public static Blocks OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_WEST;
    public static Blocks OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_NORTH;
    public static Blocks OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_EAST;
    public static Blocks ENCHANTMENT_TABLE;
    public static Blocks BREWING_STAND_EMPTY;
    public static Blocks BREWING_STAND_BOTTLE_1;
    public static Blocks BREWING_STAND_BOTTLE_2;
    public static Blocks BREWING_STAND_BOTTLE_1_2;
    public static Blocks BREWING_STAND_BOTTLE_3;
    public static Blocks BREWING_STAND_BOTTLE_1_3;
    public static Blocks BREWING_STAND_BOTTLE_2_3;
    public static Blocks BREWING_STAND_FULL;
    public static Blocks CAULDRON_EMPTY;
    public static Blocks CAULDRON_ONE_SIXTH_FILLED;
    public static Blocks CAULDRON_ONE_THIRD_FILLED;
    public static Blocks CAULDRON_THREE_SIXTH_FILLED;
    public static Blocks CAULDRON_TWO_THIRD_FILLED;
    public static Blocks CAULDRON_FIVE_SIXTH_FILLED;
    public static Blocks CAULDRON_FILLED;
    public static Blocks END_PORTAL_FRAME_SOUTH;
    public static Blocks END_PORTAL_FRAME_WEST;
    public static Blocks END_PORTAL_FRAME_NORTH;
    public static Blocks END_PORTAL_FRAME_EAST;
    public static Blocks ACTIVE_END_PORTAL_FRAME_SOUTH;
    public static Blocks ACTIVE_END_PORTAL_FRAME_WEST;
    public static Blocks ACTIVE_END_PORTAL_FRAME_NORTH;
    public static Blocks ACTIVE_END_PORTAL_FRAME_EAST;
    public static Blocks END_STONE;
    public static Blocks END_STONE_BRICKS;
    public static Blocks END_PORTAL;
    public static Blocks END_GATEWAY;
    public static Blocks DRAGON_EGG;
    public static Blocks REDSTONE_LAMP;
    public static Blocks ACTIVE_REDSTONE_LAMP;
    public static Blocks COCOA_NORTH_0;
    public static Blocks COCOA_EAST_0;
    public static Blocks COCOA_SOUTH_0;
    public static Blocks COCOA_WEST_0;
    public static Blocks COCOA_NORTH_1;
    public static Blocks COCOA_EAST_1;
    public static Blocks COCOA_SOUTH_1;
    public static Blocks COCOA_WEST_1;
    public static Blocks COCOA_NORTH_2;
    public static Blocks COCOA_EAST_2;
    public static Blocks COCOA_SOUTH_2;
    public static Blocks COCOA_WEST_2;
    public static Blocks TRIPWIRE_HOOK_FACING_SOUTH;
    public static Blocks TRIPWIRE_HOOK_FACING_WEST;
    public static Blocks TRIPWIRE_HOOK_FACING_NORTH;
    public static Blocks TRIPWIRE_HOOK_FACING_EAST;
    public static Blocks CONNECTED_TRIPWIRE_HOOK_FACING_SOUTH;
    public static Blocks CONNECTED_TRIPWIRE_HOOK_FACING_WEST;
    public static Blocks CONNECTED_TRIPWIRE_HOOK_FACING_NORTH;
    public static Blocks CONNECTED_TRIPWIRE_HOOK_FACING_EAST;
    public static Blocks POWERED_TRIPWIRE_HOOK_FACING_SOUTH;
    public static Blocks POWERED_TRIPWIRE_HOOK_FACING_WEST;
    public static Blocks POWERED_TRIPWIRE_HOOK_FACING_NORTH;
    public static Blocks POWERED_TRIPWIRE_HOOK_FACING_EAST;
    public static Blocks POWERED_TRIPWIRE;
    public static Blocks CONNECTED_TRIPWIRE;
    public static Blocks TRIPWIRE;
    public static Blocks COMMAND_BLOCK_FACING_DOWN;
    public static Blocks COMMAND_BLOCK_FACING_UP;
    public static Blocks COMMAND_BLOCK_FACING_NORTH;
    public static Blocks COMMAND_BLOCK_FACING_SOUTH;
    public static Blocks COMMAND_BLOCK_FACING_WEST;
    public static Blocks COMMAND_BLOCK_FACING_EAST;
    public static Blocks CONDITIONAL_COMMAND_BLOCK_FACING_DOWN;
    public static Blocks CONDITIONAL_COMMAND_BLOCK_FACING_UP;
    public static Blocks CONDITIONAL_COMMAND_BLOCK_FACING_NORTH;
    public static Blocks CONDITIONAL_COMMAND_BLOCK_FACING_SOUTH;
    public static Blocks CONDITIONAL_COMMAND_BLOCK_FACING_WEST;
    public static Blocks CONDITIONAL_COMMAND_BLOCK_FACING_EAST;
    public static Blocks REPEATING_COMMAND_BLOCK_FACING_DOWN;
    public static Blocks REPEATING_COMMAND_BLOCK_FACING_UP;
    public static Blocks REPEATING_COMMAND_BLOCK_FACING_NORTH;
    public static Blocks REPEATING_COMMAND_BLOCK_FACING_SOUTH;
    public static Blocks REPEATING_COMMAND_BLOCK_FACING_WEST;
    public static Blocks REPEATING_COMMAND_BLOCK_FACING_EAST;
    public static Blocks CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_DOWN;
    public static Blocks CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_UP;
    public static Blocks CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_NORTH;
    public static Blocks CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_SOUTH;
    public static Blocks CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_WEST;
    public static Blocks CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_EAST;
    public static Blocks CHAIN_COMMAND_BLOCK_FACING_DOWN;
    public static Blocks CHAIN_COMMAND_BLOCK_FACING_UP;
    public static Blocks CHAIN_COMMAND_BLOCK_FACING_NORTH;
    public static Blocks CHAIN_COMMAND_BLOCK_FACING_SOUTH;
    public static Blocks CHAIN_COMMAND_BLOCK_FACING_WEST;
    public static Blocks CHAIN_COMMAND_BLOCK_FACING_EAST;
    public static Blocks CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_DOWN;
    public static Blocks CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_UP;
    public static Blocks CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_NORTH;
    public static Blocks CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_SOUTH;
    public static Blocks CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_WEST;
    public static Blocks CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_EAST;
    public static Blocks BEACON;
    public static Blocks FLOWER_POT;
    public static Blocks MOB_HEAD_FLOOR;
    public static Blocks MOB_HEAD_FACING_NORTH;
    public static Blocks MOB_HEAD_FACING_SOUTH;
    public static Blocks MOB_HEAD_FACING_EAST;
    public static Blocks MOB_HEAD_FACING_WEST;
    public static Blocks ANVIL_NORTH_SOUTH;
    public static Blocks ANVIL_EAST_WEST;
    public static Blocks ANVIL_SOUTH_NORTH;
    public static Blocks ANVIL_WEST_EAST;
    public static Blocks SLIGHTLY_DAMAGED_ANVIL_NORTH_SOUTH;
    public static Blocks SLIGHTLY_DAMAGED_ANVIL_EAST_WEST;
    public static Blocks SLIGHTLY_DAMAGED_ANVIL_SOUTH_NORTH;
    public static Blocks SLIGHTLY_DAMAGED_ANVIL_WEST_EAST;
    public static Blocks VERY_DAMAGED_ANVIL_NORTH_SOUTH;
    public static Blocks VERY_DAMAGED_ANVIL_EAST_WEST;
    public static Blocks VERY_DAMAGED_ANVIL_SOUTH_NORTH;
    public static Blocks VERY_DAMAGED_ANVIL_WEST_EAST;
    public static Blocks LILY_PAD;
    public static Blocks COMPARATOR_FACING_NORTH;
    public static Blocks COMPARATOR_FACING_EAST;
    public static Blocks COMPARATOR_FACING_SOUTH;
    public static Blocks COMPARATOR_FACING_WEST;
    public static Blocks COMPARATOR_SUBSTRACTION_MODE_FACING_NORTH;
    public static Blocks COMPARATOR_SUBSTRACTION_MODE_FACING_EAST;
    public static Blocks COMPARATOR_SUBSTRACTION_MODE_FACING_SOUTH;
    public static Blocks COMPARATOR_SUBSTRACTION_MODE_FACING_WEST;
    public static Blocks POWERED_COMPARATOR_FACING_NORTH;
    public static Blocks POWERED_COMPARATOR_FACING_EAST;
    public static Blocks POWERED_COMPARATOR_FACING_SOUTH;
    public static Blocks POWERED_COMPARATOR_FACING_WEST;
    public static Blocks POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_NORTH;
    public static Blocks POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_EAST;
    public static Blocks POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_SOUTH;
    public static Blocks POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_WEST;
    public static Blocks DAYLIGHT_SENSOR_0;
    public static Blocks DAYLIGHT_SENSOR_1;
    public static Blocks DAYLIGHT_SENSOR_2;
    public static Blocks DAYLIGHT_SENSOR_3;
    public static Blocks DAYLIGHT_SENSOR_4;
    public static Blocks DAYLIGHT_SENSOR_5;
    public static Blocks DAYLIGHT_SENSOR_6;
    public static Blocks DAYLIGHT_SENSOR_7;
    public static Blocks DAYLIGHT_SENSOR_8;
    public static Blocks DAYLIGHT_SENSOR_9;
    public static Blocks DAYLIGHT_SENSOR_10;
    public static Blocks DAYLIGHT_SENSOR_11;
    public static Blocks DAYLIGHT_SENSOR_12;
    public static Blocks DAYLIGHT_SENSOR_13;
    public static Blocks DAYLIGHT_SENSOR_14;
    public static Blocks DAYLIGHT_SENSOR_15;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_0;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_1;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_2;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_3;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_4;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_5;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_6;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_7;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_8;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_9;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_10;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_11;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_12;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_13;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_14;
    public static Blocks INVERTED_DAYLIGHT_SENSOR_15;
    public static Blocks HOPPER_OUTPUT_FACING_DOWN;
    public static Blocks HOPPER_OUTPUT_FACING_NORTH;
    public static Blocks HOPPER_OUTPUT_FACING_SOUTH;
    public static Blocks HOPPER_OUTPUT_FACING_WEST;
    public static Blocks HOPPER_OUTPUT_FACING_EAST;
    public static Blocks QUARTZ_BLOCK;
    public static Blocks CHISELED_QUARTZ_BLOCK;
    public static Blocks PILLAR_QUARTZ_BLOCK_VERTICAL;
    public static Blocks PILLAR_QUARTZ_BLOCK_NORTH_SOUTH;
    public static Blocks PILLAR_QUARTZ_BLOCK_EAST_WEST;
    public static Blocks SLIME_BLOCK;
    public static Blocks BARRIER;
    public static Blocks PRISMARINE;
    public static Blocks PRISMARINE_BRICKS;
    public static Blocks DARK_PRISMARINE;
    public static Blocks SEA_LANTERN;
    public static Blocks HAY_BALE_VERTICAL;
    public static Blocks HAY_BALE_EAST_WEST;
    public static Blocks HAY_BALE_NORTH_SOUTH;
    public static Blocks BANNER_FACING_SOUTH;
    public static Blocks BANNER_FACING_SOUTH_SOUTHWEST;
    public static Blocks BANNER_FACING_SOUTHWEST;
    public static Blocks BANNER_FACING_WEST_WESTSOUTH;
    public static Blocks BANNER_FACING_WEST;
    public static Blocks BANNER_FACING_WEST_NORTHWEST;
    public static Blocks BANNER_FACING_NORTHWEST;
    public static Blocks BANNER_FACING_NORTH_NORTHWEST;
    public static Blocks BANNER_FACING_NORTH;
    public static Blocks BANNER_FACING_NORTH_NORTHEAST;
    public static Blocks BANNER_FACING_NORTHEAST;
    public static Blocks BANNER_FACING_EAST_NORTHEAST;
    public static Blocks BANNER_FACING_EAST;
    public static Blocks BANNER_FACING_EAST_SOUTHEAST;
    public static Blocks BANNER_FACING_SOUTHEAST;
    public static Blocks BANNER_FACING_SOUTH_SOUTHEAST;
    public static Blocks WALL_BANNER_FACING_NORTH;
    public static Blocks WALL_BANNER_FACING_SOUTH;
    public static Blocks WALL_BANNER_FACING_WEST;
    public static Blocks WALL_BANNER_FACING_EAST;
    public static Blocks ITEM_FRAME_FACING_NORTH;
    public static Blocks ITEM_FRAME_FACING_SOUTH;
    public static Blocks ITEM_FRAME_FACING_WEST;
    public static Blocks ITEM_FRAME_FACING_EAST;
    public static Blocks END_ROD_FACING_DOWN;
    public static Blocks END_ROD_FACING_UP;
    public static Blocks END_ROD_FACING_NORTH;
    public static Blocks END_ROD_FACING_SOUTH;
    public static Blocks END_ROD_FACING_WEST;
    public static Blocks END_ROD_FACING_EAST;
    public static Blocks CHORUS_PLANT;
    public static Blocks CHORUS_FLOWER_0;
    public static Blocks CHORUS_FLOWER_1;
    public static Blocks CHORUS_FLOWER_2;
    public static Blocks CHORUS_FLOWER_3;
    public static Blocks CHORUS_FLOWER_4;
    public static Blocks CHORUS_FLOWER_5;
    public static Blocks PURPUR_BLOCK;
    public static Blocks PURPUR_PILLAR_VERTICAL;
    public static Blocks PURPUR_PILLAR_EAST_WEST;
    public static Blocks PURPUR_PILLAR_NORTH_SOUTH;
    public static Blocks MAGMA_BLOCK;
    public static Blocks NETHER_WART_BLOCK;
    public static Blocks BONE_BLOCK_VERTICAL;
    public static Blocks BONE_BLOCK_EAST_WEST;
    public static Blocks BONE_BLOCK_NORTH_SOUTH;
    public static Blocks STRUCTURE_VOID;
    public static Blocks WHITE_SHULKER_BOX;
    public static Blocks ORANGE_SHULKER_BOX;
    public static Blocks MAGENTA_SHULKER_BOX;
    public static Blocks LIGHT_BLUE_SHULKER_BOX;
    public static Blocks YELLOW_SHULKER_BOX;
    public static Blocks LIME_SHULKER_BOX;
    public static Blocks PINK_SHULKER_BOX;
    public static Blocks GRAY_SHULKER_BOX;
    public static Blocks LIGHT_GRAY_SHULKER_BOX;
    public static Blocks CYAN_SHULKER_BOX;
    public static Blocks PURPLE_SHULKER_BOX;
    public static Blocks BLUE_SHULKER_BOX;
    public static Blocks BROWN_SHULKER_BOX;
    public static Blocks GREEN_SHULKER_BOX;
    public static Blocks RED_SHULKER_BOX;
    public static Blocks BLACK_SHULKER_BOX;
    public static Blocks UPDATE_BLOCK;
    public static Blocks ATEUPD_BLOCK;
    public static Blocks STRUCTURE_BLOCK_SAVE;
    public static Blocks STRUCTURE_BLOCK_LOAD;
    public static Blocks STRUCTURE_BLOCK_CORNER;
    public static Blocks STRUCTURE_BLOCK_DATA;
    public static Blocks WHITE_CONCRETE;
    public static Blocks ORANGE_CONCRETE;
    public static Blocks MAGENTA_CONCRETE;
    public static Blocks LIGHT_BLUE_CONCRETE;
    public static Blocks YELLOW_CONCRETE;
    public static Blocks LIME_CONCRETE;
    public static Blocks PINK_CONCRETE;
    public static Blocks GRAY_CONCRETE;
    public static Blocks LIGHT_GRAY_CONCRETE;
    public static Blocks CYAN_CONCRETE;
    public static Blocks PURPLE_CONCRETE;
    public static Blocks BLUE_CONCRETE;
    public static Blocks BROWN_CONCRETE;
    public static Blocks GREEN_CONCRETE;
    public static Blocks RED_CONCRETE;
    public static Blocks BLACK_CONCRETE;
    public static Blocks WHITE_CONCRETE_POWDER;
    public static Blocks ORANGE_CONCRETE_POWDER;
    public static Blocks MAGENTA_CONCRETE_POWDER;
    public static Blocks LIGHT_BLUE_CONCRETE_POWDER;
    public static Blocks YELLOW_CONCRETE_POWDER;
    public static Blocks LIME_CONCRETE_POWDER;
    public static Blocks PINK_CONCRETE_POWDER;
    public static Blocks GRAY_CONCRETE_POWDER;
    public static Blocks LIGHT_GRAY_CONCRETE_POWDER;
    public static Blocks CYAN_CONCRETE_POWDER;
    public static Blocks PURPLE_CONCRETE_POWDER;
    public static Blocks BLUE_CONCRETE_POWDER;
    public static Blocks BROWN_CONCRETE_POWDER;
    public static Blocks GREEN_CONCRETE_POWDER;
    public static Blocks RED_CONCRETE_POWDER;
    public static Blocks BLACK_CONCRETE_POWDER;
    public static Blocks FIRE_1;
    public static Blocks FIRE_2;
    public static Blocks FIRE_3;
    public static Blocks FIRE_4;
    public static Blocks FIRE_5;
    public static Blocks FIRE_6;
    public static Blocks FIRE_7;
    public static Blocks FIRE_8;
    public static Blocks FIRE_9;
    public static Blocks FIRE_10;
    public static Blocks FIRE_11;
    public static Blocks FIRE_12;
    public static Blocks FIRE_13;
    public static Blocks FIRE_14;

    public final String name;
    public final short id;
    public final BlockData minecraft, pocket;
    public final boolean solid;
    public final double hardness, blastResistance;
    public final byte opacity, luminance;
    public final boolean replaceable;

    private Blocks(String name, short id, BlockData minecraft, BlockData pocket, boolean solid, double hardness, double blastResistance, byte opacity, byte luminance, boolean replaceable)
    {
        this.name = name;
        this.id = id;
        this.minecraft = minecraft;
        this.pocket = pocket;
        this.solid = solid;
        this.hardness = hardness;
        this.blastResistance = blastResistance;
        this.opacity = opacity;
        this.luminance = luminance;
        this.replaceable = replaceable;
    }

    private static class BlockData
    {

        public final int id, meta;

        public BlockData(int id, int meta) {
            this.id = id;
            this.meta = meta;
        }

    }

    private static Map<Short, Blocks> selBlocks;
    private static Map<Integer, Map<Integer, Blocks>> minecraftBlocks, pocketBlocks;

    static
    {

        selBlocks = new HashMap<Short, Blocks>();

        minecraftBlocks = new HashMap<Integer, Map<Integer, Blocks>>();
        pocketBlocks = new HashMap<Integer, Map<Integer, Blocks>>();

        init1();
        init2();

    }

    private static void init1()
    {
        add(AIR = new Blocks("air", (short)0, new BlockData(0, 0), new BlockData(0, 0), false, (double)-1, (double)0, (byte)0, (byte)0, false));
        add(STONE = new Blocks("stone", (short)1, new BlockData(1, 0), new BlockData(1, 0), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(GRANITE = new Blocks("granite", (short)2, new BlockData(1, 1), new BlockData(1, 1), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(POLISHED_GRANITE = new Blocks("polished granite", (short)3, new BlockData(1, 2), new BlockData(1, 2), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(DIORITE = new Blocks("diorite", (short)4, new BlockData(1, 3), new BlockData(1, 3), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(POLISHED_DIORITE = new Blocks("polished diorite", (short)5, new BlockData(1, 4), new BlockData(1, 4), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(ANDESITE = new Blocks("andesite", (short)6, new BlockData(1, 5), new BlockData(1, 5), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(POLISHED_ANDESITE = new Blocks("polished andesite", (short)7, new BlockData(1, 6), new BlockData(1, 6), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(STONE_BRICKS = new Blocks("stone bricks", (short)8, new BlockData(98, 0), new BlockData(98, 0), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(MOSSY_STONE_BRICKS = new Blocks("mossy stone bricks", (short)9, new BlockData(98, 1), new BlockData(98, 1), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(CRACKED_STONE_BRICKS = new Blocks("cracked stone bricks", (short)10, new BlockData(98, 2), new BlockData(98, 2), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(CHISELED_STONE_BRICKS = new Blocks("chiseled stone bricks", (short)11, new BlockData(98, 3), new BlockData(98, 3), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(COBBLESTONE = new Blocks("cobblestone", (short)12, new BlockData(4, 0), new BlockData(4, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(MOSS_STONE = new Blocks("moss stone", (short)13, new BlockData(48, 0), new BlockData(48, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(COBBLESTONE_WALL = new Blocks("cobblestone wall", (short)14, new BlockData(139, 0), new BlockData(139, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(MOSSY_COBBLESTONE_WALL = new Blocks("mossy cobblestone wall", (short)15, new BlockData(139, 1), new BlockData(139, 1), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(BRICKS = new Blocks("bricks", (short)16, new BlockData(45, 0), new BlockData(45, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(COAL_ORE = new Blocks("coal ore", (short)17, new BlockData(16, 0), new BlockData(16, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(IRON_ORE = new Blocks("iron ore", (short)18, new BlockData(15, 0), new BlockData(15, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(GOLD_ORE = new Blocks("gold ore", (short)19, new BlockData(14, 0), new BlockData(14, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(DIAMOND_ORE = new Blocks("diamond ore", (short)20, new BlockData(56, 0), new BlockData(56, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(EMERALD_ORE = new Blocks("emerald ore", (short)21, new BlockData(129, 0), new BlockData(129, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LAPIS_LAZULI_ORE = new Blocks("lapis lazuli ore", (short)22, new BlockData(21, 0), new BlockData(21, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(REDSTONE_ORE = new Blocks("redstone ore", (short)23, new BlockData(73, 0), new BlockData(73, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LIT_REDSTONE_ORE = new Blocks("lit redstone ore", (short)24, new BlockData(74, 0), new BlockData(74, 0), true, (double)3, (double)15, (byte)15, (byte)9, false));
        add(NETHER_QUARTZ_ORE = new Blocks("nether quartz ore", (short)25, new BlockData(153, 0), new BlockData(153, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(COAL_BLOCK = new Blocks("coal block", (short)26, new BlockData(173, 0), new BlockData(173, 0), true, (double)5, (double)30, (byte)15, (byte)0, false));
        add(IRON_BLOCK = new Blocks("iron block", (short)27, new BlockData(42, 0), new BlockData(42, 0), true, (double)5, (double)30, (byte)15, (byte)0, false));
        add(GOLD_BLOCK = new Blocks("gold block", (short)28, new BlockData(41, 0), new BlockData(41, 0), true, (double)3, (double)30, (byte)15, (byte)0, false));
        add(DIAMOND_BLOCK = new Blocks("diamond block", (short)29, new BlockData(57, 0), new BlockData(57, 0), true, (double)5, (double)30, (byte)15, (byte)0, false));
        add(EMERALD_BLOCK = new Blocks("emerald block", (short)30, new BlockData(133, 0), new BlockData(133, 0), true, (double)5, (double)30, (byte)15, (byte)0, false));
        add(REDSTONE_BLOCK = new Blocks("redstone block", (short)31, new BlockData(152, 0), new BlockData(152, 0), true, (double)5, (double)30, (byte)15, (byte)0, false));
        add(LAPIS_LAZULI_BLOCK = new Blocks("lapis lazuli block", (short)32, new BlockData(22, 0), new BlockData(22, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(NETHER_REACTOR_CORE = new Blocks("nether reactor core", (short)33, null, new BlockData(247, 0), true, (double)3, (double)30, (byte)15, (byte)0, false));
        add(ACTIVE_NETHER_REACTOR_CORE = new Blocks("active nether reactor core", (short)34, null, new BlockData(247, 1), true, (double)3, (double)30, (byte)15, (byte)0, false));
        add(USED_NETHER_REACTOR_CORE = new Blocks("used nether reactor core", (short)35, null, new BlockData(247, 2), true, (double)3, (double)30, (byte)15, (byte)0, false));
        add(GRASS = new Blocks("grass", (short)36, new BlockData(2, 0), new BlockData(2, 0), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(DIRT = new Blocks("dirt", (short)37, new BlockData(3, 0), new BlockData(3, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(COARSE_DIRT = new Blocks("coarse dirt", (short)38, new BlockData(3, 1), null, true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PODZOL = new Blocks("podzol", (short)39, new BlockData(3, 2), new BlockData(243, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(MYCELIUM = new Blocks("mycelium", (short)40, new BlockData(110, 0), new BlockData(110, 0), true, (double)0.6, (double)2.5, (byte)15, (byte)0, false));
        add(GRASS_PATH = new Blocks("grass path", (short)41, new BlockData(208, 0), new BlockData(198, 0), true, (double)0.6, (double)3.25, (byte)15, (byte)0, false));
        add(FARMLAND_0 = new Blocks("farmland 0", (short)42, new BlockData(60, 0), new BlockData(60, 0), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(FARMLAND_1 = new Blocks("farmland 1", (short)43, new BlockData(60, 1), new BlockData(60, 1), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(FARMLAND_2 = new Blocks("farmland 2", (short)44, new BlockData(60, 2), new BlockData(60, 2), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(FARMLAND_3 = new Blocks("farmland 3", (short)45, new BlockData(60, 3), new BlockData(60, 3), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(FARMLAND_4 = new Blocks("farmland 4", (short)46, new BlockData(60, 4), new BlockData(60, 4), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(FARMLAND_5 = new Blocks("farmland 5", (short)47, new BlockData(60, 5), new BlockData(60, 5), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(FARMLAND_6 = new Blocks("farmland 6", (short)48, new BlockData(60, 6), new BlockData(60, 6), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(FARMLAND_7 = new Blocks("farmland 7", (short)49, new BlockData(60, 7), new BlockData(60, 7), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(OAK_WOOD_PLANKS = new Blocks("oak wood planks", (short)50, new BlockData(5, 0), new BlockData(5, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_PLANKS = new Blocks("spruce wood planks", (short)51, new BlockData(5, 1), new BlockData(5, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_PLANKS = new Blocks("birch wood planks", (short)52, new BlockData(5, 2), new BlockData(5, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_PLANKS = new Blocks("jungle wood planks", (short)53, new BlockData(5, 3), new BlockData(5, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_PLANKS = new Blocks("acacia wood planks", (short)54, new BlockData(5, 4), new BlockData(5, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_PLANKS = new Blocks("dark oak wood planks", (short)55, new BlockData(5, 5), new BlockData(5, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(OAK_SAPLING = new Blocks("oak sapling", (short)56, new BlockData(6, 0), new BlockData(6, 0), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(SPRUCE_SAPLING = new Blocks("spruce sapling", (short)57, new BlockData(6, 1), new BlockData(6, 1), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(BIRCH_SAPLING = new Blocks("birch sapling", (short)58, new BlockData(6, 2), new BlockData(6, 2), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(JUNGLE_SAPLING = new Blocks("jungle sapling", (short)59, new BlockData(6, 3), new BlockData(6, 3), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(ACACIA_SAPLING = new Blocks("acacia sapling", (short)60, new BlockData(6, 4), new BlockData(6, 4), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(DARK_OAK_SAPLING = new Blocks("dark oak sapling", (short)61, new BlockData(6, 5), new BlockData(6, 5), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(BEDROCK = new Blocks("bedrock", (short)62, new BlockData(7, 0), new BlockData(7, 0), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(SAND = new Blocks("sand", (short)63, new BlockData(12, 0), new BlockData(12, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(RED_SAND = new Blocks("red sand", (short)64, new BlockData(12, 1), new BlockData(12, 1), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(GRAVEL = new Blocks("gravel", (short)65, new BlockData(13, 0), new BlockData(13, 0), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(OAK_WOOD_UP_DOWN = new Blocks("oak wood up down", (short)66, new BlockData(17, 0), new BlockData(17, 0), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(OAK_WOOD_EAST_WEST = new Blocks("oak wood east west", (short)67, new BlockData(17, 4), new BlockData(17, 4), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(OAK_WOOD_NORTH_SOUTH = new Blocks("oak wood north south", (short)68, new BlockData(17, 8), new BlockData(17, 8), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(OAK_WOOD_BARK = new Blocks("oak wood bark", (short)69, new BlockData(17, 12), new BlockData(17, 12), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_UP_DOWN = new Blocks("spruce wood up down", (short)70, new BlockData(17, 1), new BlockData(17, 1), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_EAST_WEST = new Blocks("spruce wood east west", (short)71, new BlockData(17, 5), new BlockData(17, 5), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_NORTH_SOUTH = new Blocks("spruce wood north south", (short)72, new BlockData(17, 9), new BlockData(17, 9), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_BARK = new Blocks("spruce wood bark", (short)73, new BlockData(17, 13), new BlockData(17, 13), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_UP_DOWN = new Blocks("birch wood up down", (short)74, new BlockData(17, 2), new BlockData(17, 2), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_EAST_WEST = new Blocks("birch wood east west", (short)75, new BlockData(17, 6), new BlockData(17, 6), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_NORTH_SOUTH = new Blocks("birch wood north south", (short)76, new BlockData(17, 10), new BlockData(17, 10), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_BARK = new Blocks("birch wood bark", (short)77, new BlockData(17, 14), new BlockData(17, 14), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_UP_DOWN = new Blocks("jungle wood up down", (short)78, new BlockData(17, 3), new BlockData(17, 3), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_EAST_WEST = new Blocks("jungle wood east west", (short)79, new BlockData(17, 7), new BlockData(17, 7), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_NORTH_SOUTH = new Blocks("jungle wood north south", (short)80, new BlockData(17, 11), new BlockData(17, 11), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_BARK = new Blocks("jungle wood bark", (short)81, new BlockData(17, 15), new BlockData(17, 15), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_UP_DOWN = new Blocks("acacia wood up down", (short)82, new BlockData(162, 0), new BlockData(162, 0), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_EAST_WEST = new Blocks("acacia wood east west", (short)83, new BlockData(162, 4), new BlockData(162, 4), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_NORTH_SOUTH = new Blocks("acacia wood north south", (short)84, new BlockData(162, 8), new BlockData(162, 8), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_BARK = new Blocks("acacia wood bark", (short)85, new BlockData(162, 12), new BlockData(162, 12), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_UP_DOWN = new Blocks("dark oak wood up down", (short)86, new BlockData(162, 1), new BlockData(162, 1), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_EAST_WEST = new Blocks("dark oak wood east west", (short)87, new BlockData(162, 5), new BlockData(162, 5), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_NORTH_SOUTH = new Blocks("dark oak wood north south", (short)88, new BlockData(162, 9), new BlockData(162, 9), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_BARK = new Blocks("dark oak wood bark", (short)89, new BlockData(162, 13), new BlockData(162, 13), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(OAK_LEAVES_DECAY = new Blocks("oak leaves decay", (short)90, new BlockData(18, 0), new BlockData(18, 0), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(OAK_LEAVES_NO_DECAY = new Blocks("oak leaves no decay", (short)91, new BlockData(18, 4), new BlockData(18, 4), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(OAK_LEAVES_CHECK_DECAY = new Blocks("oak leaves check decay", (short)92, new BlockData(18, 8), new BlockData(18, 8), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(OAK_LEAVES_NO_DECAY_CHECK_DECAY = new Blocks("oak leaves no decay check decay", (short)93, new BlockData(18, 12), new BlockData(18, 12), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(SPRUCE_LEAVES_DECAY = new Blocks("spruce leaves decay", (short)94, new BlockData(18, 1), new BlockData(18, 1), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(SPRUCE_LEAVES_NO_DECAY = new Blocks("spruce leaves no decay", (short)95, new BlockData(18, 5), new BlockData(18, 5), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(SPRUCE_LEAVES_CHECK_DECAY = new Blocks("spruce leaves check decay", (short)96, new BlockData(18, 9), new BlockData(18, 9), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(SPRUCE_LEAVES_NO_DECAY_CHECK_DECAY = new Blocks("spruce leaves no decay check decay", (short)97, new BlockData(18, 13), new BlockData(18, 13), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(BIRCH_LEAVES_DECAY = new Blocks("birch leaves decay", (short)98, new BlockData(18, 2), new BlockData(18, 2), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(BIRCH_LEAVES_NO_DECAY = new Blocks("birch leaves no decay", (short)99, new BlockData(18, 6), new BlockData(18, 6), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(BIRCH_LEAVES_CHECK_DECAY = new Blocks("birch leaves check decay", (short)100, new BlockData(18, 10), new BlockData(18, 10), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(BIRCH_LEAVES_NO_DECAY_CHECK_DECAY = new Blocks("birch leaves no decay check decay", (short)101, new BlockData(18, 14), new BlockData(18, 14), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(JUNGLE_LEAVES_DECAY = new Blocks("jungle leaves decay", (short)102, new BlockData(18, 3), new BlockData(18, 3), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(JUNGLE_LEAVES_NO_DECAY = new Blocks("jungle leaves no decay", (short)103, new BlockData(18, 7), new BlockData(18, 7), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(JUNGLE_LEAVES_CHECK_DECAY = new Blocks("jungle leaves check decay", (short)104, new BlockData(18, 11), new BlockData(18, 11), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(JUNGLE_LEAVES_NO_DECAY_CHECK_DECAY = new Blocks("jungle leaves no decay check decay", (short)105, new BlockData(18, 15), new BlockData(18, 15), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(ACACIA_LEAVES_DECAY = new Blocks("acacia leaves decay", (short)106, new BlockData(161, 0), new BlockData(161, 0), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(ACACIA_LEAVES_NO_DECAY = new Blocks("acacia leaves no decay", (short)107, new BlockData(161, 4), new BlockData(161, 4), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(ACACIA_LEAVES_CHECK_DECAY = new Blocks("acacia leaves check decay", (short)108, new BlockData(161, 8), new BlockData(161, 8), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(ACACIA_LEAVES_NO_DECAY_CHECK_DECAY = new Blocks("acacia leaves no decay check decay", (short)109, new BlockData(161, 12), new BlockData(161, 12), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(DARK_OAK_LEAVES_DECAY = new Blocks("dark oak leaves decay", (short)110, new BlockData(161, 1), new BlockData(161, 1), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(DARK_OAK_LEAVES_NO_DECAY = new Blocks("dark oak leaves no decay", (short)111, new BlockData(161, 5), new BlockData(161, 5), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(DARK_OAK_LEAVES_CHECK_DECAY = new Blocks("dark oak leaves check decay", (short)112, new BlockData(161, 9), new BlockData(161, 9), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(DARK_OAK_LEAVES_NO_DECAY_CHECK_DECAY = new Blocks("dark oak leaves no decay check decay", (short)113, new BlockData(161, 13), new BlockData(161, 13), true, (double)0.2, (double)1, (byte)1, (byte)0, false));
        add(FLOWING_WATER_0 = new Blocks("flowing water 0", (short)114, new BlockData(8, 0), new BlockData(8, 0), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_1 = new Blocks("flowing water 1", (short)115, new BlockData(8, 1), new BlockData(8, 1), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_2 = new Blocks("flowing water 2", (short)116, new BlockData(8, 2), new BlockData(8, 2), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_3 = new Blocks("flowing water 3", (short)117, new BlockData(8, 3), new BlockData(8, 3), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_4 = new Blocks("flowing water 4", (short)118, new BlockData(8, 4), new BlockData(8, 4), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_5 = new Blocks("flowing water 5", (short)119, new BlockData(8, 5), new BlockData(8, 5), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_6 = new Blocks("flowing water 6", (short)120, new BlockData(8, 6), new BlockData(8, 6), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_7 = new Blocks("flowing water 7", (short)121, new BlockData(8, 7), new BlockData(8, 7), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_0 = new Blocks("flowing water falling 0", (short)122, new BlockData(8, 8), new BlockData(8, 8), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_1 = new Blocks("flowing water falling 1", (short)123, new BlockData(8, 9), new BlockData(8, 9), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_2 = new Blocks("flowing water falling 2", (short)124, new BlockData(8, 10), new BlockData(8, 10), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_3 = new Blocks("flowing water falling 3", (short)125, new BlockData(8, 11), new BlockData(8, 11), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_4 = new Blocks("flowing water falling 4", (short)126, new BlockData(8, 12), new BlockData(8, 12), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_5 = new Blocks("flowing water falling 5", (short)127, new BlockData(8, 13), new BlockData(8, 13), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_6 = new Blocks("flowing water falling 6", (short)128, new BlockData(8, 14), new BlockData(8, 14), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_WATER_FALLING_7 = new Blocks("flowing water falling 7", (short)129, new BlockData(8, 15), new BlockData(8, 15), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_0 = new Blocks("still water 0", (short)130, new BlockData(9, 0), new BlockData(9, 0), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_1 = new Blocks("still water 1", (short)131, new BlockData(9, 1), new BlockData(9, 1), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_2 = new Blocks("still water 2", (short)132, new BlockData(9, 2), new BlockData(9, 2), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_3 = new Blocks("still water 3", (short)133, new BlockData(9, 3), new BlockData(9, 3), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_4 = new Blocks("still water 4", (short)134, new BlockData(9, 4), new BlockData(9, 4), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_5 = new Blocks("still water 5", (short)135, new BlockData(9, 5), new BlockData(9, 5), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_6 = new Blocks("still water 6", (short)136, new BlockData(9, 6), new BlockData(9, 6), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_7 = new Blocks("still water 7", (short)137, new BlockData(9, 7), new BlockData(9, 7), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_0 = new Blocks("still water falling 0", (short)138, new BlockData(9, 8), new BlockData(9, 8), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_1 = new Blocks("still water falling 1", (short)139, new BlockData(9, 9), new BlockData(9, 9), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_2 = new Blocks("still water falling 2", (short)140, new BlockData(9, 10), new BlockData(9, 10), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_3 = new Blocks("still water falling 3", (short)141, new BlockData(9, 11), new BlockData(9, 11), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_4 = new Blocks("still water falling 4", (short)142, new BlockData(9, 12), new BlockData(9, 12), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_5 = new Blocks("still water falling 5", (short)143, new BlockData(9, 13), new BlockData(9, 13), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_6 = new Blocks("still water falling 6", (short)144, new BlockData(9, 14), new BlockData(9, 14), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(STILL_WATER_FALLING_7 = new Blocks("still water falling 7", (short)145, new BlockData(9, 15), new BlockData(9, 15), false, (double)-1, (double)500, (byte)3, (byte)0, false));
        add(FLOWING_LAVA_0 = new Blocks("flowing lava 0", (short)146, new BlockData(10, 0), new BlockData(10, 0), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_1 = new Blocks("flowing lava 1", (short)147, new BlockData(10, 1), new BlockData(10, 1), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_2 = new Blocks("flowing lava 2", (short)148, new BlockData(10, 2), new BlockData(10, 2), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_3 = new Blocks("flowing lava 3", (short)149, new BlockData(10, 3), new BlockData(10, 3), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_4 = new Blocks("flowing lava 4", (short)150, new BlockData(10, 4), new BlockData(10, 4), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_5 = new Blocks("flowing lava 5", (short)151, new BlockData(10, 5), new BlockData(10, 5), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_6 = new Blocks("flowing lava 6", (short)152, new BlockData(10, 6), new BlockData(10, 6), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_7 = new Blocks("flowing lava 7", (short)153, new BlockData(10, 7), new BlockData(10, 7), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_0 = new Blocks("flowing lava falling 0", (short)154, new BlockData(10, 8), new BlockData(10, 8), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_1 = new Blocks("flowing lava falling 1", (short)155, new BlockData(10, 9), new BlockData(10, 9), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_2 = new Blocks("flowing lava falling 2", (short)156, new BlockData(10, 10), new BlockData(10, 10), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_3 = new Blocks("flowing lava falling 3", (short)157, new BlockData(10, 11), new BlockData(10, 11), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_4 = new Blocks("flowing lava falling 4", (short)158, new BlockData(10, 12), new BlockData(10, 12), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_5 = new Blocks("flowing lava falling 5", (short)159, new BlockData(10, 13), new BlockData(10, 13), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_6 = new Blocks("flowing lava falling 6", (short)160, new BlockData(10, 14), new BlockData(10, 14), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(FLOWING_LAVA_FALLING_7 = new Blocks("flowing lava falling 7", (short)161, new BlockData(10, 15), new BlockData(10, 15), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_0 = new Blocks("still lava 0", (short)162, new BlockData(11, 0), new BlockData(11, 0), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_1 = new Blocks("still lava 1", (short)163, new BlockData(11, 1), new BlockData(11, 1), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_2 = new Blocks("still lava 2", (short)164, new BlockData(11, 2), new BlockData(11, 2), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_3 = new Blocks("still lava 3", (short)165, new BlockData(11, 3), new BlockData(11, 3), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_4 = new Blocks("still lava 4", (short)166, new BlockData(11, 4), new BlockData(11, 4), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_5 = new Blocks("still lava 5", (short)167, new BlockData(11, 5), new BlockData(11, 5), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_6 = new Blocks("still lava 6", (short)168, new BlockData(11, 6), new BlockData(11, 6), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_7 = new Blocks("still lava 7", (short)169, new BlockData(11, 7), new BlockData(11, 7), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_0 = new Blocks("still lava falling 0", (short)170, new BlockData(11, 8), new BlockData(11, 8), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_1 = new Blocks("still lava falling 1", (short)171, new BlockData(11, 9), new BlockData(11, 9), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_2 = new Blocks("still lava falling 2", (short)172, new BlockData(11, 10), new BlockData(11, 10), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_3 = new Blocks("still lava falling 3", (short)173, new BlockData(11, 11), new BlockData(11, 11), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_4 = new Blocks("still lava falling 4", (short)174, new BlockData(11, 12), new BlockData(11, 12), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_5 = new Blocks("still lava falling 5", (short)175, new BlockData(11, 13), new BlockData(11, 13), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_6 = new Blocks("still lava falling 6", (short)176, new BlockData(11, 14), new BlockData(11, 14), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(STILL_LAVA_FALLING_7 = new Blocks("still lava falling 7", (short)177, new BlockData(11, 15), new BlockData(11, 15), false, (double)-1, (double)500, (byte)3, (byte)15, false));
        add(SPONGE = new Blocks("sponge", (short)178, new BlockData(19, 0), new BlockData(19, 0), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(WET_SPONGE = new Blocks("wet sponge", (short)179, new BlockData(19, 1), new BlockData(19, 1), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(GLASS = new Blocks("glass", (short)180, new BlockData(20, 0), new BlockData(20, 0), true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(WHITE_STAINED_GLASS = new Blocks("white stained glass", (short)181, new BlockData(95, 0), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(ORANGE_STAINED_GLASS = new Blocks("orange stained glass", (short)182, new BlockData(95, 1), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(MAGENTA_STAINED_GLASS = new Blocks("magenta stained glass", (short)183, new BlockData(95, 2), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(LIGHT_BLUE_STAINED_GLASS = new Blocks("light blue stained glass", (short)184, new BlockData(95, 3), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(YELLOW_STAINED_GLASS = new Blocks("yellow stained glass", (short)185, new BlockData(95, 4), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(LIME_STAINED_GLASS = new Blocks("lime stained glass", (short)186, new BlockData(95, 5), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(PINK_STAINED_GLASS = new Blocks("pink stained glass", (short)187, new BlockData(95, 6), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(GRAY_STAINED_GLASS = new Blocks("gray stained glass", (short)188, new BlockData(95, 7), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(LIGHT_GRAY_STAINED_GLASS = new Blocks("light gray stained glass", (short)189, new BlockData(95, 8), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(CYAN_STAINED_GLASS = new Blocks("cyan stained glass", (short)190, new BlockData(95, 9), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(PURPLE_STAINED_GLASS = new Blocks("purple stained glass", (short)191, new BlockData(95, 10), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(BLUE_STAINED_GLASS = new Blocks("blue stained glass", (short)192, new BlockData(95, 11), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(BROWN_STAINED_GLASS = new Blocks("brown stained glass", (short)193, new BlockData(95, 12), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(GREEN_STAINED_GLASS = new Blocks("green stained glass", (short)194, new BlockData(95, 13), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(RED_STAINED_GLASS = new Blocks("red stained glass", (short)195, new BlockData(95, 14), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(BLACK_STAINED_GLASS = new Blocks("black stained glass", (short)196, new BlockData(95, 15), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(GLASS_PANE = new Blocks("glass pane", (short)197, new BlockData(102, 0), new BlockData(102, 0), true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(WHITE_STAINED_GLASS_PANE = new Blocks("white stained glass pane", (short)198, new BlockData(160, 0), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(ORANGE_STAINED_GLASS_PANE = new Blocks("orange stained glass pane", (short)199, new BlockData(160, 1), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(MAGENTA_STAINED_GLASS_PANE = new Blocks("magenta stained glass pane", (short)200, new BlockData(160, 2), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(LIGHT_BLUE_STAINED_GLASS_PANE = new Blocks("light blue stained glass pane", (short)201, new BlockData(160, 3), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(YELLOW_STAINED_GLASS_PANE = new Blocks("yellow stained glass pane", (short)202, new BlockData(160, 4), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(LIME_STAINED_GLASS_PANE = new Blocks("lime stained glass pane", (short)203, new BlockData(160, 5), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(PINK_STAINED_GLASS_PANE = new Blocks("pink stained glass pane", (short)204, new BlockData(160, 6), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(GRAY_STAINED_GLASS_PANE = new Blocks("gray stained glass pane", (short)205, new BlockData(160, 7), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(LIGHT_GRAY_STAINED_GLASS_PANE = new Blocks("light gray stained glass pane", (short)206, new BlockData(160, 8), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(CYAN_STAINED_GLASS_PANE = new Blocks("cyan stained glass pane", (short)207, new BlockData(160, 9), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(PURPLE_STAINED_GLASS_PANE = new Blocks("purple stained glass pane", (short)208, new BlockData(160, 10), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(BLUE_STAINED_GLASS_PANE = new Blocks("blue stained glass pane", (short)209, new BlockData(160, 11), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(BROWN_STAINED_GLASS_PANE = new Blocks("brown stained glass pane", (short)210, new BlockData(160, 12), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(GREEN_STAINED_GLASS_PANE = new Blocks("green stained glass pane", (short)211, new BlockData(160, 13), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(RED_STAINED_GLASS_PANE = new Blocks("red stained glass pane", (short)212, new BlockData(160, 14), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(BLACK_STAINED_GLASS_PANE = new Blocks("black stained glass pane", (short)213, new BlockData(160, 15), null, true, (double)0.3, (double)1.5, (byte)0, (byte)0, false));
        add(SANDSTONE = new Blocks("sandstone", (short)214, new BlockData(24, 0), new BlockData(24, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(CHISELED_SANDSTONE = new Blocks("chiseled sandstone", (short)215, new BlockData(24, 1), new BlockData(24, 1), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(SMOOTH_SANDSTONE = new Blocks("smooth sandstone", (short)216, new BlockData(24, 2), new BlockData(24, 2), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(RED_SANDSTONE = new Blocks("red sandstone", (short)217, new BlockData(179, 0), new BlockData(179, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(CHISELED_RED_SANDSTONE = new Blocks("chiseled red sandstone", (short)218, new BlockData(179, 1), new BlockData(179, 1), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(SMOOTH_RED_SANDSTONE = new Blocks("smooth red sandstone", (short)219, new BlockData(179, 2), new BlockData(179, 2), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(DISPENSER_FACING_DOWN = new Blocks("dispenser facing down", (short)220, new BlockData(23, 0), new BlockData(23, 0), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DISPENSER_FACING_UP = new Blocks("dispenser facing up", (short)221, new BlockData(23, 1), new BlockData(23, 1), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DISPENSER_FACING_NORTH = new Blocks("dispenser facing north", (short)222, new BlockData(23, 2), new BlockData(23, 2), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DISPENSER_FACING_SOUTH = new Blocks("dispenser facing south", (short)223, new BlockData(23, 3), new BlockData(23, 3), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DISPENSER_FACING_WEST = new Blocks("dispenser facing west", (short)224, new BlockData(23, 4), new BlockData(23, 4), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DISPENSER_FACING_EAST = new Blocks("dispenser facing east", (short)225, new BlockData(23, 5), new BlockData(23, 5), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DISPENSER_FACING_DOWN = new Blocks("active dispenser facing down", (short)226, new BlockData(23, 8), new BlockData(23, 8), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DISPENSER_FACING_UP = new Blocks("active dispenser facing up", (short)227, new BlockData(23, 9), new BlockData(23, 9), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DISPENSER_FACING_NORTH = new Blocks("active dispenser facing north", (short)228, new BlockData(23, 10), new BlockData(23, 10), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DISPENSER_FACING_SOUTH = new Blocks("active dispenser facing south", (short)229, new BlockData(23, 11), new BlockData(23, 11), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DISPENSER_FACING_WEST = new Blocks("active dispenser facing west", (short)230, new BlockData(23, 12), new BlockData(23, 12), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DISPENSER_FACING_EAST = new Blocks("active dispenser facing east", (short)231, new BlockData(23, 13), new BlockData(23, 13), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DROPPER_FACING_DOWN = new Blocks("dropper facing down", (short)232, new BlockData(158, 0), new BlockData(125, 0), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DROPPER_FACING_UP = new Blocks("dropper facing up", (short)233, new BlockData(158, 1), new BlockData(125, 1), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DROPPER_FACING_NORTH = new Blocks("dropper facing north", (short)234, new BlockData(158, 2), new BlockData(125, 2), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DROPPER_FACING_SOUTH = new Blocks("dropper facing south", (short)235, new BlockData(158, 3), new BlockData(125, 3), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DROPPER_FACING_WEST = new Blocks("dropper facing west", (short)236, new BlockData(158, 4), new BlockData(125, 4), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(DROPPER_FACING_EAST = new Blocks("dropper facing east", (short)237, new BlockData(158, 5), new BlockData(125, 5), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DROPPER_FACING_DOWN = new Blocks("active dropper facing down", (short)238, new BlockData(158, 8), new BlockData(125, 8), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DROPPER_FACING_UP = new Blocks("active dropper facing up", (short)239, new BlockData(158, 9), new BlockData(125, 9), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DROPPER_FACING_NORTH = new Blocks("active dropper facing north", (short)240, new BlockData(158, 10), new BlockData(125, 10), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DROPPER_FACING_SOUTH = new Blocks("active dropper facing south", (short)241, new BlockData(158, 11), new BlockData(125, 11), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DROPPER_FACING_WEST = new Blocks("active dropper facing west", (short)242, new BlockData(158, 12), new BlockData(125, 12), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(ACTIVE_DROPPER_FACING_EAST = new Blocks("active dropper facing east", (short)243, new BlockData(158, 13), new BlockData(125, 13), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(OBSERVER_FACING_DOWN = new Blocks("observer facing down", (short)244, new BlockData(218, 0), new BlockData(251, 0), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(OBSERVER_FACING_UP = new Blocks("observer facing up", (short)245, new BlockData(218, 1), new BlockData(251, 1), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(OBSERVER_FACING_SOUTH = new Blocks("observer facing south", (short)246, new BlockData(218, 2), new BlockData(251, 2), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(OBSERVER_FACING_NORTH = new Blocks("observer facing north", (short)247, new BlockData(218, 3), new BlockData(251, 3), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(OBSERVER_FACING_EAST = new Blocks("observer facing east", (short)248, new BlockData(218, 4), new BlockData(251, 4), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(OBSERVER_FACING_WEST = new Blocks("observer facing west", (short)249, new BlockData(218, 5), new BlockData(251, 5), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(NOTE_BLOCK = new Blocks("note block", (short)250, new BlockData(25, 0), new BlockData(25, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(BED_FOOT_FACING_SOUTH = new Blocks("bed foot facing south", (short)251, new BlockData(26, 0), new BlockData(26, 0), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BED_FOOT_FACING_WEST = new Blocks("bed foot facing west", (short)252, new BlockData(26, 1), new BlockData(26, 1), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BED_FOOT_FACING_NORTH = new Blocks("bed foot facing north", (short)253, new BlockData(26, 2), new BlockData(26, 2), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BED_FOOT_FACING_EAST = new Blocks("bed foot facing east", (short)254, new BlockData(26, 3), new BlockData(26, 3), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_FOOT_FACING_SOUTH = new Blocks("occupied bed foot facing south", (short)255, new BlockData(26, 4), new BlockData(26, 4), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_FOOT_FACING_WEST = new Blocks("occupied bed foot facing west", (short)256, new BlockData(26, 5), new BlockData(26, 5), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_FOOT_FACING_NORTH = new Blocks("occupied bed foot facing north", (short)257, new BlockData(26, 6), new BlockData(26, 6), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_FOOT_FACING_EAST = new Blocks("occupied bed foot facing east", (short)258, new BlockData(26, 7), new BlockData(26, 7), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BED_HEAD_FACING_SOUTH = new Blocks("bed head facing south", (short)259, new BlockData(26, 8), new BlockData(26, 8), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BED_HEAD_FACING_WEST = new Blocks("bed head facing west", (short)260, new BlockData(26, 9), new BlockData(26, 9), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BED_HEAD_FACING_NORTH = new Blocks("bed head facing north", (short)261, new BlockData(26, 10), new BlockData(26, 10), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BED_HEAD_FACING_EAST = new Blocks("bed head facing east", (short)262, new BlockData(26, 11), new BlockData(26, 11), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_HEAD_FACING_SOUTH = new Blocks("occupied bed head facing south", (short)263, new BlockData(26, 12), new BlockData(26, 12), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_HEAD_FACING_WEST = new Blocks("occupied bed head facing west", (short)264, new BlockData(26, 13), new BlockData(26, 13), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_HEAD_FACING_NORTH = new Blocks("occupied bed head facing north", (short)265, new BlockData(26, 14), new BlockData(26, 14), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(OCCUPIED_BED_HEAD_FACING_EAST = new Blocks("occupied bed head facing east", (short)266, new BlockData(26, 15), new BlockData(26, 15), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RAIL_NORTH_SOUTH = new Blocks("rail north south", (short)267, new BlockData(66, 0), new BlockData(66, 0), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_EAST_WEST = new Blocks("rail east west", (short)268, new BlockData(66, 1), new BlockData(66, 1), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_ASCENDING_EAST = new Blocks("rail ascending east", (short)269, new BlockData(66, 2), new BlockData(66, 2), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_ASCENDING_WEST = new Blocks("rail ascending west", (short)270, new BlockData(66, 3), new BlockData(66, 3), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_ASCENDING_NORTH = new Blocks("rail ascending north", (short)271, new BlockData(66, 4), new BlockData(66, 4), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_ASCENDING_SOUTH = new Blocks("rail ascending south", (short)272, new BlockData(66, 5), new BlockData(66, 5), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_CURVED_SOUTH_EAST = new Blocks("rail curved south east", (short)273, new BlockData(66, 6), new BlockData(66, 6), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_CURVED_SOUTH_WEST = new Blocks("rail curved south west", (short)274, new BlockData(66, 7), new BlockData(66, 7), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_CURVED_NORTH_WEST = new Blocks("rail curved north west", (short)275, new BlockData(66, 8), new BlockData(66, 8), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(RAIL_CURVED_NORTH_EAST = new Blocks("rail curved north east", (short)276, new BlockData(66, 9), new BlockData(66, 9), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(POWERED_RAIL_NORTH_SOUTH = new Blocks("powered rail north south", (short)277, new BlockData(27, 0), new BlockData(27, 0), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(POWERED_RAIL_EAST_WEST = new Blocks("powered rail east west", (short)278, new BlockData(27, 1), new BlockData(27, 1), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(POWERED_RAIL_ASCENDING_EAST = new Blocks("powered rail ascending east", (short)279, new BlockData(27, 2), new BlockData(27, 2), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(POWERED_RAIL_ASCENDING_WEST = new Blocks("powered rail ascending west", (short)280, new BlockData(27, 3), new BlockData(27, 3), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(POWERED_RAIL_ASCENDING_NORTH = new Blocks("powered rail ascending north", (short)281, new BlockData(27, 4), new BlockData(27, 4), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(POWERED_RAIL_ASCENDING_SOUTH = new Blocks("powered rail ascending south", (short)282, new BlockData(27, 5), new BlockData(27, 5), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_POWERED_RAIL_NORTH_SOUTH = new Blocks("active powered rail north south", (short)283, new BlockData(27, 8), new BlockData(27, 8), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_POWERED_RAIL_EAST_WEST = new Blocks("active powered rail east west", (short)284, new BlockData(27, 9), new BlockData(27, 9), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_POWERED_RAIL_ASCENDING_EAST = new Blocks("active powered rail ascending east", (short)285, new BlockData(27, 10), new BlockData(27, 10), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_POWERED_RAIL_ASCENDING_WEST = new Blocks("active powered rail ascending west", (short)286, new BlockData(27, 11), new BlockData(27, 11), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_POWERED_RAIL_ASCENDING_NORTH = new Blocks("active powered rail ascending north", (short)287, new BlockData(27, 12), new BlockData(27, 12), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_POWERED_RAIL_ASCENDING_SOUTH = new Blocks("active powered rail ascending south", (short)288, new BlockData(27, 13), new BlockData(27, 13), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVATOR_RAIL_NORTH_SOUTH = new Blocks("activator rail north south", (short)289, new BlockData(157, 0), new BlockData(126, 0), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVATOR_RAIL_EAST_WEST = new Blocks("activator rail east west", (short)290, new BlockData(157, 1), new BlockData(126, 1), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVATOR_RAIL_ASCENDING_EAST = new Blocks("activator rail ascending east", (short)291, new BlockData(157, 2), new BlockData(126, 2), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVATOR_RAIL_ASCENDING_WEST = new Blocks("activator rail ascending west", (short)292, new BlockData(157, 3), new BlockData(126, 3), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVATOR_RAIL_ASCENDING_NORTH = new Blocks("activator rail ascending north", (short)293, new BlockData(157, 4), new BlockData(126, 4), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVATOR_RAIL_ASCENDING_SOUTH = new Blocks("activator rail ascending south", (short)294, new BlockData(157, 5), new BlockData(126, 5), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_ACTIVATOR_RAIL_NORTH_SOUTH = new Blocks("active activator rail north south", (short)295, new BlockData(157, 8), new BlockData(126, 8), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_ACTIVATOR_RAIL_EAST_WEST = new Blocks("active activator rail east west", (short)296, new BlockData(157, 9), new BlockData(126, 9), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_ACTIVATOR_RAIL_ASCENDING_EAST = new Blocks("active activator rail ascending east", (short)297, new BlockData(157, 10), new BlockData(126, 10), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_ACTIVATOR_RAIL_ASCENDING_WEST = new Blocks("active activator rail ascending west", (short)298, new BlockData(157, 11), new BlockData(126, 11), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_ACTIVATOR_RAIL_ASCENDING_NORTH = new Blocks("active activator rail ascending north", (short)299, new BlockData(157, 12), new BlockData(126, 12), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_ACTIVATOR_RAIL_ASCENDING_SOUTH = new Blocks("active activator rail ascending south", (short)300, new BlockData(157, 13), new BlockData(126, 13), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(DETECTOR_RAIL_NORTH_SOUTH = new Blocks("detector rail north south", (short)301, new BlockData(28, 0), new BlockData(28, 0), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(DETECTOR_RAIL_EAST_WEST = new Blocks("detector rail east west", (short)302, new BlockData(28, 1), new BlockData(28, 1), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(DETECTOR_RAIL_ASCENDING_EAST = new Blocks("detector rail ascending east", (short)303, new BlockData(28, 2), new BlockData(28, 2), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(DETECTOR_RAIL_ASCENDING_WEST = new Blocks("detector rail ascending west", (short)304, new BlockData(28, 3), new BlockData(28, 3), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(DETECTOR_RAIL_ASCENDING_NORTH = new Blocks("detector rail ascending north", (short)305, new BlockData(28, 4), new BlockData(28, 4), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(DETECTOR_RAIL_ASCENDING_SOUTH = new Blocks("detector rail ascending south", (short)306, new BlockData(28, 5), new BlockData(28, 5), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_DETECTOR_RAIL_NORTH_SOUTH = new Blocks("active detector rail north south", (short)307, new BlockData(28, 8), new BlockData(28, 8), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_DETECTOR_RAIL_EAST_WEST = new Blocks("active detector rail east west", (short)308, new BlockData(28, 9), new BlockData(28, 9), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_DETECTOR_RAIL_ASCENDING_EAST = new Blocks("active detector rail ascending east", (short)309, new BlockData(28, 10), new BlockData(28, 10), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_DETECTOR_RAIL_ASCENDING_WEST = new Blocks("active detector rail ascending west", (short)310, new BlockData(28, 11), new BlockData(28, 11), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_DETECTOR_RAIL_ASCENDING_NORTH = new Blocks("active detector rail ascending north", (short)311, new BlockData(28, 12), new BlockData(28, 12), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(ACTIVE_DETECTOR_RAIL_ASCENDING_SOUTH = new Blocks("active detector rail ascending south", (short)312, new BlockData(28, 13), new BlockData(28, 13), true, (double)0.7, (double)3.5, (byte)15, (byte)0, false));
        add(PISTON_FACING_DOWN = new Blocks("piston facing down", (short)313, new BlockData(33, 0), new BlockData(33, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_FACING_UP = new Blocks("piston facing up", (short)314, new BlockData(33, 1), new BlockData(33, 1), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_FACING_NORTH = new Blocks("piston facing north", (short)315, new BlockData(33, 2), new BlockData(33, 3), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_FACING_SOUTH = new Blocks("piston facing south", (short)316, new BlockData(33, 3), new BlockData(33, 2), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_FACING_WEST = new Blocks("piston facing west", (short)317, new BlockData(33, 4), new BlockData(33, 5), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_FACING_EAST = new Blocks("piston facing east", (short)318, new BlockData(33, 5), new BlockData(33, 4), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_HEAD_FACING_DOWN = new Blocks("sticky piston head facing down", (short)319, new BlockData(34, 8), new BlockData(34, 8), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_HEAD_FACING_UP = new Blocks("sticky piston head facing up", (short)320, new BlockData(34, 9), new BlockData(34, 9), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_PISTON_FACING_DOWN = new Blocks("extended piston facing down", (short)321, new BlockData(33, 8), new BlockData(33, 8), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_PISTON_FACING_UP = new Blocks("extended piston facing up", (short)322, new BlockData(33, 9), new BlockData(33, 9), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_PISTON_FACING_NORTH = new Blocks("extended piston facing north", (short)323, new BlockData(33, 10), new BlockData(33, 11), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_PISTON_FACING_SOUTH = new Blocks("extended piston facing south", (short)324, new BlockData(33, 11), new BlockData(33, 12), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_PISTON_FACING_WEST = new Blocks("extended piston facing west", (short)325, new BlockData(33, 12), new BlockData(33, 13), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_PISTON_FACING_EAST = new Blocks("extended piston facing east", (short)326, new BlockData(33, 13), new BlockData(33, 12), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_HEAD_FACING_NORTH = new Blocks("sticky piston head facing north", (short)327, new BlockData(34, 10), new BlockData(34, 11), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_HEAD_FACING_SOUTH = new Blocks("sticky piston head facing south", (short)328, new BlockData(34, 11), new BlockData(34, 10), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_FACING_DOWN = new Blocks("sticky piston facing down", (short)329, new BlockData(29, 0), new BlockData(29, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_FACING_UP = new Blocks("sticky piston facing up", (short)330, new BlockData(29, 1), new BlockData(29, 1), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_FACING_NORTH = new Blocks("sticky piston facing north", (short)331, new BlockData(29, 2), new BlockData(29, 3), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_FACING_SOUTH = new Blocks("sticky piston facing south", (short)332, new BlockData(29, 3), new BlockData(29, 2), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_FACING_WEST = new Blocks("sticky piston facing west", (short)333, new BlockData(29, 4), new BlockData(29, 5), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_FACING_EAST = new Blocks("sticky piston facing east", (short)334, new BlockData(29, 5), new BlockData(29, 4), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_HEAD_FACING_WEST = new Blocks("sticky piston head facing west", (short)335, new BlockData(34, 12), new BlockData(34, 13), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STICKY_PISTON_HEAD_FACING_EAST = new Blocks("sticky piston head facing east", (short)336, new BlockData(34, 13), new BlockData(34, 12), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_STICKY_PISTON_FACING_DOWN = new Blocks("extended sticky piston facing down", (short)337, new BlockData(29, 8), new BlockData(29, 8), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_STICKY_PISTON_FACING_UP = new Blocks("extended sticky piston facing up", (short)338, new BlockData(29, 9), new BlockData(29, 9), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_STICKY_PISTON_FACING_NORTH = new Blocks("extended sticky piston facing north", (short)339, new BlockData(29, 10), new BlockData(29, 11), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_STICKY_PISTON_FACING_SOUTH = new Blocks("extended sticky piston facing south", (short)340, new BlockData(29, 11), new BlockData(29, 10), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_STICKY_PISTON_FACING_WEST = new Blocks("extended sticky piston facing west", (short)341, new BlockData(29, 12), new BlockData(29, 13), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(EXTENDED_STICKY_PISTON_FACING_EAST = new Blocks("extended sticky piston facing east", (short)342, new BlockData(29, 13), new BlockData(29, 12), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(SMOOTH_STONE_SLAB = new Blocks("smooth stone slab", (short)343, new BlockData(43, 8), null, true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(FIRE_15 = new Blocks("fire 15", (short)344, new BlockData(51, 15), new BlockData(51, 15), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(PISTON_HEAD_FACING_DOWN = new Blocks("piston head facing down", (short)345, new BlockData(34, 0), new BlockData(34, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_HEAD_FACING_UP = new Blocks("piston head facing up", (short)346, new BlockData(34, 1), new BlockData(34, 1), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_HEAD_FACING_NORTH = new Blocks("piston head facing north", (short)347, new BlockData(34, 2), new BlockData(34, 3), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_HEAD_FACING_SOUTH = new Blocks("piston head facing south", (short)348, new BlockData(34, 3), new BlockData(34, 2), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_HEAD_FACING_WEST = new Blocks("piston head facing west", (short)349, new BlockData(34, 4), new BlockData(34, 5), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_HEAD_FACING_EAST = new Blocks("piston head facing east", (short)350, new BlockData(34, 5), new BlockData(34, 4), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PISTON_EXTENSION = new Blocks("piston extension", (short)351, new BlockData(36, 0), new BlockData(250, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WHITE_WOOL = new Blocks("white wool", (short)352, new BlockData(35, 0), new BlockData(35, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(ORANGE_WOOL = new Blocks("orange wool", (short)353, new BlockData(35, 1), new BlockData(35, 1), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(MAGENTA_WOOL = new Blocks("magenta wool", (short)354, new BlockData(35, 2), new BlockData(35, 2), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(LIGHT_BLUE_WOOL = new Blocks("light blue wool", (short)355, new BlockData(35, 3), new BlockData(35, 3), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(YELLOW_WOOL = new Blocks("yellow wool", (short)356, new BlockData(35, 4), new BlockData(35, 4), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(LIME_WOOL = new Blocks("lime wool", (short)357, new BlockData(35, 5), new BlockData(35, 5), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(PINK_WOOL = new Blocks("pink wool", (short)358, new BlockData(35, 6), new BlockData(35, 6), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(GRAY_WOOL = new Blocks("gray wool", (short)359, new BlockData(35, 7), new BlockData(35, 7), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(LIGHT_GRAY_WOOL = new Blocks("light gray wool", (short)360, new BlockData(35, 8), new BlockData(35, 8), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(CYAN_WOOL = new Blocks("cyan wool", (short)361, new BlockData(35, 9), new BlockData(35, 9), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(PURPLE_WOOL = new Blocks("purple wool", (short)362, new BlockData(35, 10), new BlockData(35, 10), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(BLUE_WOOL = new Blocks("blue wool", (short)363, new BlockData(35, 11), new BlockData(35, 11), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(BROWN_WOOL = new Blocks("brown wool", (short)364, new BlockData(35, 12), new BlockData(35, 12), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(GREEN_WOOL = new Blocks("green wool", (short)365, new BlockData(35, 13), new BlockData(35, 13), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(RED_WOOL = new Blocks("red wool", (short)366, new BlockData(35, 14), new BlockData(35, 14), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(BLACK_WOOL = new Blocks("black wool", (short)367, new BlockData(35, 15), new BlockData(35, 15), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(WHITE_CARPET = new Blocks("white carpet", (short)368, new BlockData(171, 0), new BlockData(171, 0), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(ORANGE_CARPET = new Blocks("orange carpet", (short)369, new BlockData(171, 1), new BlockData(171, 1), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(MAGENTA_CARPET = new Blocks("magenta carpet", (short)370, new BlockData(171, 2), new BlockData(171, 2), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(LIGHT_BLUE_CARPET = new Blocks("light blue carpet", (short)371, new BlockData(171, 3), new BlockData(171, 3), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(YELLOW_CARPET = new Blocks("yellow carpet", (short)372, new BlockData(171, 4), new BlockData(171, 4), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(LIME_CARPET = new Blocks("lime carpet", (short)373, new BlockData(171, 5), new BlockData(171, 5), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(PINK_CARPET = new Blocks("pink carpet", (short)374, new BlockData(171, 6), new BlockData(171, 6), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(GRAY_CARPET = new Blocks("gray carpet", (short)375, new BlockData(171, 7), new BlockData(171, 7), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(LIGHT_GRAY_CARPET = new Blocks("light gray carpet", (short)376, new BlockData(171, 8), new BlockData(171, 8), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(CYAN_CARPET = new Blocks("cyan carpet", (short)377, new BlockData(171, 9), new BlockData(171, 9), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(PURPLE_CARPET = new Blocks("purple carpet", (short)378, new BlockData(171, 10), new BlockData(171, 10), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(BLUE_CARPET = new Blocks("blue carpet", (short)379, new BlockData(171, 11), new BlockData(171, 11), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(BROWN_CARPET = new Blocks("brown carpet", (short)380, new BlockData(171, 12), new BlockData(171, 12), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(GREEN_CARPET = new Blocks("green carpet", (short)381, new BlockData(171, 13), new BlockData(171, 13), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(RED_CARPET = new Blocks("red carpet", (short)382, new BlockData(171, 14), new BlockData(171, 14), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(BLACK_CARPET = new Blocks("black carpet", (short)383, new BlockData(171, 15), new BlockData(171, 15), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(DANDELION = new Blocks("dandelion", (short)384, new BlockData(37, 0), new BlockData(37, 0), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(POPPY = new Blocks("poppy", (short)385, new BlockData(38, 0), new BlockData(38, 0), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(BLUE_ORCHID = new Blocks("blue orchid", (short)386, new BlockData(38, 1), new BlockData(38, 1), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(ALLIUM = new Blocks("allium", (short)387, new BlockData(38, 2), new BlockData(38, 2), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(AZURE_BLUET = new Blocks("azure bluet", (short)388, new BlockData(38, 3), new BlockData(38, 3), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(RED_TULIP = new Blocks("red tulip", (short)389, new BlockData(38, 4), new BlockData(38, 4), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(ORANGE_TULIP = new Blocks("orange tulip", (short)390, new BlockData(38, 5), new BlockData(38, 5), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(WHITE_TULIP = new Blocks("white tulip", (short)391, new BlockData(38, 6), new BlockData(38, 6), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(PINK_TULIP = new Blocks("pink tulip", (short)392, new BlockData(38, 7), new BlockData(38, 7), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(OXEYE_DAISY = new Blocks("oxeye daisy", (short)393, new BlockData(38, 8), new BlockData(38, 8), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(SUNFLOWER_BOTTOM = new Blocks("sunflower bottom", (short)394, new BlockData(175, 0), new BlockData(175, 0), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(LILIAC_BOTTOM = new Blocks("liliac bottom", (short)395, new BlockData(175, 1), new BlockData(175, 1), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(DOUBLE_TALLGRASS_BOTTOM = new Blocks("double tallgrass bottom", (short)396, new BlockData(175, 2), new BlockData(175, 2), false, (double)0, (double)0, (byte)0, (byte)0, true));
        add(LARGE_FERN_BOTTOM = new Blocks("large fern bottom", (short)397, new BlockData(175, 3), new BlockData(175, 3), false, (double)0, (double)0, (byte)0, (byte)0, true));
        add(ROSE_BUSH_BOTTOM = new Blocks("rose bush bottom", (short)398, new BlockData(175, 4), new BlockData(175, 4), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(PEONY_BOTTOM = new Blocks("peony bottom", (short)399, new BlockData(175, 5), new BlockData(175, 5), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(SUNFLOWER_TOP = new Blocks("sunflower top", (short)400, new BlockData(175, 8), new BlockData(175, 8), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(LILIAC_TOP = new Blocks("liliac top", (short)401, new BlockData(175, 9), new BlockData(175, 9), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(DOUBLE_TALLGRASS_TOP = new Blocks("double tallgrass top", (short)402, new BlockData(175, 10), new BlockData(175, 10), false, (double)0, (double)0, (byte)0, (byte)0, true));
        add(LARGE_FERN_TOP = new Blocks("large fern top", (short)403, new BlockData(175, 11), new BlockData(175, 11), false, (double)0, (double)0, (byte)0, (byte)0, true));
        add(ROSE_BUSH_TOP = new Blocks("rose bush top", (short)404, new BlockData(175, 12), new BlockData(175, 12), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(PEONY_TOP = new Blocks("peony top", (short)405, new BlockData(175, 13), new BlockData(175, 13), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(BROWN_MUSHROOM = new Blocks("brown mushroom", (short)406, new BlockData(39, 0), new BlockData(39, 0), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(RED_MUSHROOM = new Blocks("red mushroom", (short)407, new BlockData(40, 0), new BlockData(40, 0), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(TALL_GRASS = new Blocks("tall grass", (short)408, new BlockData(31, 1), new BlockData(31, 0), false, (double)0, (double)0, (byte)0, (byte)0, true));
        add(FERN = new Blocks("fern", (short)409, new BlockData(31, 2), new BlockData(31, 2), false, (double)0, (double)0, (byte)0, (byte)0, true));
        add(DEAD_BUSH = new Blocks("dead bush", (short)410, new BlockData(32, 0), new BlockData(32, 0), false, (double)0, (double)0, (byte)0, (byte)0, true));
        add(STONE_SLAB = new Blocks("stone slab", (short)411, new BlockData(44, 0), new BlockData(44, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(SANDSTONE_SLAB = new Blocks("sandstone slab", (short)412, new BlockData(44, 1), new BlockData(44, 1), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(STONE_WOODEN_SLAB = new Blocks("stone wooden slab", (short)413, new BlockData(44, 2), new BlockData(44, 2), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(COBBLESTONE_SLAB = new Blocks("cobblestone slab", (short)414, new BlockData(44, 3), new BlockData(44, 3), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(BRICKS_SLAB = new Blocks("bricks slab", (short)415, new BlockData(44, 4), new BlockData(44, 4), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(STONE_BRICK_SLAB = new Blocks("stone brick slab", (short)416, new BlockData(44, 5), new BlockData(44, 5), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(NETHER_BRICK_SLAB = new Blocks("nether brick slab", (short)417, new BlockData(44, 6), new BlockData(44, 7), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(QUARTZ_SLAB = new Blocks("quartz slab", (short)418, new BlockData(44, 7), new BlockData(44, 6), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(RED_SANDSTONE_SLAB = new Blocks("red sandstone slab", (short)419, new BlockData(182, 0), new BlockData(182, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_SLAB = new Blocks("purpur slab", (short)420, new BlockData(205, 0), new BlockData(205, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(OAK_WOOD_SLAB = new Blocks("oak wood slab", (short)421, new BlockData(126, 0), new BlockData(158, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_SLAB = new Blocks("spruce wood slab", (short)422, new BlockData(126, 1), new BlockData(158, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_SLAB = new Blocks("birch wood slab", (short)423, new BlockData(126, 2), new BlockData(158, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_SLAB = new Blocks("jungle wood slab", (short)424, new BlockData(126, 3), new BlockData(158, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_SLAB = new Blocks("acacia wood slab", (short)425, new BlockData(126, 4), new BlockData(158, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_SLAB = new Blocks("dark oak wood slab", (short)426, new BlockData(126, 5), new BlockData(158, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPPER_STONE_SLAB = new Blocks("upper stone slab", (short)427, new BlockData(44, 8), new BlockData(44, 8), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_SANDSTONE_SLAB = new Blocks("upper sandstone slab", (short)428, new BlockData(44, 9), new BlockData(44, 9), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_STONE_WOODEN_SLAB = new Blocks("upper stone wooden slab", (short)429, new BlockData(44, 10), new BlockData(44, 10), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_COBBLESTONE_SLAB = new Blocks("upper cobblestone slab", (short)430, new BlockData(44, 11), new BlockData(44, 11), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_BRICKS_SLAB = new Blocks("upper bricks slab", (short)431, new BlockData(44, 12), new BlockData(44, 12), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_STONE_BRICK_SLAB = new Blocks("upper stone brick slab", (short)432, new BlockData(44, 13), new BlockData(44, 13), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_NETHER_BRICK_SLAB = new Blocks("upper nether brick slab", (short)433, new BlockData(44, 14), new BlockData(44, 15), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_QUARTZ_SLAB = new Blocks("upper quartz slab", (short)434, new BlockData(44, 15), new BlockData(44, 14), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_RED_SANDSTONE_SLAB = new Blocks("upper red sandstone slab", (short)435, new BlockData(182, 8), new BlockData(182, 8), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_PURPUR_SLAB = new Blocks("upper purpur slab", (short)436, new BlockData(205, 8), new BlockData(205, 8), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPPER_OAK_WOOD_SLAB = new Blocks("upper oak wood slab", (short)437, new BlockData(126, 8), new BlockData(158, 8), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPPER_SPRUCE_WOOD_SLAB = new Blocks("upper spruce wood slab", (short)438, new BlockData(126, 9), new BlockData(158, 9), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPPER_BIRCH_WOOD_SLAB = new Blocks("upper birch wood slab", (short)439, new BlockData(126, 10), new BlockData(158, 10), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPPER_JUNGLE_WOOD_SLAB = new Blocks("upper jungle wood slab", (short)440, new BlockData(126, 11), new BlockData(158, 11), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPPER_ACACIA_WOOD_SLAB = new Blocks("upper acacia wood slab", (short)441, new BlockData(126, 12), new BlockData(158, 12), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPPER_DARK_OAK_WOOD_SLAB = new Blocks("upper dark oak wood slab", (short)442, new BlockData(126, 13), new BlockData(158, 13), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DOUBLE_STONE_SLAB = new Blocks("double stone slab", (short)443, new BlockData(43, 0), new BlockData(43, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_SANDSTONE_SLAB = new Blocks("double sandstone slab", (short)444, new BlockData(43, 1), new BlockData(43, 1), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_STONE_WOODEN_SLAB = new Blocks("double stone wooden slab", (short)445, new BlockData(43, 2), new BlockData(43, 2), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_COBBLESTONE_SLAB = new Blocks("double cobblestone slab", (short)446, new BlockData(43, 3), new BlockData(43, 3), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_BRICKS_SLAB = new Blocks("double bricks slab", (short)447, new BlockData(43, 4), new BlockData(43, 4), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_STONE_BRICK_SLAB = new Blocks("double stone brick slab", (short)448, new BlockData(43, 5), new BlockData(43, 5), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_NETHER_BRICK_SLAB = new Blocks("double nether brick slab", (short)449, new BlockData(43, 6), new BlockData(43, 7), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_QUARTZ_SLAB = new Blocks("double quartz slab", (short)450, new BlockData(43, 7), new BlockData(43, 6), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_RED_SANDSTONE_SLAB = new Blocks("double red sandstone slab", (short)451, new BlockData(181, 0), new BlockData(181, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_PURPUR_SLAB = new Blocks("double purpur slab", (short)452, new BlockData(204, 0), new BlockData(204, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(DOUBLE_OAK_WOOD_SLAB = new Blocks("double oak wood slab", (short)453, new BlockData(125, 0), new BlockData(157, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DOUBLE_SPRUCE_WOOD_SLAB = new Blocks("double spruce wood slab", (short)454, new BlockData(125, 1), new BlockData(157, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DOUBLE_BIRCH_WOOD_SLAB = new Blocks("double birch wood slab", (short)455, new BlockData(125, 2), new BlockData(157, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DOUBLE_JUNGLE_WOOD_SLAB = new Blocks("double jungle wood slab", (short)456, new BlockData(125, 3), new BlockData(157, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DOUBLE_ACACIA_WOOD_SLAB = new Blocks("double acacia wood slab", (short)457, new BlockData(125, 4), new BlockData(157, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DOUBLE_DARK_OAK_WOOD_SLAB = new Blocks("double dark oak wood slab", (short)458, new BlockData(125, 5), new BlockData(157, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(COBBLESTONE_STAIRS_FACING_EAST = new Blocks("cobblestone stairs facing east", (short)459, new BlockData(67, 0), new BlockData(67, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(COBBLESTONE_STAIRS_FACING_WEST = new Blocks("cobblestone stairs facing west", (short)460, new BlockData(67, 1), new BlockData(67, 1), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(COBBLESTONE_STAIRS_FACING_SOUTH = new Blocks("cobblestone stairs facing south", (short)461, new BlockData(67, 2), new BlockData(67, 2), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(COBBLESTONE_STAIRS_FACING_NORTH = new Blocks("cobblestone stairs facing north", (short)462, new BlockData(67, 3), new BlockData(67, 3), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_EAST = new Blocks("upside down cobblestone stairs facing east", (short)463, new BlockData(67, 4), new BlockData(67, 4), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_WEST = new Blocks("upside down cobblestone stairs facing west", (short)464, new BlockData(67, 5), new BlockData(67, 5), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_SOUTH = new Blocks("upside down cobblestone stairs facing south", (short)465, new BlockData(67, 6), new BlockData(67, 6), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_COBBLESTONE_STAIRS_FACING_NORTH = new Blocks("upside down cobblestone stairs facing north", (short)466, new BlockData(67, 7), new BlockData(67, 7), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(BRICK_STAIRS_FACING_EAST = new Blocks("brick stairs facing east", (short)467, new BlockData(108, 0), new BlockData(108, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(BRICK_STAIRS_FACING_WEST = new Blocks("brick stairs facing west", (short)468, new BlockData(108, 1), new BlockData(108, 1), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(BRICK_STAIRS_FACING_SOUTH = new Blocks("brick stairs facing south", (short)469, new BlockData(108, 2), new BlockData(108, 2), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(BRICK_STAIRS_FACING_NORTH = new Blocks("brick stairs facing north", (short)470, new BlockData(108, 3), new BlockData(108, 3), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BRICK_STAIRS_FACING_EAST = new Blocks("upside down brick stairs facing east", (short)471, new BlockData(108, 4), new BlockData(108, 4), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BRICK_STAIRS_FACING_WEST = new Blocks("upside down brick stairs facing west", (short)472, new BlockData(108, 5), new BlockData(108, 5), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BRICK_STAIRS_FACING_SOUTH = new Blocks("upside down brick stairs facing south", (short)473, new BlockData(108, 6), new BlockData(108, 6), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BRICK_STAIRS_FACING_NORTH = new Blocks("upside down brick stairs facing north", (short)474, new BlockData(108, 7), new BlockData(108, 7), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(NETHER_BRICK_STAIRS_FACING_EAST = new Blocks("nether brick stairs facing east", (short)475, new BlockData(114, 0), new BlockData(114, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(NETHER_BRICK_STAIRS_FACING_WEST = new Blocks("nether brick stairs facing west", (short)476, new BlockData(114, 1), new BlockData(114, 1), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(NETHER_BRICK_STAIRS_FACING_SOUTH = new Blocks("nether brick stairs facing south", (short)477, new BlockData(114, 2), new BlockData(114, 2), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(NETHER_BRICK_STAIRS_FACING_NORTH = new Blocks("nether brick stairs facing north", (short)478, new BlockData(114, 3), new BlockData(114, 3), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_EAST = new Blocks("upside down nether brick stairs facing east", (short)479, new BlockData(114, 4), new BlockData(114, 4), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_WEST = new Blocks("upside down nether brick stairs facing west", (short)480, new BlockData(114, 5), new BlockData(114, 5), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_SOUTH = new Blocks("upside down nether brick stairs facing south", (short)481, new BlockData(114, 6), new BlockData(114, 6), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_NETHER_BRICK_STAIRS_FACING_NORTH = new Blocks("upside down nether brick stairs facing north", (short)482, new BlockData(114, 7), new BlockData(114, 7), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(STONE_BRICK_STAIRS_FACING_EAST = new Blocks("stone brick stairs facing east", (short)483, new BlockData(109, 0), new BlockData(109, 0), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(STONE_BRICK_STAIRS_FACING_WEST = new Blocks("stone brick stairs facing west", (short)484, new BlockData(109, 1), new BlockData(109, 1), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(STONE_BRICK_STAIRS_FACING_SOUTH = new Blocks("stone brick stairs facing south", (short)485, new BlockData(109, 2), new BlockData(109, 2), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(STONE_BRICK_STAIRS_FACING_NORTH = new Blocks("stone brick stairs facing north", (short)486, new BlockData(109, 3), new BlockData(109, 3), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_EAST = new Blocks("upside down stone brick stairs facing east", (short)487, new BlockData(109, 4), new BlockData(109, 4), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_WEST = new Blocks("upside down stone brick stairs facing west", (short)488, new BlockData(109, 5), new BlockData(109, 5), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_SOUTH = new Blocks("upside down stone brick stairs facing south", (short)489, new BlockData(109, 6), new BlockData(109, 6), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_STONE_BRICK_STAIRS_FACING_NORTH = new Blocks("upside down stone brick stairs facing north", (short)490, new BlockData(109, 7), new BlockData(109, 7), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_STAIRS_FACING_EAST = new Blocks("purpur stairs facing east", (short)491, new BlockData(203, 0), new BlockData(203, 0), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_STAIRS_FACING_WEST = new Blocks("purpur stairs facing west", (short)492, new BlockData(203, 1), new BlockData(203, 1), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_STAIRS_FACING_SOUTH = new Blocks("purpur stairs facing south", (short)493, new BlockData(203, 2), new BlockData(203, 2), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_STAIRS_FACING_NORTH = new Blocks("purpur stairs facing north", (short)494, new BlockData(203, 3), new BlockData(203, 3), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_PURPUR_STAIRS_FACING_EAST = new Blocks("upside down purpur stairs facing east", (short)495, new BlockData(203, 4), new BlockData(203, 4), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_PURPUR_STAIRS_FACING_WEST = new Blocks("upside down purpur stairs facing west", (short)496, new BlockData(203, 5), new BlockData(203, 5), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_PURPUR_STAIRS_FACING_SOUTH = new Blocks("upside down purpur stairs facing south", (short)497, new BlockData(203, 6), new BlockData(203, 6), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_PURPUR_STAIRS_FACING_NORTH = new Blocks("upside down purpur stairs facing north", (short)498, new BlockData(203, 7), new BlockData(203, 7), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(QUARTZ_STAIRS_FACING_EAST = new Blocks("quartz stairs facing east", (short)499, new BlockData(156, 0), new BlockData(156, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(QUARTZ_STAIRS_FACING_WEST = new Blocks("quartz stairs facing west", (short)500, new BlockData(156, 1), new BlockData(156, 1), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(QUARTZ_STAIRS_FACING_SOUTH = new Blocks("quartz stairs facing south", (short)501, new BlockData(156, 2), new BlockData(156, 2), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(QUARTZ_STAIRS_FACING_NORTH = new Blocks("quartz stairs facing north", (short)502, new BlockData(156, 3), new BlockData(156, 3), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_QUARTZ_STAIRS_FACING_EAST = new Blocks("upside down quartz stairs facing east", (short)503, new BlockData(156, 4), new BlockData(156, 4), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_QUARTZ_STAIRS_FACING_WEST = new Blocks("upside down quartz stairs facing west", (short)504, new BlockData(156, 5), new BlockData(156, 5), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_QUARTZ_STAIRS_FACING_SOUTH = new Blocks("upside down quartz stairs facing south", (short)505, new BlockData(156, 6), new BlockData(156, 6), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_QUARTZ_STAIRS_FACING_NORTH = new Blocks("upside down quartz stairs facing north", (short)506, new BlockData(156, 7), new BlockData(156, 7), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(SANDSTONE_STAIRS_FACING_EAST = new Blocks("sandstone stairs facing east", (short)507, new BlockData(128, 0), new BlockData(128, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(SANDSTONE_STAIRS_FACING_WEST = new Blocks("sandstone stairs facing west", (short)508, new BlockData(128, 1), new BlockData(128, 1), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(SANDSTONE_STAIRS_FACING_SOUTH = new Blocks("sandstone stairs facing south", (short)509, new BlockData(128, 2), new BlockData(128, 2), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(SANDSTONE_STAIRS_FACING_NORTH = new Blocks("sandstone stairs facing north", (short)510, new BlockData(128, 3), new BlockData(128, 3), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_EAST = new Blocks("upside down sandstone stairs facing east", (short)511, new BlockData(128, 4), new BlockData(128, 4), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_WEST = new Blocks("upside down sandstone stairs facing west", (short)512, new BlockData(128, 5), new BlockData(128, 5), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_SOUTH = new Blocks("upside down sandstone stairs facing south", (short)513, new BlockData(128, 6), new BlockData(128, 6), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SANDSTONE_STAIRS_FACING_NORTH = new Blocks("upside down sandstone stairs facing north", (short)514, new BlockData(128, 7), new BlockData(128, 7), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(RED_SANDSTONE_STAIRS_FACING_EAST = new Blocks("red sandstone stairs facing east", (short)515, new BlockData(180, 0), new BlockData(180, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(RED_SANDSTONE_STAIRS_FACING_WEST = new Blocks("red sandstone stairs facing west", (short)516, new BlockData(180, 1), new BlockData(180, 1), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(RED_SANDSTONE_STAIRS_FACING_SOUTH = new Blocks("red sandstone stairs facing south", (short)517, new BlockData(180, 2), new BlockData(180, 2), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(RED_SANDSTONE_STAIRS_FACING_NORTH = new Blocks("red sandstone stairs facing north", (short)518, new BlockData(180, 3), new BlockData(180, 3), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_EAST = new Blocks("upside down red sandstone stairs facing east", (short)519, new BlockData(180, 4), new BlockData(180, 4), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_WEST = new Blocks("upside down red sandstone stairs facing west", (short)520, new BlockData(180, 5), new BlockData(180, 5), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_SOUTH = new Blocks("upside down red sandstone stairs facing south", (short)521, new BlockData(180, 6), new BlockData(180, 6), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_RED_SANDSTONE_STAIRS_FACING_NORTH = new Blocks("upside down red sandstone stairs facing north", (short)522, new BlockData(180, 7), new BlockData(180, 7), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(OAK_WOOD_STAIRS_FACING_EAST = new Blocks("oak wood stairs facing east", (short)523, new BlockData(53, 0), new BlockData(53, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(OAK_WOOD_STAIRS_FACING_WEST = new Blocks("oak wood stairs facing west", (short)524, new BlockData(53, 1), new BlockData(53, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(OAK_WOOD_STAIRS_FACING_SOUTH = new Blocks("oak wood stairs facing south", (short)525, new BlockData(53, 2), new BlockData(53, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(OAK_WOOD_STAIRS_FACING_NORTH = new Blocks("oak wood stairs facing north", (short)526, new BlockData(53, 3), new BlockData(53, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_EAST = new Blocks("upside down oak wood stairs facing east", (short)527, new BlockData(53, 4), new BlockData(53, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_WEST = new Blocks("upside down oak wood stairs facing west", (short)528, new BlockData(53, 5), new BlockData(53, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_SOUTH = new Blocks("upside down oak wood stairs facing south", (short)529, new BlockData(53, 6), new BlockData(53, 6), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_OAK_WOOD_STAIRS_FACING_NORTH = new Blocks("upside down oak wood stairs facing north", (short)530, new BlockData(53, 7), new BlockData(53, 7), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_STAIRS_FACING_EAST = new Blocks("spruce wood stairs facing east", (short)531, new BlockData(134, 0), new BlockData(134, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_STAIRS_FACING_WEST = new Blocks("spruce wood stairs facing west", (short)532, new BlockData(134, 1), new BlockData(134, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_STAIRS_FACING_SOUTH = new Blocks("spruce wood stairs facing south", (short)533, new BlockData(134, 2), new BlockData(134, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_STAIRS_FACING_NORTH = new Blocks("spruce wood stairs facing north", (short)534, new BlockData(134, 3), new BlockData(134, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_EAST = new Blocks("upside down spruce wood stairs facing east", (short)535, new BlockData(134, 4), new BlockData(134, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_WEST = new Blocks("upside down spruce wood stairs facing west", (short)536, new BlockData(134, 5), new BlockData(134, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_SOUTH = new Blocks("upside down spruce wood stairs facing south", (short)537, new BlockData(134, 6), new BlockData(134, 6), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_SPRUCE_WOOD_STAIRS_FACING_NORTH = new Blocks("upside down spruce wood stairs facing north", (short)538, new BlockData(134, 7), new BlockData(134, 7), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_STAIRS_FACING_EAST = new Blocks("birch wood stairs facing east", (short)539, new BlockData(135, 0), new BlockData(135, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_STAIRS_FACING_WEST = new Blocks("birch wood stairs facing west", (short)540, new BlockData(135, 1), new BlockData(135, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_STAIRS_FACING_SOUTH = new Blocks("birch wood stairs facing south", (short)541, new BlockData(135, 2), new BlockData(135, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_STAIRS_FACING_NORTH = new Blocks("birch wood stairs facing north", (short)542, new BlockData(135, 3), new BlockData(135, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_EAST = new Blocks("upside down birch wood stairs facing east", (short)543, new BlockData(135, 4), new BlockData(135, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_WEST = new Blocks("upside down birch wood stairs facing west", (short)544, new BlockData(135, 5), new BlockData(135, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_SOUTH = new Blocks("upside down birch wood stairs facing south", (short)545, new BlockData(135, 6), new BlockData(135, 6), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_BIRCH_WOOD_STAIRS_FACING_NORTH = new Blocks("upside down birch wood stairs facing north", (short)546, new BlockData(135, 7), new BlockData(135, 7), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_STAIRS_FACING_EAST = new Blocks("jungle wood stairs facing east", (short)547, new BlockData(136, 0), new BlockData(136, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_STAIRS_FACING_WEST = new Blocks("jungle wood stairs facing west", (short)548, new BlockData(136, 1), new BlockData(136, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_STAIRS_FACING_SOUTH = new Blocks("jungle wood stairs facing south", (short)549, new BlockData(136, 2), new BlockData(136, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_STAIRS_FACING_NORTH = new Blocks("jungle wood stairs facing north", (short)550, new BlockData(136, 3), new BlockData(136, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_EAST = new Blocks("upside down jungle wood stairs facing east", (short)551, new BlockData(136, 4), new BlockData(136, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_WEST = new Blocks("upside down jungle wood stairs facing west", (short)552, new BlockData(136, 5), new BlockData(136, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_SOUTH = new Blocks("upside down jungle wood stairs facing south", (short)553, new BlockData(136, 6), new BlockData(136, 6), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_JUNGLE_WOOD_STAIRS_FACING_NORTH = new Blocks("upside down jungle wood stairs facing north", (short)554, new BlockData(136, 7), new BlockData(136, 7), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_STAIRS_FACING_EAST = new Blocks("acacia wood stairs facing east", (short)555, new BlockData(163, 0), new BlockData(163, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_STAIRS_FACING_WEST = new Blocks("acacia wood stairs facing west", (short)556, new BlockData(163, 1), new BlockData(163, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_STAIRS_FACING_SOUTH = new Blocks("acacia wood stairs facing south", (short)557, new BlockData(163, 2), new BlockData(163, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_STAIRS_FACING_NORTH = new Blocks("acacia wood stairs facing north", (short)558, new BlockData(163, 3), new BlockData(163, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_EAST = new Blocks("upside down acacia wood stairs facing east", (short)559, new BlockData(163, 4), new BlockData(163, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_WEST = new Blocks("upside down acacia wood stairs facing west", (short)560, new BlockData(163, 5), new BlockData(163, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_SOUTH = new Blocks("upside down acacia wood stairs facing south", (short)561, new BlockData(163, 6), new BlockData(163, 6), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_ACACIA_WOOD_STAIRS_FACING_NORTH = new Blocks("upside down acacia wood stairs facing north", (short)562, new BlockData(163, 7), new BlockData(163, 7), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_STAIRS_FACING_EAST = new Blocks("dark oak wood stairs facing east", (short)563, new BlockData(164, 0), new BlockData(164, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_STAIRS_FACING_WEST = new Blocks("dark oak wood stairs facing west", (short)564, new BlockData(164, 1), new BlockData(164, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_STAIRS_FACING_SOUTH = new Blocks("dark oak wood stairs facing south", (short)565, new BlockData(164, 2), new BlockData(164, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_STAIRS_FACING_NORTH = new Blocks("dark oak wood stairs facing north", (short)566, new BlockData(164, 3), new BlockData(164, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_EAST = new Blocks("upside down dark oak wood stairs facing east", (short)567, new BlockData(164, 4), new BlockData(164, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_WEST = new Blocks("upside down dark oak wood stairs facing west", (short)568, new BlockData(164, 5), new BlockData(164, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_SOUTH = new Blocks("upside down dark oak wood stairs facing south", (short)569, new BlockData(164, 6), new BlockData(164, 6), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(UPSIDE_DOWN_DARK_OAK_WOOD_STAIRS_FACING_NORTH = new Blocks("upside down dark oak wood stairs facing north", (short)570, new BlockData(164, 7), new BlockData(164, 7), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(COBWEB = new Blocks("cobweb", (short)571, new BlockData(30, 0), new BlockData(30, 0), true, (double)4, (double)20, (byte)1, (byte)0, false));
        add(TNT = new Blocks("tnt", (short)572, new BlockData(46, 0), new BlockData(46, 0), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(BOOKSHELF = new Blocks("bookshelf", (short)573, new BlockData(47, 0), new BlockData(47, 0), true, (double)1.5, (double)7.5, (byte)15, (byte)0, false));
        add(OBSIDIAN = new Blocks("obsidian", (short)574, new BlockData(49, 0), new BlockData(49, 0), true, (double)50, (double)6000, (byte)15, (byte)0, false));
        add(GLOWING_OBSIDIAN = new Blocks("glowing obsidian", (short)575, null, new BlockData(246, 0), true, (double)50, (double)6000, (byte)15, (byte)0, false));
        add(TORCH_FACING_EAST = new Blocks("torch facing east", (short)576, new BlockData(50, 1), new BlockData(50, 1), false, (double)0, (double)0, (byte)15, (byte)14, false));
        add(TORCH_FACING_WEST = new Blocks("torch facing west", (short)577, new BlockData(50, 2), new BlockData(50, 2), false, (double)0, (double)0, (byte)15, (byte)14, false));
        add(TORCH_FACING_SOUTH = new Blocks("torch facing south", (short)578, new BlockData(50, 3), new BlockData(50, 3), false, (double)0, (double)0, (byte)15, (byte)14, false));
        add(TORCH_FACING_NORTH = new Blocks("torch facing north", (short)579, new BlockData(50, 4), new BlockData(50, 4), false, (double)0, (double)0, (byte)15, (byte)14, false));
        add(TORCH_FACING_UP = new Blocks("torch facing up", (short)580, new BlockData(50, 5), new BlockData(50, 5), false, (double)0, (double)0, (byte)15, (byte)14, false));
        add(REDSTONE_TORCH_FACING_EAST = new Blocks("redstone torch facing east", (short)581, new BlockData(76, 1), new BlockData(76, 1), false, (double)0, (double)0, (byte)15, (byte)7, false));
        add(REDSTONE_TORCH_FACING_WEST = new Blocks("redstone torch facing west", (short)582, new BlockData(76, 2), new BlockData(76, 2), false, (double)0, (double)0, (byte)15, (byte)7, false));
        add(REDSTONE_TORCH_FACING_SOUTH = new Blocks("redstone torch facing south", (short)583, new BlockData(76, 3), new BlockData(76, 3), false, (double)0, (double)0, (byte)15, (byte)7, false));
        add(REDSTONE_TORCH_FACING_NORTH = new Blocks("redstone torch facing north", (short)584, new BlockData(76, 4), new BlockData(76, 4), false, (double)0, (double)0, (byte)15, (byte)7, false));
        add(REDSTONE_TORCH_FACING_UP = new Blocks("redstone torch facing up", (short)585, new BlockData(76, 5), new BlockData(76, 5), false, (double)0, (double)0, (byte)15, (byte)7, false));
        add(INACTIVE_REDSTONE_TORCH_FACING_EAST = new Blocks("inactive redstone torch facing east", (short)586, new BlockData(75, 1), new BlockData(75, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(INACTIVE_REDSTONE_TORCH_FACING_WEST = new Blocks("inactive redstone torch facing west", (short)587, new BlockData(75, 2), new BlockData(75, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(INACTIVE_REDSTONE_TORCH_FACING_SOUTH = new Blocks("inactive redstone torch facing south", (short)588, new BlockData(75, 3), new BlockData(75, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(INACTIVE_REDSTONE_TORCH_FACING_NORTH = new Blocks("inactive redstone torch facing north", (short)589, new BlockData(75, 4), new BlockData(75, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(INACTIVE_REDSTONE_TORCH_FACING_UP = new Blocks("inactive redstone torch facing up", (short)590, new BlockData(75, 5), new BlockData(75, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(FIRE_0 = new Blocks("fire 0", (short)591, new BlockData(51, 0), new BlockData(51, 0), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(MONSTER_SPAWNER = new Blocks("monster spawner", (short)592, new BlockData(52, 0), new BlockData(52, 0), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(CHEST_FACING_NORTH = new Blocks("chest facing north", (short)593, new BlockData(54, 2), new BlockData(54, 2), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(CHEST_FACING_SOUTH = new Blocks("chest facing south", (short)594, new BlockData(54, 3), new BlockData(54, 3), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(CHEST_FACING_WEST = new Blocks("chest facing west", (short)595, new BlockData(54, 4), new BlockData(54, 4), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(CHEST_FACING_EAST = new Blocks("chest facing east", (short)596, new BlockData(54, 5), new BlockData(54, 5), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(TRAPPED_CHEST_FACING_NORTH = new Blocks("trapped chest facing north", (short)597, new BlockData(146, 2), new BlockData(146, 2), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(TRAPPED_CHEST_FACING_SOUTH = new Blocks("trapped chest facing south", (short)598, new BlockData(146, 3), new BlockData(146, 3), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(TRAPPED_CHEST_FACING_WEST = new Blocks("trapped chest facing west", (short)599, new BlockData(146, 4), new BlockData(146, 4), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(TRAPPED_CHEST_FACING_EAST = new Blocks("trapped chest facing east", (short)600, new BlockData(146, 5), new BlockData(146, 5), true, (double)2.5, (double)12.5, (byte)0, (byte)0, false));
        add(ENDER_CHEST_FACING_NORTH = new Blocks("ender chest facing north", (short)601, new BlockData(130, 2), new BlockData(130, 2), true, (double)22.5, (double)3000, (byte)0, (byte)7, false));
        add(ENDER_CHEST_FACING_SOUTH = new Blocks("ender chest facing south", (short)602, new BlockData(130, 3), new BlockData(130, 3), true, (double)22.5, (double)3000, (byte)0, (byte)7, false));
        add(ENDER_CHEST_FACING_WEST = new Blocks("ender chest facing west", (short)603, new BlockData(130, 4), new BlockData(130, 4), true, (double)22.5, (double)3000, (byte)0, (byte)7, false));
        add(ENDER_CHEST_FACING_EAST = new Blocks("ender chest facing east", (short)604, new BlockData(130, 5), new BlockData(130, 5), true, (double)22.5, (double)3000, (byte)0, (byte)7, false));
        add(REDSTONE_WIRE_0 = new Blocks("redstone wire 0", (short)605, new BlockData(55, 0), new BlockData(55, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_1 = new Blocks("redstone wire 1", (short)606, new BlockData(55, 1), new BlockData(55, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_2 = new Blocks("redstone wire 2", (short)607, new BlockData(55, 2), new BlockData(55, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_3 = new Blocks("redstone wire 3", (short)608, new BlockData(55, 3), new BlockData(55, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_4 = new Blocks("redstone wire 4", (short)609, new BlockData(55, 4), new BlockData(55, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_5 = new Blocks("redstone wire 5", (short)610, new BlockData(55, 5), new BlockData(55, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_6 = new Blocks("redstone wire 6", (short)611, new BlockData(55, 6), new BlockData(55, 6), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_7 = new Blocks("redstone wire 7", (short)612, new BlockData(55, 7), new BlockData(55, 7), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_8 = new Blocks("redstone wire 8", (short)613, new BlockData(55, 8), new BlockData(55, 8), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_9 = new Blocks("redstone wire 9", (short)614, new BlockData(55, 9), new BlockData(55, 9), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_10 = new Blocks("redstone wire 10", (short)615, new BlockData(55, 10), new BlockData(55, 10), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_11 = new Blocks("redstone wire 11", (short)616, new BlockData(55, 11), new BlockData(55, 11), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_12 = new Blocks("redstone wire 12", (short)617, new BlockData(55, 12), new BlockData(55, 12), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_13 = new Blocks("redstone wire 13", (short)618, new BlockData(55, 13), new BlockData(55, 13), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_14 = new Blocks("redstone wire 14", (short)619, new BlockData(55, 14), new BlockData(55, 14), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REDSTONE_WIRE_15 = new Blocks("redstone wire 15", (short)620, new BlockData(55, 15), new BlockData(55, 15), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CRAFTING_TABLE = new Blocks("crafting table", (short)621, new BlockData(58, 0), new BlockData(58, 0), true, (double)2.5, (double)12.5, (byte)15, (byte)0, false));
        add(SEEDS_0 = new Blocks("seeds 0", (short)622, new BlockData(59, 0), new BlockData(59, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SEEDS_1 = new Blocks("seeds 1", (short)623, new BlockData(59, 1), new BlockData(59, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SEEDS_2 = new Blocks("seeds 2", (short)624, new BlockData(59, 2), new BlockData(59, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SEEDS_3 = new Blocks("seeds 3", (short)625, new BlockData(59, 3), new BlockData(59, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SEEDS_4 = new Blocks("seeds 4", (short)626, new BlockData(59, 4), new BlockData(59, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SEEDS_5 = new Blocks("seeds 5", (short)627, new BlockData(59, 5), new BlockData(59, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SEEDS_6 = new Blocks("seeds 6", (short)628, new BlockData(59, 6), new BlockData(59, 6), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SEEDS_7 = new Blocks("seeds 7", (short)629, new BlockData(59, 7), new BlockData(59, 7), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(BEETROOT_0 = new Blocks("beetroot 0", (short)630, new BlockData(207, 0), new BlockData(244, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(BEETROOT_1 = new Blocks("beetroot 1", (short)631, new BlockData(207, 1), new BlockData(244, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(BEETROOT_2 = new Blocks("beetroot 2", (short)632, new BlockData(207, 2), new BlockData(244, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(BEETROOT_3 = new Blocks("beetroot 3", (short)633, new BlockData(207, 3), new BlockData(244, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_0 = new Blocks("carrot 0", (short)634, new BlockData(141, 0), new BlockData(141, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_1 = new Blocks("carrot 1", (short)635, new BlockData(141, 1), new BlockData(141, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_2 = new Blocks("carrot 2", (short)636, new BlockData(141, 2), new BlockData(141, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_3 = new Blocks("carrot 3", (short)637, new BlockData(141, 3), new BlockData(141, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_4 = new Blocks("carrot 4", (short)638, new BlockData(141, 4), new BlockData(141, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_5 = new Blocks("carrot 5", (short)639, new BlockData(141, 5), new BlockData(141, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_6 = new Blocks("carrot 6", (short)640, new BlockData(141, 6), new BlockData(141, 6), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CARROT_7 = new Blocks("carrot 7", (short)641, new BlockData(141, 7), new BlockData(141, 7), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_0 = new Blocks("potato 0", (short)642, new BlockData(142, 0), new BlockData(142, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_1 = new Blocks("potato 1", (short)643, new BlockData(142, 1), new BlockData(142, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_2 = new Blocks("potato 2", (short)644, new BlockData(142, 2), new BlockData(142, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_3 = new Blocks("potato 3", (short)645, new BlockData(142, 3), new BlockData(142, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_4 = new Blocks("potato 4", (short)646, new BlockData(142, 4), new BlockData(142, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_5 = new Blocks("potato 5", (short)647, new BlockData(142, 5), new BlockData(142, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_6 = new Blocks("potato 6", (short)648, new BlockData(142, 6), new BlockData(142, 6), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POTATO_7 = new Blocks("potato 7", (short)649, new BlockData(142, 7), new BlockData(142, 7), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_0 = new Blocks("melon stem 0", (short)650, new BlockData(105, 0), new BlockData(105, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_1 = new Blocks("melon stem 1", (short)651, new BlockData(105, 1), new BlockData(105, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_2 = new Blocks("melon stem 2", (short)652, new BlockData(105, 2), new BlockData(105, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_3 = new Blocks("melon stem 3", (short)653, new BlockData(105, 3), new BlockData(105, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_4 = new Blocks("melon stem 4", (short)654, new BlockData(105, 4), new BlockData(105, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_5 = new Blocks("melon stem 5", (short)655, new BlockData(105, 5), new BlockData(105, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_6 = new Blocks("melon stem 6", (short)656, new BlockData(105, 6), new BlockData(105, 6), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(MELON_STEM_7 = new Blocks("melon stem 7", (short)657, new BlockData(105, 7), new BlockData(105, 7), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_0 = new Blocks("pumpkin stem 0", (short)658, new BlockData(104, 0), new BlockData(104, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_1 = new Blocks("pumpkin stem 1", (short)659, new BlockData(104, 1), new BlockData(104, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_2 = new Blocks("pumpkin stem 2", (short)660, new BlockData(104, 2), new BlockData(104, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_3 = new Blocks("pumpkin stem 3", (short)661, new BlockData(104, 3), new BlockData(104, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_4 = new Blocks("pumpkin stem 4", (short)662, new BlockData(104, 4), new BlockData(104, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_5 = new Blocks("pumpkin stem 5", (short)663, new BlockData(104, 5), new BlockData(104, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_6 = new Blocks("pumpkin stem 6", (short)664, new BlockData(104, 6), new BlockData(104, 6), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(PUMPKIN_STEM_7 = new Blocks("pumpkin stem 7", (short)665, new BlockData(104, 7), new BlockData(104, 7), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_0 = new Blocks("sugar canes 0", (short)666, new BlockData(83, 0), new BlockData(83, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_1 = new Blocks("sugar canes 1", (short)667, new BlockData(83, 1), new BlockData(83, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_2 = new Blocks("sugar canes 2", (short)668, new BlockData(83, 2), new BlockData(83, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_3 = new Blocks("sugar canes 3", (short)669, new BlockData(83, 3), new BlockData(83, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_4 = new Blocks("sugar canes 4", (short)670, new BlockData(83, 4), new BlockData(83, 4), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_5 = new Blocks("sugar canes 5", (short)671, new BlockData(83, 5), new BlockData(83, 5), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_6 = new Blocks("sugar canes 6", (short)672, new BlockData(83, 6), new BlockData(83, 6), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_7 = new Blocks("sugar canes 7", (short)673, new BlockData(83, 7), new BlockData(83, 7), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_8 = new Blocks("sugar canes 8", (short)674, new BlockData(83, 8), new BlockData(83, 8), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_9 = new Blocks("sugar canes 9", (short)675, new BlockData(83, 9), new BlockData(83, 9), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_10 = new Blocks("sugar canes 10", (short)676, new BlockData(83, 10), new BlockData(83, 10), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_11 = new Blocks("sugar canes 11", (short)677, new BlockData(83, 11), new BlockData(83, 11), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_12 = new Blocks("sugar canes 12", (short)678, new BlockData(83, 12), new BlockData(83, 12), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_13 = new Blocks("sugar canes 13", (short)679, new BlockData(83, 13), new BlockData(83, 13), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_14 = new Blocks("sugar canes 14", (short)680, new BlockData(83, 14), new BlockData(83, 14), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(SUGAR_CANES_15 = new Blocks("sugar canes 15", (short)681, new BlockData(83, 15), new BlockData(83, 15), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(NETHER_WART_0 = new Blocks("nether wart 0", (short)682, new BlockData(115, 0), new BlockData(115, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(NETHER_WART_1 = new Blocks("nether wart 1", (short)683, new BlockData(115, 1), new BlockData(115, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(NETHER_WART_2 = new Blocks("nether wart 2", (short)684, new BlockData(115, 2), new BlockData(115, 2), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(NETHER_WART_3 = new Blocks("nether wart 3", (short)685, new BlockData(115, 3), new BlockData(115, 3), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(FURNACE_FACING_NORTH = new Blocks("furnace facing north", (short)686, new BlockData(61, 2), new BlockData(61, 2), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(FURNACE_FACING_SOUTH = new Blocks("furnace facing south", (short)687, new BlockData(61, 3), new BlockData(61, 3), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(FURNACE_FACING_WEST = new Blocks("furnace facing west", (short)688, new BlockData(61, 4), new BlockData(61, 4), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(FURNACE_FACING_EAST = new Blocks("furnace facing east", (short)689, new BlockData(61, 5), new BlockData(61, 5), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(BURNING_FURNACE_FACING_NORTH = new Blocks("burning furnace facing north", (short)690, new BlockData(62, 2), new BlockData(62, 2), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(BURNING_FURNACE_FACING_SOUTH = new Blocks("burning furnace facing south", (short)691, new BlockData(62, 3), new BlockData(62, 3), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(BURNING_FURNACE_FACING_WEST = new Blocks("burning furnace facing west", (short)692, new BlockData(62, 4), new BlockData(62, 4), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(BURNING_FURNACE_FACING_EAST = new Blocks("burning furnace facing east", (short)693, new BlockData(62, 5), new BlockData(62, 5), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(STONECUTTER = new Blocks("stonecutter", (short)694, null, new BlockData(245, 0), true, (double)3.5, (double)17.5, (byte)15, (byte)0, false));
        add(SIGN_FACING_SOUTH = new Blocks("sign facing south", (short)695, new BlockData(63, 0), new BlockData(63, 0), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_SOUTH_SOUTHWEST = new Blocks("sign facing south southwest", (short)696, new BlockData(63, 1), new BlockData(63, 1), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_SOUTHWEST = new Blocks("sign facing southwest", (short)697, new BlockData(63, 2), new BlockData(63, 2), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_WEST_WESTSOUTH = new Blocks("sign facing west westsouth", (short)698, new BlockData(63, 3), new BlockData(63, 3), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_WEST = new Blocks("sign facing west", (short)699, new BlockData(63, 4), new BlockData(63, 4), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_WEST_NORTHWEST = new Blocks("sign facing west northwest", (short)700, new BlockData(63, 5), new BlockData(63, 5), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_NORTHWEST = new Blocks("sign facing northwest", (short)701, new BlockData(63, 6), new BlockData(63, 6), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_NORTH_NORTHWEST = new Blocks("sign facing north northwest", (short)702, new BlockData(63, 7), new BlockData(63, 7), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_NORTH = new Blocks("sign facing north", (short)703, new BlockData(63, 8), new BlockData(63, 8), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_NORTH_NORTHEAST = new Blocks("sign facing north northeast", (short)704, new BlockData(63, 9), new BlockData(63, 9), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_NORTHEAST = new Blocks("sign facing northeast", (short)705, new BlockData(63, 10), new BlockData(63, 10), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_EAST_NORTHEAST = new Blocks("sign facing east northeast", (short)706, new BlockData(63, 11), new BlockData(63, 11), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_EAST = new Blocks("sign facing east", (short)707, new BlockData(63, 12), new BlockData(63, 12), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_EAST_SOUTHEAST = new Blocks("sign facing east southeast", (short)708, new BlockData(63, 13), new BlockData(63, 13), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_SOUTHEAST = new Blocks("sign facing southeast", (short)709, new BlockData(63, 14), new BlockData(63, 14), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(SIGN_FACING_SOUTH_SOUTHEAST = new Blocks("sign facing south southeast", (short)710, new BlockData(63, 15), new BlockData(63, 15), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_SIGN_FACING_NORTH = new Blocks("wall sign facing north", (short)711, new BlockData(68, 2), new BlockData(68, 2), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_SIGN_FACING_SOUTH = new Blocks("wall sign facing south", (short)712, new BlockData(68, 3), new BlockData(68, 3), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_SIGN_FACING_WEST = new Blocks("wall sign facing west", (short)713, new BlockData(68, 4), new BlockData(68, 4), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_SIGN_FACING_EAST = new Blocks("wall sign facing east", (short)714, new BlockData(68, 5), new BlockData(68, 5), false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(LOWER_OAK_WOOD_DOOR_FACING_EAST = new Blocks("lower oak wood door facing east", (short)715, new BlockData(64, 0), new BlockData(64, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OAK_WOOD_DOOR_FACING_SOUTH = new Blocks("lower oak wood door facing south", (short)716, new BlockData(64, 1), new BlockData(64, 1), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OAK_WOOD_DOOR_FACING_WEST = new Blocks("lower oak wood door facing west", (short)717, new BlockData(64, 2), new BlockData(64, 2), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OAK_WOOD_DOOR_FACING_NORTH = new Blocks("lower oak wood door facing north", (short)718, new BlockData(64, 3), new BlockData(64, 3), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_OAK_WOOD_DOOR_FACING_EAST = new Blocks("lower opened oak wood door facing east", (short)719, new BlockData(64, 4), new BlockData(64, 4), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_OAK_WOOD_DOOR_FACING_SOUTH = new Blocks("lower opened oak wood door facing south", (short)720, new BlockData(64, 5), new BlockData(64, 5), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_OAK_WOOD_DOOR_FACING_WEST = new Blocks("lower opened oak wood door facing west", (short)721, new BlockData(64, 6), new BlockData(64, 6), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_OAK_WOOD_DOOR_FACING_NORTH = new Blocks("lower opened oak wood door facing north", (short)722, new BlockData(64, 7), new BlockData(64, 7), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_OAK_WOOD_DOOR_HINGE_LEFT = new Blocks("upper oak wood door hinge left", (short)723, new BlockData(64, 8), new BlockData(64, 8), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_OAK_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper oak wood door hinge right", (short)724, new BlockData(64, 9), new BlockData(64, 9), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_OAK_WOOD_DOOR_HINGE_LEFT = new Blocks("upper powered oak wood door hinge left", (short)725, new BlockData(64, 10), new BlockData(64, 10), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_OAK_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper powered oak wood door hinge right", (short)726, new BlockData(64, 11), new BlockData(64, 11), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_SPRUCE_WOOD_DOOR_FACING_EAST = new Blocks("lower spruce wood door facing east", (short)727, new BlockData(193, 0), new BlockData(193, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_SPRUCE_WOOD_DOOR_FACING_SOUTH = new Blocks("lower spruce wood door facing south", (short)728, new BlockData(193, 1), new BlockData(193, 1), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_SPRUCE_WOOD_DOOR_FACING_WEST = new Blocks("lower spruce wood door facing west", (short)729, new BlockData(193, 2), new BlockData(193, 2), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_SPRUCE_WOOD_DOOR_FACING_NORTH = new Blocks("lower spruce wood door facing north", (short)730, new BlockData(193, 3), new BlockData(193, 3), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_EAST = new Blocks("lower opened spruce wood door facing east", (short)731, new BlockData(193, 4), new BlockData(193, 4), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_SOUTH = new Blocks("lower opened spruce wood door facing south", (short)732, new BlockData(193, 5), new BlockData(193, 5), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_WEST = new Blocks("lower opened spruce wood door facing west", (short)733, new BlockData(193, 6), new BlockData(193, 6), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_SPRUCE_WOOD_DOOR_FACING_NORTH = new Blocks("lower opened spruce wood door facing north", (short)734, new BlockData(193, 7), new BlockData(193, 7), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_SPRUCE_WOOD_DOOR_HINGE_LEFT = new Blocks("upper spruce wood door hinge left", (short)735, new BlockData(193, 8), new BlockData(193, 8), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_SPRUCE_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper spruce wood door hinge right", (short)736, new BlockData(193, 9), new BlockData(193, 9), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_SPRUCE_WOOD_DOOR_HINGE_LEFT = new Blocks("upper powered spruce wood door hinge left", (short)737, new BlockData(193, 10), new BlockData(193, 10), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_SPRUCE_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper powered spruce wood door hinge right", (short)738, new BlockData(193, 11), new BlockData(193, 11), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_BIRCH_WOOD_DOOR_FACING_EAST = new Blocks("lower birch wood door facing east", (short)739, new BlockData(194, 0), new BlockData(194, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_BIRCH_WOOD_DOOR_FACING_SOUTH = new Blocks("lower birch wood door facing south", (short)740, new BlockData(194, 1), new BlockData(194, 1), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_BIRCH_WOOD_DOOR_FACING_WEST = new Blocks("lower birch wood door facing west", (short)741, new BlockData(194, 2), new BlockData(194, 2), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_BIRCH_WOOD_DOOR_FACING_NORTH = new Blocks("lower birch wood door facing north", (short)742, new BlockData(194, 3), new BlockData(194, 3), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_EAST = new Blocks("lower opened birch wood door facing east", (short)743, new BlockData(194, 4), new BlockData(194, 4), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_SOUTH = new Blocks("lower opened birch wood door facing south", (short)744, new BlockData(194, 5), new BlockData(194, 5), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_WEST = new Blocks("lower opened birch wood door facing west", (short)745, new BlockData(194, 6), new BlockData(194, 6), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_BIRCH_WOOD_DOOR_FACING_NORTH = new Blocks("lower opened birch wood door facing north", (short)746, new BlockData(194, 7), new BlockData(194, 7), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_BIRCH_WOOD_DOOR_HINGE_LEFT = new Blocks("upper birch wood door hinge left", (short)747, new BlockData(194, 8), new BlockData(194, 8), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_BIRCH_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper birch wood door hinge right", (short)748, new BlockData(194, 9), new BlockData(194, 9), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_BIRCH_WOOD_DOOR_HINGE_LEFT = new Blocks("upper powered birch wood door hinge left", (short)749, new BlockData(194, 10), new BlockData(194, 10), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_BIRCH_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper powered birch wood door hinge right", (short)750, new BlockData(194, 11), new BlockData(194, 11), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_JUNGLE_WOOD_DOOR_FACING_EAST = new Blocks("lower jungle wood door facing east", (short)751, new BlockData(195, 0), new BlockData(195, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_JUNGLE_WOOD_DOOR_FACING_SOUTH = new Blocks("lower jungle wood door facing south", (short)752, new BlockData(195, 1), new BlockData(195, 1), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_JUNGLE_WOOD_DOOR_FACING_WEST = new Blocks("lower jungle wood door facing west", (short)753, new BlockData(195, 2), new BlockData(195, 2), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_JUNGLE_WOOD_DOOR_FACING_NORTH = new Blocks("lower jungle wood door facing north", (short)754, new BlockData(195, 3), new BlockData(195, 3), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_EAST = new Blocks("lower opened jungle wood door facing east", (short)755, new BlockData(195, 4), new BlockData(195, 4), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_SOUTH = new Blocks("lower opened jungle wood door facing south", (short)756, new BlockData(195, 5), new BlockData(195, 5), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_WEST = new Blocks("lower opened jungle wood door facing west", (short)757, new BlockData(195, 6), new BlockData(195, 6), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_JUNGLE_WOOD_DOOR_FACING_NORTH = new Blocks("lower opened jungle wood door facing north", (short)758, new BlockData(195, 7), new BlockData(195, 7), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_JUNGLE_WOOD_DOOR_HINGE_LEFT = new Blocks("upper jungle wood door hinge left", (short)759, new BlockData(195, 8), new BlockData(195, 8), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_JUNGLE_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper jungle wood door hinge right", (short)760, new BlockData(195, 9), new BlockData(195, 9), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_JUNGLE_WOOD_DOOR_HINGE_LEFT = new Blocks("upper powered jungle wood door hinge left", (short)761, new BlockData(195, 10), new BlockData(195, 10), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_JUNGLE_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper powered jungle wood door hinge right", (short)762, new BlockData(195, 11), new BlockData(195, 11), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_ACACIA_WOOD_DOOR_FACING_EAST = new Blocks("lower acacia wood door facing east", (short)763, new BlockData(196, 0), new BlockData(196, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_ACACIA_WOOD_DOOR_FACING_SOUTH = new Blocks("lower acacia wood door facing south", (short)764, new BlockData(196, 1), new BlockData(196, 1), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_ACACIA_WOOD_DOOR_FACING_WEST = new Blocks("lower acacia wood door facing west", (short)765, new BlockData(196, 2), new BlockData(196, 2), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_ACACIA_WOOD_DOOR_FACING_NORTH = new Blocks("lower acacia wood door facing north", (short)766, new BlockData(196, 3), new BlockData(196, 3), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_EAST = new Blocks("lower opened acacia wood door facing east", (short)767, new BlockData(196, 4), new BlockData(196, 4), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_SOUTH = new Blocks("lower opened acacia wood door facing south", (short)768, new BlockData(196, 5), new BlockData(196, 5), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_WEST = new Blocks("lower opened acacia wood door facing west", (short)769, new BlockData(196, 6), new BlockData(196, 6), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_ACACIA_WOOD_DOOR_FACING_NORTH = new Blocks("lower opened acacia wood door facing north", (short)770, new BlockData(196, 7), new BlockData(196, 7), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_ACACIA_WOOD_DOOR_HINGE_LEFT = new Blocks("upper acacia wood door hinge left", (short)771, new BlockData(196, 8), new BlockData(196, 8), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_ACACIA_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper acacia wood door hinge right", (short)772, new BlockData(196, 9), new BlockData(196, 9), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_ACACIA_WOOD_DOOR_HINGE_LEFT = new Blocks("upper powered acacia wood door hinge left", (short)773, new BlockData(196, 10), new BlockData(196, 10), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_ACACIA_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper powered acacia wood door hinge right", (short)774, new BlockData(196, 11), new BlockData(196, 11), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_DARK_OAK_WOOD_DOOR_FACING_EAST = new Blocks("lower dark oak wood door facing east", (short)775, new BlockData(197, 0), new BlockData(197, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_DARK_OAK_WOOD_DOOR_FACING_SOUTH = new Blocks("lower dark oak wood door facing south", (short)776, new BlockData(197, 1), new BlockData(197, 1), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_DARK_OAK_WOOD_DOOR_FACING_WEST = new Blocks("lower dark oak wood door facing west", (short)777, new BlockData(197, 2), new BlockData(197, 2), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_DARK_OAK_WOOD_DOOR_FACING_NORTH = new Blocks("lower dark oak wood door facing north", (short)778, new BlockData(197, 3), new BlockData(197, 3), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_EAST = new Blocks("lower opened dark oak wood door facing east", (short)779, new BlockData(197, 4), new BlockData(197, 4), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_SOUTH = new Blocks("lower opened dark oak wood door facing south", (short)780, new BlockData(197, 5), new BlockData(197, 5), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_WEST = new Blocks("lower opened dark oak wood door facing west", (short)781, new BlockData(197, 6), new BlockData(197, 6), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_OPENED_DARK_OAK_WOOD_DOOR_FACING_NORTH = new Blocks("lower opened dark oak wood door facing north", (short)782, new BlockData(197, 7), new BlockData(197, 7), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_DARK_OAK_WOOD_DOOR_HINGE_LEFT = new Blocks("upper dark oak wood door hinge left", (short)783, new BlockData(197, 8), new BlockData(197, 8), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_DARK_OAK_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper dark oak wood door hinge right", (short)784, new BlockData(197, 9), new BlockData(197, 9), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_DARK_OAK_WOOD_DOOR_HINGE_LEFT = new Blocks("upper powered dark oak wood door hinge left", (short)785, new BlockData(197, 10), new BlockData(197, 10), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(UPPER_POWERED_DARK_OAK_WOOD_DOOR_HINGE_RIGHT = new Blocks("upper powered dark oak wood door hinge right", (short)786, new BlockData(197, 11), new BlockData(197, 11), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(LOWER_IRON_DOOR_FACING_EAST = new Blocks("lower iron door facing east", (short)787, new BlockData(71, 0), new BlockData(71, 0), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LOWER_IRON_DOOR_FACING_SOUTH = new Blocks("lower iron door facing south", (short)788, new BlockData(71, 1), new BlockData(71, 1), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LOWER_IRON_DOOR_FACING_WEST = new Blocks("lower iron door facing west", (short)789, new BlockData(71, 2), new BlockData(71, 2), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LOWER_IRON_DOOR_FACING_NORTH = new Blocks("lower iron door facing north", (short)790, new BlockData(71, 3), new BlockData(71, 3), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LOWER_OPENED_IRON_DOOR_FACING_EAST = new Blocks("lower opened iron door facing east", (short)791, new BlockData(71, 4), new BlockData(71, 4), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LOWER_OPENED_IRON_DOOR_FACING_SOUTH = new Blocks("lower opened iron door facing south", (short)792, new BlockData(71, 5), new BlockData(71, 5), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LOWER_OPENED_IRON_DOOR_FACING_WEST = new Blocks("lower opened iron door facing west", (short)793, new BlockData(71, 6), new BlockData(71, 6), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LOWER_OPENED_IRON_DOOR_FACING_NORTH = new Blocks("lower opened iron door facing north", (short)794, new BlockData(71, 7), new BlockData(71, 7), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(UPPER_IRON_DOOR_HINGE_LEFT = new Blocks("upper iron door hinge left", (short)795, new BlockData(71, 8), new BlockData(71, 8), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(UPPER_IRON_DOOR_HINGE_RIGHT = new Blocks("upper iron door hinge right", (short)796, new BlockData(71, 9), new BlockData(71, 9), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(UPPER_POWERED_IRON_DOOR_HINGE_LEFT = new Blocks("upper powered iron door hinge left", (short)797, new BlockData(71, 10), new BlockData(71, 10), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(UPPER_POWERED_IRON_DOOR_HINGE_RIGHT = new Blocks("upper powered iron door hinge right", (short)798, new BlockData(71, 11), new BlockData(71, 11), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(LADDER_FACING_NORTH = new Blocks("ladder facing north", (short)799, new BlockData(65, 2), new BlockData(65, 2), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(LADDER_FACING_SOUTH = new Blocks("ladder facing south", (short)800, new BlockData(65, 3), new BlockData(65, 3), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(LADDER_FACING_WEST = new Blocks("ladder facing west", (short)801, new BlockData(65, 4), new BlockData(65, 4), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(LADDER_FACING_EAST = new Blocks("ladder facing east", (short)802, new BlockData(65, 5), new BlockData(65, 5), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(LEVER_BOTTOM_POINTING_EAST = new Blocks("lever bottom pointing east", (short)803, new BlockData(69, 0), new BlockData(69, 0), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LEVER_FACING_EAST = new Blocks("lever facing east", (short)804, new BlockData(69, 1), new BlockData(69, 1), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LEVER_FACING_WEST = new Blocks("lever facing west", (short)805, new BlockData(69, 2), new BlockData(69, 2), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LEVER_FACING_SOUTH = new Blocks("lever facing south", (short)806, new BlockData(69, 3), new BlockData(69, 3), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LEVER_FACING_NORTH = new Blocks("lever facing north", (short)807, new BlockData(69, 4), new BlockData(69, 4), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LEVER_TOP_POINTING_SOUTH = new Blocks("lever top pointing south", (short)808, new BlockData(69, 5), new BlockData(69, 5), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LEVER_TOP_POINTING_EAST = new Blocks("lever top pointing east", (short)809, new BlockData(69, 6), new BlockData(69, 6), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LEVER_BOTTOM_POINTING_SOUTH = new Blocks("lever bottom pointing south", (short)810, new BlockData(69, 7), new BlockData(69, 7), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_BOTTOM_POINTING_EAST = new Blocks("powered lever bottom pointing east", (short)811, new BlockData(69, 8), new BlockData(69, 8), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_FACING_EAST = new Blocks("powered lever facing east", (short)812, new BlockData(69, 9), new BlockData(69, 9), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_FACING_WEST = new Blocks("powered lever facing west", (short)813, new BlockData(69, 10), new BlockData(69, 10), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_FACING_SOUTH = new Blocks("powered lever facing south", (short)814, new BlockData(69, 11), new BlockData(69, 11), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_FACING_NORTH = new Blocks("powered lever facing north", (short)815, new BlockData(69, 12), new BlockData(69, 12), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_TOP_POINTING_SOUTH = new Blocks("powered lever top pointing south", (short)816, new BlockData(69, 13), new BlockData(69, 13), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_TOP_POINTING_EAST = new Blocks("powered lever top pointing east", (short)817, new BlockData(69, 14), new BlockData(69, 14), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_LEVER_BOTTOM_POINTING_SOUTH = new Blocks("powered lever bottom pointing south", (short)818, new BlockData(69, 15), new BlockData(69, 15), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STONE_PRESSURE_PLATE = new Blocks("stone pressure plate", (short)819, new BlockData(70, 0), new BlockData(70, 0), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_STONE_PRESSURE_PLATE = new Blocks("powered stone pressure plate", (short)820, new BlockData(70, 1), new BlockData(70, 1), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WOODEN_PRESSURE_PLATE = new Blocks("wooden pressure plate", (short)821, new BlockData(72, 0), new BlockData(72, 0), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_WOODEN_PRESSURE_PLATE = new Blocks("powered wooden pressure plate", (short)822, new BlockData(72, 1), new BlockData(72, 1), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_0 = new Blocks("heavy weighted pressure plate 0", (short)823, new BlockData(148, 0), new BlockData(148, 0), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_1 = new Blocks("heavy weighted pressure plate 1", (short)824, new BlockData(148, 1), new BlockData(148, 1), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_2 = new Blocks("heavy weighted pressure plate 2", (short)825, new BlockData(148, 2), new BlockData(148, 2), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_3 = new Blocks("heavy weighted pressure plate 3", (short)826, new BlockData(148, 3), new BlockData(148, 3), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_4 = new Blocks("heavy weighted pressure plate 4", (short)827, new BlockData(148, 4), new BlockData(148, 4), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_5 = new Blocks("heavy weighted pressure plate 5", (short)828, new BlockData(148, 5), new BlockData(148, 5), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_6 = new Blocks("heavy weighted pressure plate 6", (short)829, new BlockData(148, 6), new BlockData(148, 6), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_7 = new Blocks("heavy weighted pressure plate 7", (short)830, new BlockData(148, 7), new BlockData(148, 7), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_8 = new Blocks("heavy weighted pressure plate 8", (short)831, new BlockData(148, 8), new BlockData(148, 8), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_9 = new Blocks("heavy weighted pressure plate 9", (short)832, new BlockData(148, 9), new BlockData(148, 9), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_10 = new Blocks("heavy weighted pressure plate 10", (short)833, new BlockData(148, 10), new BlockData(148, 10), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_11 = new Blocks("heavy weighted pressure plate 11", (short)834, new BlockData(148, 11), new BlockData(148, 11), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_12 = new Blocks("heavy weighted pressure plate 12", (short)835, new BlockData(148, 12), new BlockData(148, 12), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_13 = new Blocks("heavy weighted pressure plate 13", (short)836, new BlockData(148, 13), new BlockData(148, 13), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_14 = new Blocks("heavy weighted pressure plate 14", (short)837, new BlockData(148, 14), new BlockData(148, 14), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HEAVY_WEIGHTED_PRESSURE_PLATE_15 = new Blocks("heavy weighted pressure plate 15", (short)838, new BlockData(148, 15), new BlockData(148, 15), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_0 = new Blocks("light weighted pressure plate 0", (short)839, new BlockData(147, 0), new BlockData(147, 0), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_1 = new Blocks("light weighted pressure plate 1", (short)840, new BlockData(147, 1), new BlockData(147, 1), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_2 = new Blocks("light weighted pressure plate 2", (short)841, new BlockData(147, 2), new BlockData(147, 2), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_3 = new Blocks("light weighted pressure plate 3", (short)842, new BlockData(147, 3), new BlockData(147, 3), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_4 = new Blocks("light weighted pressure plate 4", (short)843, new BlockData(147, 4), new BlockData(147, 4), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_5 = new Blocks("light weighted pressure plate 5", (short)844, new BlockData(147, 5), new BlockData(147, 5), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_6 = new Blocks("light weighted pressure plate 6", (short)845, new BlockData(147, 6), new BlockData(147, 6), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_7 = new Blocks("light weighted pressure plate 7", (short)846, new BlockData(147, 7), new BlockData(147, 7), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_8 = new Blocks("light weighted pressure plate 8", (short)847, new BlockData(147, 8), new BlockData(147, 8), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_9 = new Blocks("light weighted pressure plate 9", (short)848, new BlockData(147, 9), new BlockData(147, 9), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_10 = new Blocks("light weighted pressure plate 10", (short)849, new BlockData(147, 10), new BlockData(147, 10), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_11 = new Blocks("light weighted pressure plate 11", (short)850, new BlockData(147, 11), new BlockData(147, 11), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_12 = new Blocks("light weighted pressure plate 12", (short)851, new BlockData(147, 12), new BlockData(147, 12), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_13 = new Blocks("light weighted pressure plate 13", (short)852, new BlockData(147, 13), new BlockData(147, 13), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_14 = new Blocks("light weighted pressure plate 14", (short)853, new BlockData(147, 14), new BlockData(147, 14), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_WEIGHTED_PRESSURE_PLATE_15 = new Blocks("light weighted pressure plate 15", (short)854, new BlockData(147, 15), new BlockData(147, 15), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STONE_BUTTON_FACING_DOWN = new Blocks("stone button facing down", (short)855, new BlockData(77, 0), new BlockData(77, 0), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STONE_BUTTON_FACING_EAST = new Blocks("stone button facing east", (short)856, new BlockData(77, 1), new BlockData(77, 5), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STONE_BUTTON_FACING_WEST = new Blocks("stone button facing west", (short)857, new BlockData(77, 2), new BlockData(77, 4), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STONE_BUTTON_FACING_SOUTH = new Blocks("stone button facing south", (short)858, new BlockData(77, 3), new BlockData(77, 3), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STONE_BUTTON_FACING_NORTH = new Blocks("stone button facing north", (short)859, new BlockData(77, 4), new BlockData(77, 2), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(STONE_BUTTON_FACING_UP = new Blocks("stone button facing up", (short)860, new BlockData(77, 5), new BlockData(77, 1), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_STONE_BUTTON_FACING_DOWN = new Blocks("powered stone button facing down", (short)861, new BlockData(77, 8), new BlockData(77, 8), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_STONE_BUTTON_FACING_EAST = new Blocks("powered stone button facing east", (short)862, new BlockData(77, 9), new BlockData(77, 13), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_STONE_BUTTON_FACING_WEST = new Blocks("powered stone button facing west", (short)863, new BlockData(77, 10), new BlockData(77, 12), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_STONE_BUTTON_FACING_SOUTH = new Blocks("powered stone button facing south", (short)864, new BlockData(77, 11), new BlockData(77, 11), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_STONE_BUTTON_FACING_NORTH = new Blocks("powered stone button facing north", (short)865, new BlockData(77, 12), new BlockData(77, 10), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_STONE_BUTTON_FACING_UP = new Blocks("powered stone button facing up", (short)866, new BlockData(77, 13), new BlockData(77, 9), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WOODEN_BUTTON_FACING_DOWN = new Blocks("wooden button facing down", (short)867, new BlockData(143, 0), new BlockData(143, 0), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WOODEN_BUTTON_FACING_EAST = new Blocks("wooden button facing east", (short)868, new BlockData(143, 1), new BlockData(143, 5), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WOODEN_BUTTON_FACING_WEST = new Blocks("wooden button facing west", (short)869, new BlockData(143, 2), new BlockData(143, 4), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WOODEN_BUTTON_FACING_SOUTH = new Blocks("wooden button facing south", (short)870, new BlockData(143, 3), new BlockData(143, 3), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WOODEN_BUTTON_FACING_NORTH = new Blocks("wooden button facing north", (short)871, new BlockData(143, 4), new BlockData(143, 2), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(WOODEN_BUTTON_FACING_UP = new Blocks("wooden button facing up", (short)872, new BlockData(143, 5), new BlockData(143, 1), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_WOODEN_BUTTON_FACING_DOWN = new Blocks("powered wooden button facing down", (short)873, new BlockData(143, 8), new BlockData(143, 8), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_WOODEN_BUTTON_FACING_EAST = new Blocks("powered wooden button facing east", (short)874, new BlockData(143, 9), new BlockData(143, 13), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_WOODEN_BUTTON_FACING_WEST = new Blocks("powered wooden button facing west", (short)875, new BlockData(143, 10), new BlockData(143, 12), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_WOODEN_BUTTON_FACING_SOUTH = new Blocks("powered wooden button facing south", (short)876, new BlockData(143, 11), new BlockData(143, 11), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_WOODEN_BUTTON_FACING_NORTH = new Blocks("powered wooden button facing north", (short)877, new BlockData(143, 12), new BlockData(143, 10), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(POWERED_WOODEN_BUTTON_FACING_UP = new Blocks("powered wooden button facing up", (short)878, new BlockData(143, 13), new BlockData(143, 9), false, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(SNOW_LAYER_0 = new Blocks("snow layer 0", (short)879, new BlockData(78, 0), new BlockData(78, 0), true, (double)0.1, (double)0.5, (byte)0, (byte)0, true));
        add(SNOW_LAYER_1 = new Blocks("snow layer 1", (short)880, new BlockData(78, 1), new BlockData(78, 1), true, (double)0.1, (double)0.5, (byte)0, (byte)0, false));
        add(SNOW_LAYER_2 = new Blocks("snow layer 2", (short)881, new BlockData(78, 2), new BlockData(78, 2), true, (double)0.1, (double)0.5, (byte)0, (byte)0, false));
        add(SNOW_LAYER_3 = new Blocks("snow layer 3", (short)882, new BlockData(78, 3), new BlockData(78, 3), true, (double)0.1, (double)0.5, (byte)0, (byte)0, false));
        add(SNOW_LAYER_4 = new Blocks("snow layer 4", (short)883, new BlockData(78, 4), new BlockData(78, 4), true, (double)0.1, (double)0.5, (byte)0, (byte)0, false));
        add(SNOW_LAYER_5 = new Blocks("snow layer 5", (short)884, new BlockData(78, 5), new BlockData(78, 5), true, (double)0.1, (double)0.5, (byte)0, (byte)0, false));
        add(SNOW_LAYER_6 = new Blocks("snow layer 6", (short)885, new BlockData(78, 6), new BlockData(78, 6), true, (double)0.1, (double)0.5, (byte)0, (byte)0, false));
        add(SNOW_LAYER_7 = new Blocks("snow layer 7", (short)886, new BlockData(78, 7), new BlockData(78, 7), true, (double)0.1, (double)0.5, (byte)15, (byte)0, false));
        add(SNOW = new Blocks("snow", (short)887, new BlockData(80, 0), new BlockData(80, 0), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(ICE = new Blocks("ice", (short)888, new BlockData(79, 0), new BlockData(79, 0), true, (double)0.5, (double)2.5, (byte)3, (byte)0, false));
        add(PACKED_ICE = new Blocks("packed ice", (short)889, new BlockData(174, 0), new BlockData(174, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(FROSTED_ICE_0 = new Blocks("frosted ice 0", (short)890, new BlockData(212, 0), new BlockData(212, 0), true, (double)0.5, (double)2.5, (byte)3, (byte)0, false));
        add(FROSTED_ICE_1 = new Blocks("frosted ice 1", (short)891, new BlockData(212, 1), new BlockData(212, 1), true, (double)0.5, (double)2.5, (byte)3, (byte)0, false));
        add(FROSTED_ICE_2 = new Blocks("frosted ice 2", (short)892, new BlockData(212, 2), new BlockData(212, 2), true, (double)0.5, (double)2.5, (byte)3, (byte)0, false));
        add(FROSTED_ICE_3 = new Blocks("frosted ice 3", (short)893, new BlockData(212, 3), new BlockData(212, 3), true, (double)0.5, (double)2.5, (byte)3, (byte)0, false));
        add(CACTUS_0 = new Blocks("cactus 0", (short)894, new BlockData(81, 0), new BlockData(81, 0), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_1 = new Blocks("cactus 1", (short)895, new BlockData(81, 1), new BlockData(81, 1), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_2 = new Blocks("cactus 2", (short)896, new BlockData(81, 2), new BlockData(81, 2), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_3 = new Blocks("cactus 3", (short)897, new BlockData(81, 3), new BlockData(81, 3), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_4 = new Blocks("cactus 4", (short)898, new BlockData(81, 4), new BlockData(81, 4), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_5 = new Blocks("cactus 5", (short)899, new BlockData(81, 5), new BlockData(81, 5), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_6 = new Blocks("cactus 6", (short)900, new BlockData(81, 6), new BlockData(81, 6), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_7 = new Blocks("cactus 7", (short)901, new BlockData(81, 7), new BlockData(81, 7), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_8 = new Blocks("cactus 8", (short)902, new BlockData(81, 8), new BlockData(81, 8), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_9 = new Blocks("cactus 9", (short)903, new BlockData(81, 9), new BlockData(81, 9), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_10 = new Blocks("cactus 10", (short)904, new BlockData(81, 10), new BlockData(81, 10), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_11 = new Blocks("cactus 11", (short)905, new BlockData(81, 11), new BlockData(81, 11), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_12 = new Blocks("cactus 12", (short)906, new BlockData(81, 12), new BlockData(81, 12), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_13 = new Blocks("cactus 13", (short)907, new BlockData(81, 13), new BlockData(81, 13), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_14 = new Blocks("cactus 14", (short)908, new BlockData(81, 14), new BlockData(81, 14), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CACTUS_15 = new Blocks("cactus 15", (short)909, new BlockData(81, 15), new BlockData(81, 15), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(CLAY = new Blocks("clay", (short)910, new BlockData(82, 0), new BlockData(82, 0), true, (double)0.6, (double)3, (byte)15, (byte)0, false));
        add(JUKEBOX = new Blocks("jukebox", (short)911, new BlockData(84, 0), new BlockData(84, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(HARDENED_CLAY = new Blocks("hardened clay", (short)912, new BlockData(172, 0), new BlockData(172, 0), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(WHITE_STAINED_CLAY = new Blocks("white stained clay", (short)913, new BlockData(159, 0), new BlockData(159, 0), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(ORANGE_STAINED_CLAY = new Blocks("orange stained clay", (short)914, new BlockData(159, 1), new BlockData(159, 1), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(MAGENTA_STAINED_CLAY = new Blocks("magenta stained clay", (short)915, new BlockData(159, 2), new BlockData(159, 2), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(LIGHT_BLUE_STAINED_CLAY = new Blocks("light blue stained clay", (short)916, new BlockData(159, 3), new BlockData(159, 3), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(YELLOW_STAINED_CLAY = new Blocks("yellow stained clay", (short)917, new BlockData(159, 4), new BlockData(159, 4), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(LIME_STAINED_CLAY = new Blocks("lime stained clay", (short)918, new BlockData(159, 5), new BlockData(159, 5), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(PINK_STAINED_CLAY = new Blocks("pink stained clay", (short)919, new BlockData(159, 6), new BlockData(159, 6), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(GRAY_STAINED_CLAY = new Blocks("gray stained clay", (short)920, new BlockData(159, 7), new BlockData(159, 7), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(LIGHT_GRAY_STAINED_CLAY = new Blocks("light gray stained clay", (short)921, new BlockData(159, 8), new BlockData(159, 8), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(CYAN_STAINED_CLAY = new Blocks("cyan stained clay", (short)922, new BlockData(159, 9), new BlockData(159, 9), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(PURPLE_STAINED_CLAY = new Blocks("purple stained clay", (short)923, new BlockData(159, 10), new BlockData(159, 10), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(BLUE_STAINED_CLAY = new Blocks("blue stained clay", (short)924, new BlockData(159, 11), new BlockData(159, 11), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(BROWN_STAINED_CLAY = new Blocks("brown stained clay", (short)925, new BlockData(159, 12), new BlockData(159, 12), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(GREEN_STAINED_CLAY = new Blocks("green stained clay", (short)926, new BlockData(159, 13), new BlockData(159, 13), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(RED_STAINED_CLAY = new Blocks("red stained clay", (short)927, new BlockData(159, 14), new BlockData(159, 14), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(BLACK_STAINED_CLAY = new Blocks("black stained clay", (short)928, new BlockData(159, 15), new BlockData(159, 15), true, (double)1.75, (double)21, (byte)15, (byte)0, false));
        add(PUMPKIN_FACING_SOUTH = new Blocks("pumpkin facing south", (short)929, new BlockData(86, 0), new BlockData(86, 0), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(PUMPKIN_FACING_WEST = new Blocks("pumpkin facing west", (short)930, new BlockData(86, 1), new BlockData(86, 1), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(PUMPKIN_FACING_NORTH = new Blocks("pumpkin facing north", (short)931, new BlockData(86, 2), new BlockData(86, 2), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(PUMPKIN_FACING_EAST = new Blocks("pumpkin facing east", (short)932, new BlockData(86, 3), new BlockData(86, 3), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(FACELESS_PUMPKIN_FACING_SOUTH = new Blocks("faceless pumpkin facing south", (short)933, new BlockData(86, 4), new BlockData(86, 4), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(FACELESS_PUMPKIN_FACING_WEST = new Blocks("faceless pumpkin facing west", (short)934, new BlockData(86, 5), new BlockData(86, 5), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(FACELESS_PUMPKIN_FACING_NORTH = new Blocks("faceless pumpkin facing north", (short)935, new BlockData(86, 6), new BlockData(86, 6), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(FACELESS_PUMPKIN_FACING_EAST = new Blocks("faceless pumpkin facing east", (short)936, new BlockData(86, 7), new BlockData(86, 7), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(JACK_O_LANTERN_FACING_SOUTH = new Blocks("jack o lantern facing south", (short)937, new BlockData(91, 0), new BlockData(91, 0), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(JACK_O_LANTERN_FACING_WEST = new Blocks("jack o lantern facing west", (short)938, new BlockData(91, 1), new BlockData(91, 1), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(JACK_O_LANTERN_FACING_NORTH = new Blocks("jack o lantern facing north", (short)939, new BlockData(91, 2), new BlockData(91, 2), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(JACK_O_LANTERN_FACING_EAST = new Blocks("jack o lantern facing east", (short)940, new BlockData(91, 3), new BlockData(91, 3), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(FACELESS_JACK_O_LANTERN_FACING_SOUTH = new Blocks("faceless jack o lantern facing south", (short)941, new BlockData(91, 4), new BlockData(91, 4), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(FACELESS_JACK_O_LANTERN_FACING_WEST = new Blocks("faceless jack o lantern facing west", (short)942, new BlockData(91, 5), new BlockData(91, 5), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(FACELESS_JACK_O_LANTERN_FACING_NORTH = new Blocks("faceless jack o lantern facing north", (short)943, new BlockData(91, 6), new BlockData(91, 6), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(FACELESS_JACK_O_LANTERN_FACING_EAST = new Blocks("faceless jack o lantern facing east", (short)944, new BlockData(91, 7), new BlockData(91, 7), true, (double)1, (double)5, (byte)15, (byte)15, false));
        add(OAK_WOOD_FENCE = new Blocks("oak wood fence", (short)945, new BlockData(85, 0), new BlockData(85, 0), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(SPRUCE_WOOD_FENCE = new Blocks("spruce wood fence", (short)946, new BlockData(188, 0), new BlockData(85, 1), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(BIRCH_WOOD_FENCE = new Blocks("birch wood fence", (short)947, new BlockData(189, 0), new BlockData(85, 2), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(JUNGLE_WOOD_FENCE = new Blocks("jungle wood fence", (short)948, new BlockData(190, 0), new BlockData(85, 3), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(ACACIA_WOOD_FENCE = new Blocks("acacia wood fence", (short)949, new BlockData(192, 0), new BlockData(85, 4), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(DARK_OAK_WOOD_FENCE = new Blocks("dark oak wood fence", (short)950, new BlockData(191, 0), new BlockData(85, 5), true, (double)2, (double)15, (byte)15, (byte)0, false));
        add(NETHER_BRICK_FENCE = new Blocks("nether brick fence", (short)951, new BlockData(113, 0), new BlockData(113, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(NETHERRACK = new Blocks("netherrack", (short)952, new BlockData(87, 0), new BlockData(87, 0), true, (double)0.4, (double)2, (byte)15, (byte)0, false));
        add(SOUL_SAND = new Blocks("soul sand", (short)953, new BlockData(88, 0), new BlockData(88, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(GLOWSTONE = new Blocks("glowstone", (short)954, new BlockData(89, 0), new BlockData(89, 0), true, (double)0.3, (double)1.5, (byte)15, (byte)15, false));
        add(NETHER_BRICK = new Blocks("nether brick", (short)955, new BlockData(112, 0), new BlockData(112, 0), true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(RED_NETHER_BRICK = new Blocks("red nether brick", (short)956, new BlockData(215, 0), null, true, (double)2, (double)30, (byte)15, (byte)0, false));
        add(NETHER_PORTAL_EAST_WEST = new Blocks("nether portal east west", (short)957, new BlockData(90, 0), new BlockData(90, 0), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(NETHER_PORTAL_NORTH_SOUTH = new Blocks("nether portal north south", (short)958, new BlockData(90, 1), new BlockData(90, 1), false, (double)0, (double)0, (byte)15, (byte)0, false));
        add(CAKE_0 = new Blocks("cake 0", (short)959, new BlockData(92, 0), new BlockData(92, 0), true, (double)0.5, (double)2.5, (byte)0, (byte)0, false));
        add(CAKE_1 = new Blocks("cake 1", (short)960, new BlockData(92, 1), new BlockData(92, 1), true, (double)0.5, (double)2.5, (byte)0, (byte)0, false));
        add(CAKE_2 = new Blocks("cake 2", (short)961, new BlockData(92, 2), new BlockData(92, 2), true, (double)0.5, (double)2.5, (byte)0, (byte)0, false));
        add(CAKE_3 = new Blocks("cake 3", (short)962, new BlockData(92, 3), new BlockData(92, 3), true, (double)0.5, (double)2.5, (byte)0, (byte)0, false));
        add(CAKE_4 = new Blocks("cake 4", (short)963, new BlockData(92, 4), new BlockData(92, 4), true, (double)0.5, (double)2.5, (byte)0, (byte)0, false));
        add(CAKE_5 = new Blocks("cake 5", (short)964, new BlockData(92, 5), new BlockData(92, 5), true, (double)0.5, (double)2.5, (byte)0, (byte)0, false));
        add(CAKE_6 = new Blocks("cake 6", (short)965, new BlockData(92, 6), new BlockData(92, 6), true, (double)0.5, (double)2.5, (byte)0, (byte)0, false));
        add(REPEATER_FACING_NORTH_1_DELAY = new Blocks("repeater facing north 1 delay", (short)966, new BlockData(93, 0), new BlockData(93, 0), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_EAST_1_DELAY = new Blocks("repeater facing east 1 delay", (short)967, new BlockData(93, 1), new BlockData(93, 1), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_SOUTH_1_DELAY = new Blocks("repeater facing south 1 delay", (short)968, new BlockData(93, 2), new BlockData(93, 2), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_WEST_1_DELAY = new Blocks("repeater facing west 1 delay", (short)969, new BlockData(93, 3), new BlockData(93, 3), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_NORTH_2_DELAY = new Blocks("repeater facing north 2 delay", (short)970, new BlockData(93, 4), new BlockData(93, 4), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_EAST_2_DELAY = new Blocks("repeater facing east 2 delay", (short)971, new BlockData(93, 5), new BlockData(93, 5), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_SOUTH_2_DELAY = new Blocks("repeater facing south 2 delay", (short)972, new BlockData(93, 6), new BlockData(93, 6), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_WEST_2_DELAY = new Blocks("repeater facing west 2 delay", (short)973, new BlockData(93, 7), new BlockData(93, 7), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_NORTH_3_DELAY = new Blocks("repeater facing north 3 delay", (short)974, new BlockData(93, 8), new BlockData(93, 8), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_EAST_3_DELAY = new Blocks("repeater facing east 3 delay", (short)975, new BlockData(93, 9), new BlockData(93, 9), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_SOUTH_3_DELAY = new Blocks("repeater facing south 3 delay", (short)976, new BlockData(93, 10), new BlockData(93, 10), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_WEST_3_DELAY = new Blocks("repeater facing west 3 delay", (short)977, new BlockData(93, 11), new BlockData(93, 11), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_NORTH_4_DELAY = new Blocks("repeater facing north 4 delay", (short)978, new BlockData(93, 12), new BlockData(93, 12), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_EAST_4_DELAY = new Blocks("repeater facing east 4 delay", (short)979, new BlockData(93, 13), new BlockData(93, 13), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_SOUTH_4_DELAY = new Blocks("repeater facing south 4 delay", (short)980, new BlockData(93, 14), new BlockData(93, 14), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(REPEATER_FACING_WEST_4_DELAY = new Blocks("repeater facing west 4 delay", (short)981, new BlockData(93, 15), new BlockData(93, 15), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(POWERED_REPEATER_FACING_NORTH_1_DELAY = new Blocks("powered repeater facing north 1 delay", (short)982, new BlockData(94, 0), new BlockData(94, 0), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_EAST_1_DELAY = new Blocks("powered repeater facing east 1 delay", (short)983, new BlockData(94, 1), new BlockData(94, 1), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_SOUTH_1_DELAY = new Blocks("powered repeater facing south 1 delay", (short)984, new BlockData(94, 2), new BlockData(94, 2), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_WEST_1_DELAY = new Blocks("powered repeater facing west 1 delay", (short)985, new BlockData(94, 3), new BlockData(94, 3), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_NORTH_2_DELAY = new Blocks("powered repeater facing north 2 delay", (short)986, new BlockData(94, 4), new BlockData(94, 4), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_EAST_2_DELAY = new Blocks("powered repeater facing east 2 delay", (short)987, new BlockData(94, 5), new BlockData(94, 5), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_SOUTH_2_DELAY = new Blocks("powered repeater facing south 2 delay", (short)988, new BlockData(94, 6), new BlockData(94, 6), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_WEST_2_DELAY = new Blocks("powered repeater facing west 2 delay", (short)989, new BlockData(94, 7), new BlockData(94, 7), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_NORTH_3_DELAY = new Blocks("powered repeater facing north 3 delay", (short)990, new BlockData(94, 8), new BlockData(94, 8), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_EAST_3_DELAY = new Blocks("powered repeater facing east 3 delay", (short)991, new BlockData(94, 9), new BlockData(94, 9), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_SOUTH_3_DELAY = new Blocks("powered repeater facing south 3 delay", (short)992, new BlockData(94, 10), new BlockData(94, 10), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_WEST_3_DELAY = new Blocks("powered repeater facing west 3 delay", (short)993, new BlockData(94, 11), new BlockData(94, 11), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_NORTH_4_DELAY = new Blocks("powered repeater facing north 4 delay", (short)994, new BlockData(94, 12), new BlockData(94, 12), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_EAST_4_DELAY = new Blocks("powered repeater facing east 4 delay", (short)995, new BlockData(94, 13), new BlockData(94, 13), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_SOUTH_4_DELAY = new Blocks("powered repeater facing south 4 delay", (short)996, new BlockData(94, 14), new BlockData(94, 14), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(POWERED_REPEATER_FACING_WEST_4_DELAY = new Blocks("powered repeater facing west 4 delay", (short)997, new BlockData(94, 15), new BlockData(94, 15), true, (double)0, (double)0, (byte)15, (byte)7, false));
        add(WOODEN_TRAPDOOR_SOUTH_SIDE = new Blocks("wooden trapdoor south side", (short)998, new BlockData(96, 0), new BlockData(96, 3), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(WOODEN_TRAPDOOR_NORTH_SIDE = new Blocks("wooden trapdoor north side", (short)999, new BlockData(96, 1), new BlockData(96, 2), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(WOODEN_TRAPDOOR_EAST_SIDE = new Blocks("wooden trapdoor east side", (short)1000, new BlockData(96, 2), new BlockData(96, 1), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(WOODEN_TRAPDOOR_WEST_SIDE = new Blocks("wooden trapdoor west side", (short)1001, new BlockData(96, 3), new BlockData(96, 0), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_WOODEN_TRAPDOOR_SOUTH_SIDE = new Blocks("opened wooden trapdoor south side", (short)1002, new BlockData(96, 4), new BlockData(96, 11), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_WOODEN_TRAPDOOR_NORTH_SIDE = new Blocks("opened wooden trapdoor north side", (short)1003, new BlockData(96, 5), new BlockData(96, 10), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_WOODEN_TRAPDOOR_EAST_SIDE = new Blocks("opened wooden trapdoor east side", (short)1004, new BlockData(96, 6), new BlockData(96, 9), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_WOODEN_TRAPDOOR_WEST_SIDE = new Blocks("opened wooden trapdoor west side", (short)1005, new BlockData(96, 7), new BlockData(96, 8), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(TOP_WOODEN_TRAPDOOR_SOUTH_SIDE = new Blocks("top wooden trapdoor south side", (short)1006, new BlockData(96, 8), new BlockData(96, 7), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(TOP_WOODEN_TRAPDOOR_NORTH_SIDE = new Blocks("top wooden trapdoor north side", (short)1007, new BlockData(96, 9), new BlockData(96, 6), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(TOP_WOODEN_TRAPDOOR_EAST_SIDE = new Blocks("top wooden trapdoor east side", (short)1008, new BlockData(96, 10), new BlockData(96, 5), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(TOP_WOODEN_TRAPDOOR_WEST_SIDE = new Blocks("top wooden trapdoor west side", (short)1009, new BlockData(96, 11), new BlockData(96, 4), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_TOP_WOODEN_TRAPDOOR_SOUTH_SIDE = new Blocks("opened top wooden trapdoor south side", (short)1010, new BlockData(96, 12), new BlockData(96, 15), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_TOP_WOODEN_TRAPDOOR_NORTH_SIDE = new Blocks("opened top wooden trapdoor north side", (short)1011, new BlockData(96, 13), new BlockData(96, 14), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_TOP_WOODEN_TRAPDOOR_EAST_SIDE = new Blocks("opened top wooden trapdoor east side", (short)1012, new BlockData(96, 14), new BlockData(96, 13), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(OPENED_TOP_WOODEN_TRAPDOOR_WEST_SIDE = new Blocks("opened top wooden trapdoor west side", (short)1013, new BlockData(96, 15), new BlockData(96, 12), true, (double)3, (double)15, (byte)15, (byte)0, false));
        add(IRON_TRAPDOOR_SOUTH_SIDE = new Blocks("iron trapdoor south side", (short)1014, new BlockData(167, 0), new BlockData(167, 3), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(IRON_TRAPDOOR_NORTH_SIDE = new Blocks("iron trapdoor north side", (short)1015, new BlockData(167, 1), new BlockData(167, 2), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(IRON_TRAPDOOR_EAST_SIDE = new Blocks("iron trapdoor east side", (short)1016, new BlockData(167, 2), new BlockData(167, 1), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(IRON_TRAPDOOR_WEST_SIDE = new Blocks("iron trapdoor west side", (short)1017, new BlockData(167, 3), new BlockData(167, 0), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_IRON_TRAPDOOR_SOUTH_SIDE = new Blocks("opened iron trapdoor south side", (short)1018, new BlockData(167, 4), new BlockData(167, 11), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_IRON_TRAPDOOR_NORTH_SIDE = new Blocks("opened iron trapdoor north side", (short)1019, new BlockData(167, 5), new BlockData(167, 10), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_IRON_TRAPDOOR_EAST_SIDE = new Blocks("opened iron trapdoor east side", (short)1020, new BlockData(167, 6), new BlockData(167, 9), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_IRON_TRAPDOOR_WEST_SIDE = new Blocks("opened iron trapdoor west side", (short)1021, new BlockData(167, 7), new BlockData(167, 8), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(TOP_IRON_TRAPDOOR_SOUTH_SIDE = new Blocks("top iron trapdoor south side", (short)1022, new BlockData(167, 8), new BlockData(167, 7), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(TOP_IRON_TRAPDOOR_NORTH_SIDE = new Blocks("top iron trapdoor north side", (short)1023, new BlockData(167, 9), new BlockData(167, 6), true, (double)5, (double)25, (byte)15, (byte)0, false));
    }

    private static void init2()
    {
        add(TOP_IRON_TRAPDOOR_EAST_SIDE = new Blocks("top iron trapdoor east side", (short)1024, new BlockData(167, 10), new BlockData(167, 5), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(TOP_IRON_TRAPDOOR_WEST_SIDE = new Blocks("top iron trapdoor west side", (short)1025, new BlockData(167, 11), new BlockData(167, 4), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_TOP_IRON_TRAPDOOR_SOUTH_SIDE = new Blocks("opened top iron trapdoor south side", (short)1026, new BlockData(167, 12), new BlockData(167, 15), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_TOP_IRON_TRAPDOOR_NORTH_SIDE = new Blocks("opened top iron trapdoor north side", (short)1027, new BlockData(167, 13), new BlockData(167, 14), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_TOP_IRON_TRAPDOOR_EAST_SIDE = new Blocks("opened top iron trapdoor east side", (short)1028, new BlockData(167, 14), new BlockData(167, 13), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(OPENED_TOP_IRON_TRAPDOOR_WEST_SIDE = new Blocks("opened top iron trapdoor west side", (short)1029, new BlockData(167, 15), new BlockData(167, 12), true, (double)5, (double)25, (byte)15, (byte)0, false));
        add(STONE_MONSTER_EGG = new Blocks("stone monster egg", (short)1030, new BlockData(97, 0), new BlockData(97, 0), true, (double)0.75, (double)3.75, (byte)15, (byte)0, false));
        add(COBBLESTONE_MONSTER_EGG = new Blocks("cobblestone monster egg", (short)1031, new BlockData(97, 1), new BlockData(97, 1), true, (double)0.75, (double)3.75, (byte)15, (byte)0, false));
        add(STONE_BRICK_MONSTER_EGG = new Blocks("stone brick monster egg", (short)1032, new BlockData(97, 2), new BlockData(97, 2), true, (double)0.75, (double)3.75, (byte)15, (byte)0, false));
        add(MOSSY_STONE_BRICK_MONSTER_EGG = new Blocks("mossy stone brick monster egg", (short)1033, new BlockData(97, 3), new BlockData(97, 3), true, (double)0.75, (double)3.75, (byte)15, (byte)0, false));
        add(CRACKED_STONE_BRICK_MONSTER_EGG = new Blocks("cracked stone brick monster egg", (short)1034, new BlockData(97, 4), new BlockData(97, 4), true, (double)0.75, (double)3.75, (byte)15, (byte)0, false));
        add(CHISELED_STONE_BRICK_MONSTER_EGG = new Blocks("chiseled stone brick monster egg", (short)1035, new BlockData(97, 5), new BlockData(97, 5), true, (double)0.75, (double)3.75, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_PORES_EVERYWHERE = new Blocks("brown mushroom pores everywhere", (short)1036, new BlockData(99, 0), new BlockData(99, 0), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_WEST_NORTH = new Blocks("brown mushroom cap top west north", (short)1037, new BlockData(99, 1), new BlockData(99, 1), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_NORTH = new Blocks("brown mushroom cap top north", (short)1038, new BlockData(99, 2), new BlockData(99, 2), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_NORTH_EAST = new Blocks("brown mushroom cap top north east", (short)1039, new BlockData(99, 3), new BlockData(99, 3), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_WEST = new Blocks("brown mushroom cap top west", (short)1040, new BlockData(99, 4), new BlockData(99, 4), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP = new Blocks("brown mushroom cap top", (short)1041, new BlockData(99, 5), new BlockData(99, 5), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_EAST = new Blocks("brown mushroom cap top east", (short)1042, new BlockData(99, 6), new BlockData(99, 6), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_SOUTH_WEST = new Blocks("brown mushroom cap top south west", (short)1043, new BlockData(99, 7), new BlockData(99, 7), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_SOUTH = new Blocks("brown mushroom cap top south", (short)1044, new BlockData(99, 8), new BlockData(99, 8), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAP_TOP_EAST_SOUTH = new Blocks("brown mushroom cap top east south", (short)1045, new BlockData(99, 9), new BlockData(99, 9), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_STEM_EVERY_SIDE = new Blocks("brown mushroom stem every side", (short)1046, new BlockData(99, 10), new BlockData(99, 10), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_CAPS_EVERYWHERE = new Blocks("brown mushroom caps everywhere", (short)1047, new BlockData(99, 14), new BlockData(99, 14), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(BROWN_MUSHROOM_STEMS_EVERYWHERE = new Blocks("brown mushroom stems everywhere", (short)1048, new BlockData(99, 15), new BlockData(99, 15), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_PORES_EVERYWHERE = new Blocks("red mushroom pores everywhere", (short)1049, new BlockData(100, 0), new BlockData(100, 0), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_WEST_NORTH = new Blocks("red mushroom cap top west north", (short)1050, new BlockData(100, 1), new BlockData(100, 1), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_NORTH = new Blocks("red mushroom cap top north", (short)1051, new BlockData(100, 2), new BlockData(100, 2), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_NORTH_EAST = new Blocks("red mushroom cap top north east", (short)1052, new BlockData(100, 3), new BlockData(100, 3), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_WEST = new Blocks("red mushroom cap top west", (short)1053, new BlockData(100, 4), new BlockData(100, 4), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP = new Blocks("red mushroom cap top", (short)1054, new BlockData(100, 5), new BlockData(100, 5), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_EAST = new Blocks("red mushroom cap top east", (short)1055, new BlockData(100, 6), new BlockData(100, 6), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_SOUTH_WEST = new Blocks("red mushroom cap top south west", (short)1056, new BlockData(100, 7), new BlockData(100, 7), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_SOUTH = new Blocks("red mushroom cap top south", (short)1057, new BlockData(100, 8), new BlockData(100, 8), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAP_TOP_EAST_SOUTH = new Blocks("red mushroom cap top east south", (short)1058, new BlockData(100, 9), new BlockData(100, 9), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_STEM_EVERY_SIDE = new Blocks("red mushroom stem every side", (short)1059, new BlockData(100, 10), new BlockData(100, 10), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_CAPS_EVERYWHERE = new Blocks("red mushroom caps everywhere", (short)1060, new BlockData(100, 14), new BlockData(100, 14), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(RED_MUSHROOM_STEMS_EVERYWHERE = new Blocks("red mushroom stems everywhere", (short)1061, new BlockData(100, 15), new BlockData(100, 15), true, (double)0.2, (double)1, (byte)15, (byte)0, false));
        add(IRON_BARS = new Blocks("iron bars", (short)1062, new BlockData(101, 0), new BlockData(101, 0), true, (double)5, (double)30, (byte)0, (byte)0, false));
        add(MELON = new Blocks("melon", (short)1063, new BlockData(103, 0), new BlockData(103, 0), true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(VINES_SOUTH = new Blocks("vines south", (short)1064, new BlockData(106, 1), new BlockData(106, 1), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_WEST = new Blocks("vines west", (short)1065, new BlockData(106, 2), new BlockData(106, 2), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_SOUTH_WEST = new Blocks("vines south west", (short)1066, new BlockData(106, 3), new BlockData(106, 3), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_NORTH = new Blocks("vines north", (short)1067, new BlockData(106, 4), new BlockData(106, 4), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_NORTH_SOUTH = new Blocks("vines north south", (short)1068, new BlockData(106, 5), new BlockData(106, 5), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_NORTH_WEST = new Blocks("vines north west", (short)1069, new BlockData(106, 6), new BlockData(106, 6), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_NORTH_SOUTH_WEST = new Blocks("vines north south west", (short)1070, new BlockData(106, 7), new BlockData(106, 7), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_EAST = new Blocks("vines east", (short)1071, new BlockData(106, 8), new BlockData(106, 8), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_SOUTH_EAST = new Blocks("vines south east", (short)1072, new BlockData(106, 9), new BlockData(106, 9), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_WEST_EAST = new Blocks("vines west east", (short)1073, new BlockData(106, 10), new BlockData(106, 10), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_SOUTH_WEST_EAST = new Blocks("vines south west east", (short)1074, new BlockData(106, 11), new BlockData(106, 11), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_NORTH_EAST = new Blocks("vines north east", (short)1075, new BlockData(106, 12), new BlockData(106, 12), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_NORTH_SOUTH_EAST = new Blocks("vines north south east", (short)1076, new BlockData(106, 13), new BlockData(106, 13), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_NORTH_WEST_EAST = new Blocks("vines north west east", (short)1077, new BlockData(106, 14), new BlockData(106, 14), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(VINES_EVERY_SIDE = new Blocks("vines every side", (short)1078, new BlockData(106, 15), new BlockData(106, 15), false, (double)0.2, (double)1, (byte)0, (byte)0, true));
        add(OAK_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("oak wood fence gate facing south", (short)1079, new BlockData(107, 0), new BlockData(107, 0), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OAK_WOOD_FENCE_GATE_FACING_WEST = new Blocks("oak wood fence gate facing west", (short)1080, new BlockData(107, 1), new BlockData(107, 1), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OAK_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("oak wood fence gate facing north", (short)1081, new BlockData(107, 2), new BlockData(107, 2), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OAK_WOOD_FENCE_GATE_FACING_EAST = new Blocks("oak wood fence gate facing east", (short)1082, new BlockData(107, 3), new BlockData(107, 3), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(SPRUCE_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("spruce wood fence gate facing south", (short)1083, new BlockData(183, 0), new BlockData(183, 0), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(SPRUCE_WOOD_FENCE_GATE_FACING_WEST = new Blocks("spruce wood fence gate facing west", (short)1084, new BlockData(183, 1), new BlockData(183, 1), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(SPRUCE_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("spruce wood fence gate facing north", (short)1085, new BlockData(183, 2), new BlockData(183, 2), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(SPRUCE_WOOD_FENCE_GATE_FACING_EAST = new Blocks("spruce wood fence gate facing east", (short)1086, new BlockData(183, 3), new BlockData(183, 3), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(BIRCH_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("birch wood fence gate facing south", (short)1087, new BlockData(184, 0), new BlockData(184, 0), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(BIRCH_WOOD_FENCE_GATE_FACING_WEST = new Blocks("birch wood fence gate facing west", (short)1088, new BlockData(184, 1), new BlockData(184, 1), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(BIRCH_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("birch wood fence gate facing north", (short)1089, new BlockData(184, 2), new BlockData(184, 2), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(BIRCH_WOOD_FENCE_GATE_FACING_EAST = new Blocks("birch wood fence gate facing east", (short)1090, new BlockData(184, 3), new BlockData(184, 3), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(JUNGLE_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("jungle wood fence gate facing south", (short)1091, new BlockData(185, 0), new BlockData(185, 0), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(JUNGLE_WOOD_FENCE_GATE_FACING_WEST = new Blocks("jungle wood fence gate facing west", (short)1092, new BlockData(185, 1), new BlockData(185, 1), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(JUNGLE_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("jungle wood fence gate facing north", (short)1093, new BlockData(185, 2), new BlockData(185, 2), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(JUNGLE_WOOD_FENCE_GATE_FACING_EAST = new Blocks("jungle wood fence gate facing east", (short)1094, new BlockData(185, 3), new BlockData(185, 3), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(ACACIA_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("acacia wood fence gate facing south", (short)1095, new BlockData(187, 0), new BlockData(187, 0), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(ACACIA_WOOD_FENCE_GATE_FACING_WEST = new Blocks("acacia wood fence gate facing west", (short)1096, new BlockData(187, 1), new BlockData(187, 1), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(ACACIA_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("acacia wood fence gate facing north", (short)1097, new BlockData(187, 2), new BlockData(187, 2), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(ACACIA_WOOD_FENCE_GATE_FACING_EAST = new Blocks("acacia wood fence gate facing east", (short)1098, new BlockData(187, 3), new BlockData(187, 3), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(DARK_OAK_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("dark oak wood fence gate facing south", (short)1099, new BlockData(186, 0), new BlockData(186, 0), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(DARK_OAK_WOOD_FENCE_GATE_FACING_WEST = new Blocks("dark oak wood fence gate facing west", (short)1100, new BlockData(186, 1), new BlockData(186, 1), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(DARK_OAK_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("dark oak wood fence gate facing north", (short)1101, new BlockData(186, 2), new BlockData(186, 2), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(DARK_OAK_WOOD_FENCE_GATE_FACING_EAST = new Blocks("dark oak wood fence gate facing east", (short)1102, new BlockData(186, 3), new BlockData(186, 3), true, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_OAK_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("opened oak wood fence gate facing south", (short)1103, new BlockData(107, 4), new BlockData(107, 4), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_OAK_WOOD_FENCE_GATE_FACING_WEST = new Blocks("opened oak wood fence gate facing west", (short)1104, new BlockData(107, 5), new BlockData(107, 5), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_OAK_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("opened oak wood fence gate facing north", (short)1105, new BlockData(107, 6), new BlockData(107, 6), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_OAK_WOOD_FENCE_GATE_FACING_EAST = new Blocks("opened oak wood fence gate facing east", (short)1106, new BlockData(107, 7), new BlockData(107, 7), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("opened spruce wood fence gate facing south", (short)1107, new BlockData(183, 4), new BlockData(183, 4), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_WEST = new Blocks("opened spruce wood fence gate facing west", (short)1108, new BlockData(183, 5), new BlockData(183, 5), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("opened spruce wood fence gate facing north", (short)1109, new BlockData(183, 6), new BlockData(183, 6), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_SPRUCE_WOOD_FENCE_GATE_FACING_EAST = new Blocks("opened spruce wood fence gate facing east", (short)1110, new BlockData(183, 7), new BlockData(183, 7), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_BIRCH_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("opened birch wood fence gate facing south", (short)1111, new BlockData(184, 4), new BlockData(184, 4), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_BIRCH_WOOD_FENCE_GATE_FACING_WEST = new Blocks("opened birch wood fence gate facing west", (short)1112, new BlockData(184, 5), new BlockData(184, 5), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_BIRCH_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("opened birch wood fence gate facing north", (short)1113, new BlockData(184, 6), new BlockData(184, 6), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_BIRCH_WOOD_FENCE_GATE_FACING_EAST = new Blocks("opened birch wood fence gate facing east", (short)1114, new BlockData(184, 7), new BlockData(184, 7), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("opened jungle wood fence gate facing south", (short)1115, new BlockData(185, 4), new BlockData(185, 4), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_WEST = new Blocks("opened jungle wood fence gate facing west", (short)1116, new BlockData(185, 5), new BlockData(185, 5), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("opened jungle wood fence gate facing north", (short)1117, new BlockData(185, 6), new BlockData(185, 6), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_JUNGLE_WOOD_FENCE_GATE_FACING_EAST = new Blocks("opened jungle wood fence gate facing east", (short)1118, new BlockData(185, 7), new BlockData(185, 7), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_ACACIA_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("opened acacia wood fence gate facing south", (short)1119, new BlockData(187, 4), new BlockData(187, 4), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_ACACIA_WOOD_FENCE_GATE_FACING_WEST = new Blocks("opened acacia wood fence gate facing west", (short)1120, new BlockData(187, 5), new BlockData(187, 5), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_ACACIA_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("opened acacia wood fence gate facing north", (short)1121, new BlockData(187, 6), new BlockData(187, 6), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_ACACIA_WOOD_FENCE_GATE_FACING_EAST = new Blocks("opened acacia wood fence gate facing east", (short)1122, new BlockData(187, 7), new BlockData(187, 7), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_SOUTH = new Blocks("opened dark oak wood fence gate facing south", (short)1123, new BlockData(186, 4), new BlockData(186, 4), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_WEST = new Blocks("opened dark oak wood fence gate facing west", (short)1124, new BlockData(186, 5), new BlockData(186, 5), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_NORTH = new Blocks("opened dark oak wood fence gate facing north", (short)1125, new BlockData(186, 6), new BlockData(186, 6), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(OPENED_DARK_OAK_WOOD_FENCE_GATE_FACING_EAST = new Blocks("opened dark oak wood fence gate facing east", (short)1126, new BlockData(186, 7), new BlockData(186, 7), false, (double)2, (double)15, (byte)0, (byte)0, false));
        add(ENCHANTMENT_TABLE = new Blocks("enchantment table", (short)1127, new BlockData(116, 0), new BlockData(116, 0), true, (double)5, (double)6000, (byte)15, (byte)12, false));
        add(BREWING_STAND_EMPTY = new Blocks("brewing stand empty", (short)1128, new BlockData(117, 0), new BlockData(117, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(BREWING_STAND_BOTTLE_1 = new Blocks("brewing stand bottle 1", (short)1129, new BlockData(117, 1), new BlockData(117, 1), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(BREWING_STAND_BOTTLE_2 = new Blocks("brewing stand bottle 2", (short)1130, new BlockData(117, 2), new BlockData(117, 2), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(BREWING_STAND_BOTTLE_1_2 = new Blocks("brewing stand bottle 1 2", (short)1131, new BlockData(117, 3), new BlockData(117, 3), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(BREWING_STAND_BOTTLE_3 = new Blocks("brewing stand bottle 3", (short)1132, new BlockData(117, 4), new BlockData(117, 4), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(BREWING_STAND_BOTTLE_1_3 = new Blocks("brewing stand bottle 1 3", (short)1133, new BlockData(117, 5), new BlockData(117, 5), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(BREWING_STAND_BOTTLE_2_3 = new Blocks("brewing stand bottle 2 3", (short)1134, new BlockData(117, 6), new BlockData(117, 6), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(BREWING_STAND_FULL = new Blocks("brewing stand full", (short)1135, new BlockData(117, 7), new BlockData(117, 7), true, (double)0.5, (double)2.5, (byte)15, (byte)1, false));
        add(CAULDRON_EMPTY = new Blocks("cauldron empty", (short)1136, new BlockData(118, 0), new BlockData(118, 0), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(CAULDRON_ONE_SIXTH_FILLED = new Blocks("cauldron one sixth filled", (short)1137, null, new BlockData(118, 1), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(CAULDRON_ONE_THIRD_FILLED = new Blocks("cauldron one third filled", (short)1138, new BlockData(118, 1), new BlockData(118, 2), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(CAULDRON_THREE_SIXTH_FILLED = new Blocks("cauldron three sixth filled", (short)1139, null, new BlockData(118, 3), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(CAULDRON_TWO_THIRD_FILLED = new Blocks("cauldron two third filled", (short)1140, new BlockData(118, 2), new BlockData(118, 4), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(CAULDRON_FIVE_SIXTH_FILLED = new Blocks("cauldron five sixth filled", (short)1141, null, new BlockData(118, 5), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(CAULDRON_FILLED = new Blocks("cauldron filled", (short)1142, new BlockData(118, 3), new BlockData(118, 6), true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(END_PORTAL_FRAME_SOUTH = new Blocks("end portal frame south", (short)1143, new BlockData(120, 0), new BlockData(120, 0), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(END_PORTAL_FRAME_WEST = new Blocks("end portal frame west", (short)1144, new BlockData(120, 1), new BlockData(120, 1), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(END_PORTAL_FRAME_NORTH = new Blocks("end portal frame north", (short)1145, new BlockData(120, 2), new BlockData(120, 2), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(END_PORTAL_FRAME_EAST = new Blocks("end portal frame east", (short)1146, new BlockData(120, 3), new BlockData(120, 3), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(ACTIVE_END_PORTAL_FRAME_SOUTH = new Blocks("active end portal frame south", (short)1147, new BlockData(120, 4), new BlockData(120, 4), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(ACTIVE_END_PORTAL_FRAME_WEST = new Blocks("active end portal frame west", (short)1148, new BlockData(120, 5), new BlockData(120, 5), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(ACTIVE_END_PORTAL_FRAME_NORTH = new Blocks("active end portal frame north", (short)1149, new BlockData(120, 6), new BlockData(120, 6), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(ACTIVE_END_PORTAL_FRAME_EAST = new Blocks("active end portal frame east", (short)1150, new BlockData(120, 7), new BlockData(120, 7), true, (double)-1, (double)1.8e+07, (byte)0, (byte)1, false));
        add(END_STONE = new Blocks("end stone", (short)1151, new BlockData(121, 0), new BlockData(121, 0), true, (double)3, (double)45, (byte)15, (byte)0, false));
        add(END_STONE_BRICKS = new Blocks("end stone bricks", (short)1152, new BlockData(206, 0), new BlockData(206, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(END_PORTAL = new Blocks("end portal", (short)1153, new BlockData(119, 0), new BlockData(119, 0), true, (double)-1, (double)1.8e+07, (byte)0, (byte)15, false));
        add(END_GATEWAY = new Blocks("end gateway", (short)1154, new BlockData(209, 0), new BlockData(209, 0), false, (double)-1, (double)1.8e+07, (byte)15, (byte)15, false));
        add(DRAGON_EGG = new Blocks("dragon egg", (short)1155, new BlockData(122, 0), new BlockData(122, 0), true, (double)3, (double)45, (byte)0, (byte)1, false));
        add(REDSTONE_LAMP = new Blocks("redstone lamp", (short)1156, new BlockData(123, 0), new BlockData(123, 0), true, (double)0.3, (double)1.5, (byte)15, (byte)0, false));
        add(ACTIVE_REDSTONE_LAMP = new Blocks("active redstone lamp", (short)1157, new BlockData(124, 0), new BlockData(124, 0), true, (double)0.3, (double)1.5, (byte)15, (byte)15, false));
        add(COCOA_NORTH_0 = new Blocks("cocoa north 0", (short)1158, new BlockData(127, 0), new BlockData(127, 0), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_EAST_0 = new Blocks("cocoa east 0", (short)1159, new BlockData(127, 1), new BlockData(127, 1), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_SOUTH_0 = new Blocks("cocoa south 0", (short)1160, new BlockData(127, 2), new BlockData(127, 2), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_WEST_0 = new Blocks("cocoa west 0", (short)1161, new BlockData(127, 3), new BlockData(127, 3), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_NORTH_1 = new Blocks("cocoa north 1", (short)1162, new BlockData(127, 4), new BlockData(127, 4), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_EAST_1 = new Blocks("cocoa east 1", (short)1163, new BlockData(127, 5), new BlockData(127, 5), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_SOUTH_1 = new Blocks("cocoa south 1", (short)1164, new BlockData(127, 6), new BlockData(127, 6), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_WEST_1 = new Blocks("cocoa west 1", (short)1165, new BlockData(127, 7), new BlockData(127, 7), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_NORTH_2 = new Blocks("cocoa north 2", (short)1166, new BlockData(127, 8), new BlockData(127, 8), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_EAST_2 = new Blocks("cocoa east 2", (short)1167, new BlockData(127, 9), new BlockData(127, 9), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_SOUTH_2 = new Blocks("cocoa south 2", (short)1168, new BlockData(127, 10), new BlockData(127, 10), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(COCOA_WEST_2 = new Blocks("cocoa west 2", (short)1169, new BlockData(127, 11), new BlockData(127, 11), true, (double)0.2, (double)15, (byte)0, (byte)0, false));
        add(TRIPWIRE_HOOK_FACING_SOUTH = new Blocks("tripwire hook facing south", (short)1170, new BlockData(131, 0), new BlockData(131, 0), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(TRIPWIRE_HOOK_FACING_WEST = new Blocks("tripwire hook facing west", (short)1171, new BlockData(131, 1), new BlockData(131, 1), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(TRIPWIRE_HOOK_FACING_NORTH = new Blocks("tripwire hook facing north", (short)1172, new BlockData(131, 2), new BlockData(131, 2), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(TRIPWIRE_HOOK_FACING_EAST = new Blocks("tripwire hook facing east", (short)1173, new BlockData(131, 3), new BlockData(131, 3), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(CONNECTED_TRIPWIRE_HOOK_FACING_SOUTH = new Blocks("connected tripwire hook facing south", (short)1174, new BlockData(131, 4), new BlockData(131, 4), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(CONNECTED_TRIPWIRE_HOOK_FACING_WEST = new Blocks("connected tripwire hook facing west", (short)1175, new BlockData(131, 5), new BlockData(131, 5), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(CONNECTED_TRIPWIRE_HOOK_FACING_NORTH = new Blocks("connected tripwire hook facing north", (short)1176, new BlockData(131, 6), new BlockData(131, 6), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(CONNECTED_TRIPWIRE_HOOK_FACING_EAST = new Blocks("connected tripwire hook facing east", (short)1177, new BlockData(131, 7), new BlockData(131, 7), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(POWERED_TRIPWIRE_HOOK_FACING_SOUTH = new Blocks("powered tripwire hook facing south", (short)1178, new BlockData(131, 8), new BlockData(131, 8), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(POWERED_TRIPWIRE_HOOK_FACING_WEST = new Blocks("powered tripwire hook facing west", (short)1179, new BlockData(131, 9), new BlockData(131, 9), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(POWERED_TRIPWIRE_HOOK_FACING_NORTH = new Blocks("powered tripwire hook facing north", (short)1180, new BlockData(131, 10), new BlockData(131, 10), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(POWERED_TRIPWIRE_HOOK_FACING_EAST = new Blocks("powered tripwire hook facing east", (short)1181, new BlockData(131, 11), new BlockData(131, 11), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(POWERED_TRIPWIRE = new Blocks("powered tripwire", (short)1182, new BlockData(132, 1), new BlockData(132, 1), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(CONNECTED_TRIPWIRE = new Blocks("connected tripwire", (short)1183, new BlockData(132, 4), new BlockData(132, 4), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(TRIPWIRE = new Blocks("tripwire", (short)1184, new BlockData(132, 8), new BlockData(132, 8), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMMAND_BLOCK_FACING_DOWN = new Blocks("command block facing down", (short)1185, new BlockData(137, 0), new BlockData(137, 0), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(COMMAND_BLOCK_FACING_UP = new Blocks("command block facing up", (short)1186, new BlockData(137, 1), new BlockData(137, 1), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(COMMAND_BLOCK_FACING_NORTH = new Blocks("command block facing north", (short)1187, new BlockData(137, 2), new BlockData(137, 2), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(COMMAND_BLOCK_FACING_SOUTH = new Blocks("command block facing south", (short)1188, new BlockData(137, 3), new BlockData(137, 3), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(COMMAND_BLOCK_FACING_WEST = new Blocks("command block facing west", (short)1189, new BlockData(137, 4), new BlockData(137, 4), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(COMMAND_BLOCK_FACING_EAST = new Blocks("command block facing east", (short)1190, new BlockData(137, 5), new BlockData(137, 5), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_COMMAND_BLOCK_FACING_DOWN = new Blocks("conditional command block facing down", (short)1191, new BlockData(137, 8), new BlockData(137, 8), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_COMMAND_BLOCK_FACING_UP = new Blocks("conditional command block facing up", (short)1192, new BlockData(137, 9), new BlockData(137, 9), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_COMMAND_BLOCK_FACING_NORTH = new Blocks("conditional command block facing north", (short)1193, new BlockData(137, 10), new BlockData(137, 10), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_COMMAND_BLOCK_FACING_SOUTH = new Blocks("conditional command block facing south", (short)1194, new BlockData(137, 11), new BlockData(137, 11), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_COMMAND_BLOCK_FACING_WEST = new Blocks("conditional command block facing west", (short)1195, new BlockData(137, 12), new BlockData(137, 12), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_COMMAND_BLOCK_FACING_EAST = new Blocks("conditional command block facing east", (short)1196, new BlockData(137, 13), new BlockData(137, 13), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(REPEATING_COMMAND_BLOCK_FACING_DOWN = new Blocks("repeating command block facing down", (short)1197, new BlockData(210, 0), new BlockData(188, 0), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(REPEATING_COMMAND_BLOCK_FACING_UP = new Blocks("repeating command block facing up", (short)1198, new BlockData(210, 1), new BlockData(188, 1), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(REPEATING_COMMAND_BLOCK_FACING_NORTH = new Blocks("repeating command block facing north", (short)1199, new BlockData(210, 2), new BlockData(188, 2), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(REPEATING_COMMAND_BLOCK_FACING_SOUTH = new Blocks("repeating command block facing south", (short)1200, new BlockData(210, 3), new BlockData(188, 3), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(REPEATING_COMMAND_BLOCK_FACING_WEST = new Blocks("repeating command block facing west", (short)1201, new BlockData(210, 4), new BlockData(188, 4), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(REPEATING_COMMAND_BLOCK_FACING_EAST = new Blocks("repeating command block facing east", (short)1202, new BlockData(210, 5), new BlockData(188, 5), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_DOWN = new Blocks("conditional repeating command block facing down", (short)1203, new BlockData(210, 8), new BlockData(188, 8), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_UP = new Blocks("conditional repeating command block facing up", (short)1204, new BlockData(210, 9), new BlockData(188, 9), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_NORTH = new Blocks("conditional repeating command block facing north", (short)1205, new BlockData(210, 10), new BlockData(188, 10), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_SOUTH = new Blocks("conditional repeating command block facing south", (short)1206, new BlockData(210, 11), new BlockData(188, 11), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_WEST = new Blocks("conditional repeating command block facing west", (short)1207, new BlockData(210, 12), new BlockData(188, 12), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_REPEATING_COMMAND_BLOCK_FACING_EAST = new Blocks("conditional repeating command block facing east", (short)1208, new BlockData(210, 13), new BlockData(188, 13), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CHAIN_COMMAND_BLOCK_FACING_DOWN = new Blocks("chain command block facing down", (short)1209, new BlockData(211, 0), new BlockData(189, 0), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CHAIN_COMMAND_BLOCK_FACING_UP = new Blocks("chain command block facing up", (short)1210, new BlockData(211, 1), new BlockData(189, 1), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CHAIN_COMMAND_BLOCK_FACING_NORTH = new Blocks("chain command block facing north", (short)1211, new BlockData(211, 2), new BlockData(189, 2), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CHAIN_COMMAND_BLOCK_FACING_SOUTH = new Blocks("chain command block facing south", (short)1212, new BlockData(211, 3), new BlockData(189, 3), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CHAIN_COMMAND_BLOCK_FACING_WEST = new Blocks("chain command block facing west", (short)1213, new BlockData(211, 4), new BlockData(189, 4), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CHAIN_COMMAND_BLOCK_FACING_EAST = new Blocks("chain command block facing east", (short)1214, new BlockData(211, 5), new BlockData(189, 5), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_DOWN = new Blocks("conditional chain command block facing down", (short)1215, new BlockData(211, 8), new BlockData(189, 8), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_UP = new Blocks("conditional chain command block facing up", (short)1216, new BlockData(211, 9), new BlockData(189, 9), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_NORTH = new Blocks("conditional chain command block facing north", (short)1217, new BlockData(211, 10), new BlockData(189, 10), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_SOUTH = new Blocks("conditional chain command block facing south", (short)1218, new BlockData(211, 11), new BlockData(189, 11), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_WEST = new Blocks("conditional chain command block facing west", (short)1219, new BlockData(211, 12), new BlockData(189, 12), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(CONDITIONAL_CHAIN_COMMAND_BLOCK_FACING_EAST = new Blocks("conditional chain command block facing east", (short)1220, new BlockData(211, 13), new BlockData(189, 13), true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(BEACON = new Blocks("beacon", (short)1221, new BlockData(138, 0), new BlockData(138, 0), true, (double)3, (double)15, (byte)0, (byte)15, false));
        add(FLOWER_POT = new Blocks("flower pot", (short)1222, new BlockData(140, 0), new BlockData(140, 0), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(MOB_HEAD_FLOOR = new Blocks("mob head floor", (short)1223, new BlockData(144, 1), new BlockData(144, 1), true, (double)1, (double)5, (byte)0, (byte)0, false));
        add(MOB_HEAD_FACING_NORTH = new Blocks("mob head facing north", (short)1224, new BlockData(144, 2), new BlockData(144, 2), true, (double)1, (double)5, (byte)0, (byte)0, false));
        add(MOB_HEAD_FACING_SOUTH = new Blocks("mob head facing south", (short)1225, new BlockData(144, 3), new BlockData(144, 3), true, (double)1, (double)5, (byte)0, (byte)0, false));
        add(MOB_HEAD_FACING_EAST = new Blocks("mob head facing east", (short)1226, new BlockData(144, 4), new BlockData(144, 4), true, (double)1, (double)5, (byte)0, (byte)0, false));
        add(MOB_HEAD_FACING_WEST = new Blocks("mob head facing west", (short)1227, new BlockData(144, 5), new BlockData(144, 5), true, (double)1, (double)5, (byte)0, (byte)0, false));
        add(ANVIL_NORTH_SOUTH = new Blocks("anvil north south", (short)1228, new BlockData(145, 0), new BlockData(145, 0), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(ANVIL_EAST_WEST = new Blocks("anvil east west", (short)1229, new BlockData(145, 1), new BlockData(145, 1), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(ANVIL_SOUTH_NORTH = new Blocks("anvil south north", (short)1230, new BlockData(145, 2), new BlockData(145, 2), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(ANVIL_WEST_EAST = new Blocks("anvil west east", (short)1231, new BlockData(145, 3), new BlockData(145, 3), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(SLIGHTLY_DAMAGED_ANVIL_NORTH_SOUTH = new Blocks("slightly damaged anvil north south", (short)1232, new BlockData(145, 4), new BlockData(145, 4), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(SLIGHTLY_DAMAGED_ANVIL_EAST_WEST = new Blocks("slightly damaged anvil east west", (short)1233, new BlockData(145, 5), new BlockData(145, 5), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(SLIGHTLY_DAMAGED_ANVIL_SOUTH_NORTH = new Blocks("slightly damaged anvil south north", (short)1234, new BlockData(145, 6), new BlockData(145, 6), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(SLIGHTLY_DAMAGED_ANVIL_WEST_EAST = new Blocks("slightly damaged anvil west east", (short)1235, new BlockData(145, 7), new BlockData(145, 7), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(VERY_DAMAGED_ANVIL_NORTH_SOUTH = new Blocks("very damaged anvil north south", (short)1236, new BlockData(145, 8), new BlockData(145, 8), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(VERY_DAMAGED_ANVIL_EAST_WEST = new Blocks("very damaged anvil east west", (short)1237, new BlockData(145, 9), new BlockData(145, 9), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(VERY_DAMAGED_ANVIL_SOUTH_NORTH = new Blocks("very damaged anvil south north", (short)1238, new BlockData(145, 10), new BlockData(145, 10), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(VERY_DAMAGED_ANVIL_WEST_EAST = new Blocks("very damaged anvil west east", (short)1239, new BlockData(145, 11), new BlockData(145, 11), true, (double)5, (double)6000, (byte)0, (byte)0, false));
        add(LILY_PAD = new Blocks("lily pad", (short)1240, new BlockData(111, 0), new BlockData(111, 0), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_FACING_NORTH = new Blocks("comparator facing north", (short)1241, new BlockData(149, 0), new BlockData(149, 0), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_FACING_EAST = new Blocks("comparator facing east", (short)1242, new BlockData(149, 1), new BlockData(149, 1), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_FACING_SOUTH = new Blocks("comparator facing south", (short)1243, new BlockData(149, 2), new BlockData(149, 2), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_FACING_WEST = new Blocks("comparator facing west", (short)1244, new BlockData(149, 3), new BlockData(149, 3), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_SUBSTRACTION_MODE_FACING_NORTH = new Blocks("comparator substraction mode facing north", (short)1245, new BlockData(149, 4), new BlockData(149, 4), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_SUBSTRACTION_MODE_FACING_EAST = new Blocks("comparator substraction mode facing east", (short)1246, new BlockData(149, 5), new BlockData(149, 5), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_SUBSTRACTION_MODE_FACING_SOUTH = new Blocks("comparator substraction mode facing south", (short)1247, new BlockData(149, 6), new BlockData(149, 6), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(COMPARATOR_SUBSTRACTION_MODE_FACING_WEST = new Blocks("comparator substraction mode facing west", (short)1248, new BlockData(149, 7), new BlockData(149, 7), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(POWERED_COMPARATOR_FACING_NORTH = new Blocks("powered comparator facing north", (short)1249, new BlockData(149, 8), new BlockData(149, 8), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(POWERED_COMPARATOR_FACING_EAST = new Blocks("powered comparator facing east", (short)1250, new BlockData(149, 9), new BlockData(149, 9), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(POWERED_COMPARATOR_FACING_SOUTH = new Blocks("powered comparator facing south", (short)1251, new BlockData(149, 10), new BlockData(149, 10), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(POWERED_COMPARATOR_FACING_WEST = new Blocks("powered comparator facing west", (short)1252, new BlockData(149, 11), new BlockData(149, 11), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_NORTH = new Blocks("powered comparator substraction mode facing north", (short)1253, new BlockData(149, 12), new BlockData(149, 12), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_EAST = new Blocks("powered comparator substraction mode facing east", (short)1254, new BlockData(149, 13), new BlockData(149, 13), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_SOUTH = new Blocks("powered comparator substraction mode facing south", (short)1255, new BlockData(149, 14), new BlockData(149, 14), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(POWERED_COMPARATOR_SUBSTRACTION_MODE_FACING_WEST = new Blocks("powered comparator substraction mode facing west", (short)1256, new BlockData(149, 15), new BlockData(149, 15), true, (double)0, (double)0, (byte)0, (byte)7, false));
        add(DAYLIGHT_SENSOR_0 = new Blocks("daylight sensor 0", (short)1257, new BlockData(151, 0), new BlockData(151, 0), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_1 = new Blocks("daylight sensor 1", (short)1258, new BlockData(151, 1), new BlockData(151, 1), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_2 = new Blocks("daylight sensor 2", (short)1259, new BlockData(151, 2), new BlockData(151, 2), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_3 = new Blocks("daylight sensor 3", (short)1260, new BlockData(151, 3), new BlockData(151, 3), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_4 = new Blocks("daylight sensor 4", (short)1261, new BlockData(151, 4), new BlockData(151, 4), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_5 = new Blocks("daylight sensor 5", (short)1262, new BlockData(151, 5), new BlockData(151, 5), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_6 = new Blocks("daylight sensor 6", (short)1263, new BlockData(151, 6), new BlockData(151, 6), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_7 = new Blocks("daylight sensor 7", (short)1264, new BlockData(151, 7), new BlockData(151, 7), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_8 = new Blocks("daylight sensor 8", (short)1265, new BlockData(151, 8), new BlockData(151, 8), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_9 = new Blocks("daylight sensor 9", (short)1266, new BlockData(151, 9), new BlockData(151, 9), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_10 = new Blocks("daylight sensor 10", (short)1267, new BlockData(151, 10), new BlockData(151, 10), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_11 = new Blocks("daylight sensor 11", (short)1268, new BlockData(151, 11), new BlockData(151, 11), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_12 = new Blocks("daylight sensor 12", (short)1269, new BlockData(151, 12), new BlockData(151, 12), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_13 = new Blocks("daylight sensor 13", (short)1270, new BlockData(151, 13), new BlockData(151, 13), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_14 = new Blocks("daylight sensor 14", (short)1271, new BlockData(151, 14), new BlockData(151, 14), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(DAYLIGHT_SENSOR_15 = new Blocks("daylight sensor 15", (short)1272, new BlockData(151, 15), new BlockData(151, 15), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_0 = new Blocks("inverted daylight sensor 0", (short)1273, new BlockData(178, 0), new BlockData(178, 0), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_1 = new Blocks("inverted daylight sensor 1", (short)1274, new BlockData(178, 1), new BlockData(178, 1), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_2 = new Blocks("inverted daylight sensor 2", (short)1275, new BlockData(178, 2), new BlockData(178, 2), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_3 = new Blocks("inverted daylight sensor 3", (short)1276, new BlockData(178, 3), new BlockData(178, 3), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_4 = new Blocks("inverted daylight sensor 4", (short)1277, new BlockData(178, 4), new BlockData(178, 4), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_5 = new Blocks("inverted daylight sensor 5", (short)1278, new BlockData(178, 5), new BlockData(178, 5), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_6 = new Blocks("inverted daylight sensor 6", (short)1279, new BlockData(178, 6), new BlockData(178, 6), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_7 = new Blocks("inverted daylight sensor 7", (short)1280, new BlockData(178, 7), new BlockData(178, 7), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_8 = new Blocks("inverted daylight sensor 8", (short)1281, new BlockData(178, 8), new BlockData(178, 8), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_9 = new Blocks("inverted daylight sensor 9", (short)1282, new BlockData(178, 9), new BlockData(178, 9), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_10 = new Blocks("inverted daylight sensor 10", (short)1283, new BlockData(178, 10), new BlockData(178, 10), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_11 = new Blocks("inverted daylight sensor 11", (short)1284, new BlockData(178, 11), new BlockData(178, 11), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_12 = new Blocks("inverted daylight sensor 12", (short)1285, new BlockData(178, 12), new BlockData(178, 12), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_13 = new Blocks("inverted daylight sensor 13", (short)1286, new BlockData(178, 13), new BlockData(178, 13), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_14 = new Blocks("inverted daylight sensor 14", (short)1287, new BlockData(178, 14), new BlockData(178, 14), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(INVERTED_DAYLIGHT_SENSOR_15 = new Blocks("inverted daylight sensor 15", (short)1288, new BlockData(178, 15), new BlockData(178, 15), true, (double)0.2, (double)1, (byte)0, (byte)0, false));
        add(HOPPER_OUTPUT_FACING_DOWN = new Blocks("hopper output facing down", (short)1289, new BlockData(154, 0), new BlockData(154, 0), true, (double)3, (double)24, (byte)0, (byte)0, false));
        add(HOPPER_OUTPUT_FACING_NORTH = new Blocks("hopper output facing north", (short)1290, new BlockData(154, 2), new BlockData(154, 2), true, (double)3, (double)24, (byte)0, (byte)0, false));
        add(HOPPER_OUTPUT_FACING_SOUTH = new Blocks("hopper output facing south", (short)1291, new BlockData(154, 3), new BlockData(154, 3), true, (double)3, (double)24, (byte)0, (byte)0, false));
        add(HOPPER_OUTPUT_FACING_WEST = new Blocks("hopper output facing west", (short)1292, new BlockData(154, 4), new BlockData(154, 4), true, (double)3, (double)24, (byte)0, (byte)0, false));
        add(HOPPER_OUTPUT_FACING_EAST = new Blocks("hopper output facing east", (short)1293, new BlockData(154, 5), new BlockData(154, 5), true, (double)3, (double)24, (byte)0, (byte)0, false));
        add(QUARTZ_BLOCK = new Blocks("quartz block", (short)1294, new BlockData(155, 0), new BlockData(155, 0), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(CHISELED_QUARTZ_BLOCK = new Blocks("chiseled quartz block", (short)1295, new BlockData(155, 1), new BlockData(155, 1), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(PILLAR_QUARTZ_BLOCK_VERTICAL = new Blocks("pillar quartz block vertical", (short)1296, new BlockData(155, 2), new BlockData(155, 2), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(PILLAR_QUARTZ_BLOCK_NORTH_SOUTH = new Blocks("pillar quartz block north south", (short)1297, new BlockData(155, 3), new BlockData(155, 3), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(PILLAR_QUARTZ_BLOCK_EAST_WEST = new Blocks("pillar quartz block east west", (short)1298, new BlockData(155, 4), new BlockData(155, 4), true, (double)0.8, (double)4, (byte)15, (byte)0, false));
        add(SLIME_BLOCK = new Blocks("slime block", (short)1299, new BlockData(165, 0), new BlockData(165, 0), true, (double)0, (double)0, (byte)0, (byte)0, false));
        add(BARRIER = new Blocks("barrier", (short)1300, new BlockData(166, 0), new BlockData(95, 0), true, (double)-1, (double)1.8e+07, (byte)0, (byte)0, false));
        add(PRISMARINE = new Blocks("prismarine", (short)1301, new BlockData(168, 0), new BlockData(168, 0), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PRISMARINE_BRICKS = new Blocks("prismarine bricks", (short)1302, new BlockData(168, 1), new BlockData(168, 1), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(DARK_PRISMARINE = new Blocks("dark prismarine", (short)1303, new BlockData(168, 2), new BlockData(168, 2), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(SEA_LANTERN = new Blocks("sea lantern", (short)1304, new BlockData(169, 0), new BlockData(169, 0), true, (double)0.3, (double)1.5, (byte)0, (byte)15, false));
        add(HAY_BALE_VERTICAL = new Blocks("hay bale vertical", (short)1305, new BlockData(170, 0), new BlockData(170, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HAY_BALE_EAST_WEST = new Blocks("hay bale east west", (short)1306, new BlockData(170, 4), new BlockData(170, 4), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(HAY_BALE_NORTH_SOUTH = new Blocks("hay bale north south", (short)1307, new BlockData(170, 8), new BlockData(170, 8), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(BANNER_FACING_SOUTH = new Blocks("banner facing south", (short)1308, new BlockData(176, 0), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_SOUTH_SOUTHWEST = new Blocks("banner facing south southwest", (short)1309, new BlockData(176, 1), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_SOUTHWEST = new Blocks("banner facing southwest", (short)1310, new BlockData(176, 2), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_WEST_WESTSOUTH = new Blocks("banner facing west westsouth", (short)1311, new BlockData(176, 3), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_WEST = new Blocks("banner facing west", (short)1312, new BlockData(176, 4), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_WEST_NORTHWEST = new Blocks("banner facing west northwest", (short)1313, new BlockData(176, 5), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_NORTHWEST = new Blocks("banner facing northwest", (short)1314, new BlockData(176, 6), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_NORTH_NORTHWEST = new Blocks("banner facing north northwest", (short)1315, new BlockData(176, 7), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_NORTH = new Blocks("banner facing north", (short)1316, new BlockData(176, 8), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_NORTH_NORTHEAST = new Blocks("banner facing north northeast", (short)1317, new BlockData(176, 9), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_NORTHEAST = new Blocks("banner facing northeast", (short)1318, new BlockData(176, 10), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_EAST_NORTHEAST = new Blocks("banner facing east northeast", (short)1319, new BlockData(176, 11), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_EAST = new Blocks("banner facing east", (short)1320, new BlockData(176, 12), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_EAST_SOUTHEAST = new Blocks("banner facing east southeast", (short)1321, new BlockData(176, 13), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_SOUTHEAST = new Blocks("banner facing southeast", (short)1322, new BlockData(176, 14), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(BANNER_FACING_SOUTH_SOUTHEAST = new Blocks("banner facing south southeast", (short)1323, new BlockData(176, 15), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_BANNER_FACING_NORTH = new Blocks("wall banner facing north", (short)1324, new BlockData(177, 2), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_BANNER_FACING_SOUTH = new Blocks("wall banner facing south", (short)1325, new BlockData(177, 3), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_BANNER_FACING_WEST = new Blocks("wall banner facing west", (short)1326, new BlockData(177, 4), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(WALL_BANNER_FACING_EAST = new Blocks("wall banner facing east", (short)1327, new BlockData(177, 5), null, false, (double)1, (double)5, (byte)0, (byte)0, false));
        add(ITEM_FRAME_FACING_NORTH = new Blocks("item frame facing north", (short)1328, null, new BlockData(199, 2), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(ITEM_FRAME_FACING_SOUTH = new Blocks("item frame facing south", (short)1329, null, new BlockData(199, 3), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(ITEM_FRAME_FACING_WEST = new Blocks("item frame facing west", (short)1330, null, new BlockData(199, 4), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(ITEM_FRAME_FACING_EAST = new Blocks("item frame facing east", (short)1331, null, new BlockData(199, 5), false, (double)0, (double)0, (byte)0, (byte)0, false));
        add(END_ROD_FACING_DOWN = new Blocks("end rod facing down", (short)1332, new BlockData(198, 0), new BlockData(208, 0), true, (double)0, (double)0, (byte)15, (byte)14, false));
        add(END_ROD_FACING_UP = new Blocks("end rod facing up", (short)1333, new BlockData(198, 1), new BlockData(208, 1), true, (double)0, (double)0, (byte)15, (byte)14, false));
        add(END_ROD_FACING_NORTH = new Blocks("end rod facing north", (short)1334, new BlockData(198, 2), new BlockData(208, 2), true, (double)0, (double)0, (byte)15, (byte)14, false));
        add(END_ROD_FACING_SOUTH = new Blocks("end rod facing south", (short)1335, new BlockData(198, 3), new BlockData(208, 3), true, (double)0, (double)0, (byte)15, (byte)14, false));
        add(END_ROD_FACING_WEST = new Blocks("end rod facing west", (short)1336, new BlockData(198, 4), new BlockData(208, 4), true, (double)0, (double)0, (byte)15, (byte)14, false));
        add(END_ROD_FACING_EAST = new Blocks("end rod facing east", (short)1337, new BlockData(198, 5), new BlockData(208, 5), true, (double)0, (double)0, (byte)15, (byte)14, false));
        add(CHORUS_PLANT = new Blocks("chorus plant", (short)1338, new BlockData(199, 0), new BlockData(240, 0), true, (double)0.4, (double)2, (byte)0, (byte)0, false));
        add(CHORUS_FLOWER_0 = new Blocks("chorus flower 0", (short)1339, new BlockData(200, 0), new BlockData(200, 0), true, (double)0.4, (double)2, (byte)0, (byte)0, false));
        add(CHORUS_FLOWER_1 = new Blocks("chorus flower 1", (short)1340, new BlockData(200, 1), new BlockData(200, 1), true, (double)0.4, (double)2, (byte)0, (byte)0, false));
        add(CHORUS_FLOWER_2 = new Blocks("chorus flower 2", (short)1341, new BlockData(200, 2), new BlockData(200, 2), true, (double)0.4, (double)2, (byte)0, (byte)0, false));
        add(CHORUS_FLOWER_3 = new Blocks("chorus flower 3", (short)1342, new BlockData(200, 3), new BlockData(200, 3), true, (double)0.4, (double)2, (byte)0, (byte)0, false));
        add(CHORUS_FLOWER_4 = new Blocks("chorus flower 4", (short)1343, new BlockData(200, 4), new BlockData(200, 4), true, (double)0.4, (double)2, (byte)0, (byte)0, false));
        add(CHORUS_FLOWER_5 = new Blocks("chorus flower 5", (short)1344, new BlockData(200, 5), new BlockData(200, 5), true, (double)0.4, (double)2, (byte)0, (byte)0, false));
        add(PURPUR_BLOCK = new Blocks("purpur block", (short)1345, new BlockData(201, 0), new BlockData(201, 0), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_PILLAR_VERTICAL = new Blocks("purpur pillar vertical", (short)1346, new BlockData(202, 0), new BlockData(201, 2), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_PILLAR_EAST_WEST = new Blocks("purpur pillar east west", (short)1347, new BlockData(202, 4), new BlockData(201, 6), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(PURPUR_PILLAR_NORTH_SOUTH = new Blocks("purpur pillar north south", (short)1348, new BlockData(202, 8), new BlockData(201, 10), true, (double)1.5, (double)30, (byte)15, (byte)0, false));
        add(MAGMA_BLOCK = new Blocks("magma block", (short)1349, new BlockData(213, 0), null, true, (double)0.5, (double)2.5, (byte)15, (byte)3, false));
        add(NETHER_WART_BLOCK = new Blocks("nether wart block", (short)1350, new BlockData(214, 0), null, true, (double)1, (double)5, (byte)15, (byte)0, false));
        add(BONE_BLOCK_VERTICAL = new Blocks("bone block vertical", (short)1351, new BlockData(216, 0), null, true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(BONE_BLOCK_EAST_WEST = new Blocks("bone block east west", (short)1352, new BlockData(216, 4), null, true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(BONE_BLOCK_NORTH_SOUTH = new Blocks("bone block north south", (short)1353, new BlockData(216, 8), null, true, (double)2, (double)10, (byte)15, (byte)0, false));
        add(STRUCTURE_VOID = new Blocks("structure void", (short)1354, new BlockData(217, 0), null, false, (double)-1, (double)0, (byte)0, (byte)0, false));
        add(WHITE_SHULKER_BOX = new Blocks("white shulker box", (short)1355, new BlockData(219, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(ORANGE_SHULKER_BOX = new Blocks("orange shulker box", (short)1356, new BlockData(220, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(MAGENTA_SHULKER_BOX = new Blocks("magenta shulker box", (short)1357, new BlockData(221, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(LIGHT_BLUE_SHULKER_BOX = new Blocks("light blue shulker box", (short)1358, new BlockData(222, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(YELLOW_SHULKER_BOX = new Blocks("yellow shulker box", (short)1359, new BlockData(223, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(LIME_SHULKER_BOX = new Blocks("lime shulker box", (short)1360, new BlockData(224, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(PINK_SHULKER_BOX = new Blocks("pink shulker box", (short)1361, new BlockData(225, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(GRAY_SHULKER_BOX = new Blocks("gray shulker box", (short)1362, new BlockData(226, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(LIGHT_GRAY_SHULKER_BOX = new Blocks("light gray shulker box", (short)1363, new BlockData(227, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(CYAN_SHULKER_BOX = new Blocks("cyan shulker box", (short)1364, new BlockData(228, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(PURPLE_SHULKER_BOX = new Blocks("purple shulker box", (short)1365, new BlockData(229, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(BLUE_SHULKER_BOX = new Blocks("blue shulker box", (short)1366, new BlockData(230, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(BROWN_SHULKER_BOX = new Blocks("brown shulker box", (short)1367, new BlockData(231, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(GREEN_SHULKER_BOX = new Blocks("green shulker box", (short)1368, new BlockData(232, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(RED_SHULKER_BOX = new Blocks("red shulker box", (short)1369, new BlockData(233, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(BLACK_SHULKER_BOX = new Blocks("black shulker box", (short)1370, new BlockData(234, 0), null, true, (double)6, (double)30, (byte)0, (byte)0, false));
        add(UPDATE_BLOCK = new Blocks("update block", (short)1371, null, new BlockData(248, 0), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(ATEUPD_BLOCK = new Blocks("ateupd block", (short)1372, null, new BlockData(249, 0), true, (double)0, (double)0, (byte)15, (byte)0, false));
        add(STRUCTURE_BLOCK_SAVE = new Blocks("structure block save", (short)1373, new BlockData(255, 0), null, true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(STRUCTURE_BLOCK_LOAD = new Blocks("structure block load", (short)1374, new BlockData(255, 1), null, true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(STRUCTURE_BLOCK_CORNER = new Blocks("structure block corner", (short)1375, new BlockData(255, 2), null, true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(STRUCTURE_BLOCK_DATA = new Blocks("structure block data", (short)1376, new BlockData(255, 3), null, true, (double)-1, (double)1.8e+07, (byte)15, (byte)0, false));
        add(WHITE_CONCRETE = new Blocks("white concrete", (short)1377, new BlockData(251, 0), new BlockData(236, 0), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(ORANGE_CONCRETE = new Blocks("orange concrete", (short)1378, new BlockData(251, 1), new BlockData(236, 1), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(MAGENTA_CONCRETE = new Blocks("magenta concrete", (short)1379, new BlockData(251, 2), new BlockData(236, 2), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(LIGHT_BLUE_CONCRETE = new Blocks("light blue concrete", (short)1380, new BlockData(251, 3), new BlockData(236, 3), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(YELLOW_CONCRETE = new Blocks("yellow concrete", (short)1381, new BlockData(251, 4), new BlockData(236, 4), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(LIME_CONCRETE = new Blocks("lime concrete", (short)1382, new BlockData(251, 5), new BlockData(236, 5), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(PINK_CONCRETE = new Blocks("pink concrete", (short)1383, new BlockData(251, 6), new BlockData(236, 6), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(GRAY_CONCRETE = new Blocks("gray concrete", (short)1384, new BlockData(251, 7), new BlockData(236, 7), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(LIGHT_GRAY_CONCRETE = new Blocks("light gray concrete", (short)1385, new BlockData(251, 8), new BlockData(236, 8), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(CYAN_CONCRETE = new Blocks("cyan concrete", (short)1386, new BlockData(251, 9), new BlockData(236, 9), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(PURPLE_CONCRETE = new Blocks("purple concrete", (short)1387, new BlockData(251, 10), new BlockData(236, 10), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(BLUE_CONCRETE = new Blocks("blue concrete", (short)1388, new BlockData(251, 11), new BlockData(236, 11), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(BROWN_CONCRETE = new Blocks("brown concrete", (short)1389, new BlockData(251, 12), new BlockData(236, 12), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(GREEN_CONCRETE = new Blocks("green concrete", (short)1390, new BlockData(251, 13), new BlockData(236, 13), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(RED_CONCRETE = new Blocks("red concrete", (short)1391, new BlockData(251, 14), new BlockData(236, 14), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(BLACK_CONCRETE = new Blocks("black concrete", (short)1392, new BlockData(251, 15), new BlockData(236, 15), true, (double)1.8, (double)9, (byte)15, (byte)0, false));
        add(WHITE_CONCRETE_POWDER = new Blocks("white concrete powder", (short)1393, new BlockData(252, 0), new BlockData(237, 0), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(ORANGE_CONCRETE_POWDER = new Blocks("orange concrete powder", (short)1394, new BlockData(252, 1), new BlockData(237, 1), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(MAGENTA_CONCRETE_POWDER = new Blocks("magenta concrete powder", (short)1395, new BlockData(252, 2), new BlockData(237, 2), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_BLUE_CONCRETE_POWDER = new Blocks("light blue concrete powder", (short)1396, new BlockData(252, 3), new BlockData(237, 3), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(YELLOW_CONCRETE_POWDER = new Blocks("yellow concrete powder", (short)1397, new BlockData(252, 4), new BlockData(237, 4), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIME_CONCRETE_POWDER = new Blocks("lime concrete powder", (short)1398, new BlockData(252, 5), new BlockData(237, 5), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PINK_CONCRETE_POWDER = new Blocks("pink concrete powder", (short)1399, new BlockData(252, 6), new BlockData(237, 6), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(GRAY_CONCRETE_POWDER = new Blocks("gray concrete powder", (short)1400, new BlockData(252, 7), new BlockData(237, 7), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(LIGHT_GRAY_CONCRETE_POWDER = new Blocks("light gray concrete powder", (short)1401, new BlockData(252, 8), new BlockData(237, 8), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(CYAN_CONCRETE_POWDER = new Blocks("cyan concrete powder", (short)1402, new BlockData(252, 9), new BlockData(237, 9), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(PURPLE_CONCRETE_POWDER = new Blocks("purple concrete powder", (short)1403, new BlockData(252, 10), new BlockData(237, 10), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(BLUE_CONCRETE_POWDER = new Blocks("blue concrete powder", (short)1404, new BlockData(252, 11), new BlockData(237, 11), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(BROWN_CONCRETE_POWDER = new Blocks("brown concrete powder", (short)1405, new BlockData(252, 12), new BlockData(237, 12), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(GREEN_CONCRETE_POWDER = new Blocks("green concrete powder", (short)1406, new BlockData(252, 13), new BlockData(237, 13), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(RED_CONCRETE_POWDER = new Blocks("red concrete powder", (short)1407, new BlockData(252, 14), new BlockData(237, 14), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(BLACK_CONCRETE_POWDER = new Blocks("black concrete powder", (short)1408, new BlockData(252, 15), new BlockData(237, 15), true, (double)0.5, (double)2.5, (byte)15, (byte)0, false));
        add(FIRE_1 = new Blocks("fire 1", (short)1409, new BlockData(51, 1), new BlockData(51, 1), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_2 = new Blocks("fire 2", (short)1410, new BlockData(51, 2), new BlockData(51, 2), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_3 = new Blocks("fire 3", (short)1411, new BlockData(51, 3), new BlockData(51, 3), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_4 = new Blocks("fire 4", (short)1412, new BlockData(51, 4), new BlockData(51, 4), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_5 = new Blocks("fire 5", (short)1413, new BlockData(51, 5), new BlockData(51, 5), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_6 = new Blocks("fire 6", (short)1414, new BlockData(51, 6), new BlockData(51, 6), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_7 = new Blocks("fire 7", (short)1415, new BlockData(51, 7), new BlockData(51, 7), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_8 = new Blocks("fire 8", (short)1416, new BlockData(51, 8), new BlockData(51, 8), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_9 = new Blocks("fire 9", (short)1417, new BlockData(51, 9), new BlockData(51, 9), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_10 = new Blocks("fire 10", (short)1418, new BlockData(51, 10), new BlockData(51, 10), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_11 = new Blocks("fire 11", (short)1419, new BlockData(51, 11), new BlockData(51, 11), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_12 = new Blocks("fire 12", (short)1420, new BlockData(51, 12), new BlockData(51, 12), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_13 = new Blocks("fire 13", (short)1421, new BlockData(51, 13), new BlockData(51, 13), false, (double)-1, (double)0, (byte)0, (byte)15, false));
        add(FIRE_14 = new Blocks("fire 14", (short)1422, new BlockData(51, 14), new BlockData(51, 14), false, (double)-1, (double)0, (byte)0, (byte)15, false));
    }

    private static void add(Blocks block)
    {
        selBlocks.put(block.id, block);
        if(block.minecraft != null) {
            if(!minecraftBlocks.containsKey(block.minecraft.id)) minecraftBlocks.put(block.minecraft.id, new HashMap<Integer, Blocks>());
            minecraftBlocks.get(block.minecraft.id).put(block.minecraft.meta, block);
        }
        if(block.pocket != null) {
            if(!pocketBlocks.containsKey(block.pocket.id)) pocketBlocks.put(block.pocket.id, new HashMap<Integer, Blocks>());
            pocketBlocks.get(block.pocket.id).put(block.pocket.meta, block);
        }
    }

    public static Blocks getSelBlock(short id)
    {
        return selBlocks.get(id);
    }

    public static Blocks getMinecraftBlock(int id, int meta)
    {
        Map<Integer, Blocks> b = minecraftBlocks.get(id);
        return b != null ? b.get(meta) : null;
    }

    public static Blocks getPocketBlock(int id, int meta)
    {
        Map<Integer, Blocks> b = pocketBlocks.get(id);
        return b != null ? b.get(meta) : null;
    }

}
