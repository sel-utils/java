/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft335.xml
 */
package sul.protocol.minecraft335.serverbound;

import java.nio.charset.StandardCharsets;

import sul.utils.*;

public class AdvencementTab extends Packet {

	public static final int ID = (int)25;

	public static final boolean CLIENTBOUND = false;
	public static final boolean SERVERBOUND = true;

	@Override
	public int getId() {
		return ID;
	}

	// action
	public static final int OPEN_TAB = (int)0;
	public static final int CLOSE_SCREEN = (int)1;

	public int action;
	public String tab;

	public AdvencementTab() {}

	public AdvencementTab(int action, String tab) {
		this.action = action;
		this.tab = tab;
	}

	@Override
	public int length() {
		return Buffer.varuintLength(action) + Buffer.varuintLength(tab.getBytes(StandardCharsets.UTF_8).length) + tab.getBytes(StandardCharsets.UTF_8).length + 1;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeVaruint(action);
		if(action==0){ byte[] df=tab.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)df.length); this.writeBytes(df); }
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		this.readVaruint();
		action=this.readVaruint();
		if(action==0){ int bvdf=this.readVaruint(); tab=new String(this.readBytes(bvdf), StandardCharsets.UTF_8); }
	}

	public static AdvencementTab fromBuffer(byte[] buffer) {
		AdvencementTab ret = new AdvencementTab();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "AdvencementTab(action: " + this.action + ", tab: " + this.tab + ")";
	}

}