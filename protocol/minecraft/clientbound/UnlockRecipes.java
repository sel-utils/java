/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft338.xml
 */
package sul.protocol.minecraft.clientbound;

import java.util.Arrays;

import sul.utils.*;

public class UnlockRecipes extends Packet {

	public static final int ID = (int)49;

	public static final boolean CLIENTBOUND = true;
	public static final boolean SERVERBOUND = false;

	@Override
	public int getId() {
		return ID;
	}

	// action
	public static final int ADD = 1;
	public static final int REMOVE = 2;
	public static final int ADD_WITHOUT_NOTIFICATION = 3;

	public int action;
	public boolean openBook;
	public boolean filtering;
	public int[] recipes = new int[0];
	public int[] bookRecipes = new int[0];

	public UnlockRecipes() {}

	public UnlockRecipes(int action, boolean openBook, boolean filtering, int[] recipes, int[] bookRecipes) {
		this.action = action;
		this.openBook = openBook;
		this.filtering = filtering;
		this.recipes = recipes;
		this.bookRecipes = bookRecipes;
	}

	@Override
	public int length() {
		int length=Buffer.varuintLength(action) + Buffer.varuintLength(recipes.length) + Buffer.varuintLength(bookRecipes.length) + 3; for(int cvabc:recipes){ length+=Buffer.varuintLength(cvabc); };for(int y9ajylzm:bookRecipes){ length+=Buffer.varuintLength(y9ajylzm); } return length;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeVaruint(action);
		this.writeBool(openBook);
		this.writeBool(filtering);
		this.writeVaruint((int)recipes.length); for(int cvabc:recipes){ this.writeVaruint(cvabc); }
		if(action==1||action==3){ this.writeVaruint((int)bookRecipes.length); for(int y9ajylzm:bookRecipes){ this.writeVaruint(y9ajylzm); } }
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		this.readVaruint();
		action=this.readVaruint();
		openBook=this.readBool();
		filtering=this.readBool();
		int bjylzm=this.readVaruint(); recipes=new int[bjylzm]; for(int cvabc=0;cvabc<recipes.length;cvabc++){ recipes[cvabc]=this.readVaruint(); }
		if(action==1||action==3){ int bjbtzncv=this.readVaruint(); bookRecipes=new int[bjbtzncv]; for(int y9ajylzm=0;y9ajylzm<bookRecipes.length;y9ajylzm++){ bookRecipes[y9ajylzm]=this.readVaruint(); } }
	}

	public static UnlockRecipes fromBuffer(byte[] buffer) {
		UnlockRecipes ret = new UnlockRecipes();
		ret.decode(buffer);
		return ret;
	}

	@Override
	public String toString() {
		return "UnlockRecipes(action: " + this.action + ", openBook: " + this.openBook + ", filtering: " + this.filtering + ", recipes: " + Arrays.toString(this.recipes) + ", bookRecipes: " + Arrays.toString(this.bookRecipes) + ")";
	}

}